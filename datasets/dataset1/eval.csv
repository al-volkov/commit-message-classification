,index,text,Corrective,Adaptive,Perfective
0,1034,    [slutload] add new extractor ,0,1,0
1,567,    usb: ehci: notify usbcore about port resumes          this patch (as1650) adds calls to the new     usb_hcd_{start end}_port_resume() functions to ehci-hcd.  now ehci     root hubs won't be runtime suspended while they are sending a resume     signal to one of their ports.          signed-off-by: alan stern <stern@rowland.harvard.edu>     tested-by: ming lei <ming.lei@canonical,1,1,0
2,426,    [spark-30188][sql] resolve the failed unit tests when enable aqe          ### what changes were proposed in this pull request?     fix all the failed tests when enable aqe.          ### why are the changes needed?     run more tests with aqe to catch bugs  and make it easier to enable aqe by default in the future.          ### does this pr introduce any user-facing change?     ,1,0,0
3,363,    si-7196 add support for refinestat splicing and extraction ,0,1,0
4,1381,    drm/i915: refactor export_fence() after i915_vma_move_to_active()          currently all callers are responsible for adding the vma to the active     timeline and then exporting its fence. combine the two operations into     i915_vma_move_to_active() to move all the extra handling from the     callers to the single site.          signed-off-by: chris wilson <chris@chris-wilson.,0,0,1
5,1136,    module_param: make bool parameters really bool (core code)          module_param(bool) used to counter-intuitively take an int.  in     fddd5201 (mid-2009) we allowed bool or int/unsigned int using a messy     trick.          it's time to remove the int/unsigned int option.  for this version     it'll simply give a warning  but it'll break next kernel version.          signed-o,0,0,1
6,268,    fix #12268 ,1,0,0
7,247,    adding increment and decrement methods to most cache drivers. ,0,1,0
8,1865,    daemon/config: fix filter type in buildkit gc config          for backwards compatibility  the old incorrect object format for     builder.gc.rule.filter still works but is deprecated in favor of array of     strings akin to what needs to be passed on the cli.          signed-off-by: tibor vass <tibor@docker.com> ,1,0,0
9,1615,    m68knommu: remove un-needed exporting of coldfire symbols          there is no reason most of the symbols enclosed in a conditional     on config_coldfire need to be exported. and they sure don't need to     be doing it in m68k_ksyms_no.c. move the dma symbols export (which     are currently needed) to the definitions of those  and remove the     rest of the exporting here.    ,0,0,1
10,1190,    refactored `watcherservice.state`          - moved it to its own top level enum `watcherstate`     - also changed the key holding the current state in the `stats` api to `watcher_state`          original commit: elastic/x-pack-elasticsearch@2e5ca90f57d9b46650481e0d74391f438a3f22c2 ,0,0,1
11,1929,"    fuse: fix writepages on 32bit          writepage requests were cropped to i_size & 0xffffffff  which meant that     mmaped writes to any file larger than 4g might be silently discarded.          fix by storing the file size in a properly sized variable (loff_t instead     of size_t).          reported-by: antonio sj musumeci <trapexit@spawn.link>     fixes: 6eaf4782eb09 (""fuse:",1,0,0
12,1814,    fixes #66981 ,1,0,0
13,1295,    [clangimporter] map u_int*_t [sic] to uint*.          these types come from <sys/types.h> indirectly and show up in a few     interesting functions like arc4random_uniform.          this commit also introduces a new test file for mapping fixed-sized integers      to eliminate boilerplate as we continue to rack up aliases for uint*.          <rdar://problem/16978349>          sw,1,1,1
14,1451,    [alsa] fix schedule_timeout usage          use schedule_timeout_{ un}interruptible() instead of     set_current_state()/schedule_timeout() to reduce kernel size.  also use     human-time conversion functions instead of hard-coded division to avoid     rounding issues.          signed-off-by: nishanth aravamudan <nacc@us.ibm.com>     signed-off-by: andrew morton <akpm@osdl.org> ,1,0,1
15,799,    [ml] allow asynchronous job deletion (#34058)          this changes the delete job api by adding     the choice to delete a job asynchronously.     the commit adds a `wait_for_completion` parameter     to the delete job request. when set to `false`      the action returns immediately and the response     contains the task id.          this also changes the handling of subsequen,0,1,0
16,166,    sema: nuke nominaltypedecl::markinvalidgenericsignature()          this would just set the nominaltypedecl's declared type to     errortype  which caused problems elsewhere.          instead  generalize the logic used for abstractfunctiondecl.     this correctly wires up the generictypeparamdecl's archetypes even     if the signature didn't validate  fixing crashes if the gener,1,0,0
17,772,    spi: pxa2xx: convert to use device_get_match_data()          convert to use device_get_match_data() instead of open coded variant.          while here  switch of_property_read_bool() to device_property_read_bool().          signed-off-by: andy shevchenko <andriy.shevchenko@linux.intel.com>     link: https://lore.kernel.org/r/20191018105429.82782-4-andriy.shevchenko@linux.intel.,0,1,0
18,891,    driver core / cpu: check if numa node is valid before bringing cpu up          there is a potential race condition between cpu_subsys_online()     and either acpi_processor_remove() or remove_memory() that execute     try_offline_node().  namely  it is possible that cpu_subsys_online()     will run right after the cpus numa node has been put offline and     cpu_to_node() execut,0,0,1
19,833,    [scsi]: fix scsi_send_eh_cmnd scatterlist handling          this fixes a regression caused by commit:          2dc611de5a3fd955cd0298c50691d4c05046db97          the sense buffer code in scsi_send_eh_cmnd was changed to use     alloc_page() and a scatter list  but the sense data copy was not     updated to match so what we actually get in the sense buffer is total     grabage st,1,0,0
20,108,    adding mongoid 2.0 support  removing mongomapper for now ,0,1,0
21,469,    ensure remote connection established and     clean remote connection prior to leader cluster restart          relates to #37681 ,0,0,1
22,847,    fixed bugs in validation classes. ,1,0,0
23,1152,    refactoring redirects ,0,0,1
24,1453,    alsa: usb-audio: do not initialize and check implicit_fb          since implicit_fb is not changed  !implicit_fb will always     be true - it is set only after these checks.     similarly  there's also no need to set it at the top of the function.          change the type of implicit_fb to bool (more appropriate).          signed-off-by: eldad zack <eldad@fogrefinery.com>     s,0,0,1
25,1345,    add the intra-op parallelism for equal operator (#28810)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/28810          similar to https://github.com/pytorch/pytorch/pull/28464 and https://github.com/pytorch/pytorch/pull/28477  we would like to enable the intra-op parallelism for layer norm. this will be mapped to the parallel performance wi,0,1,1
26,485,    branch 160346151 (#11094)          * properly handle ops that don't have a cpu kernel          piperorigin-revid: 159655906          * selected build cleanup in tensorflow/contrib/...          piperorigin-revid: 159673079          * remove redundant `get` calls on smart pointers          piperorigin-revid: 159675809          * piperorigin-revid: 159698321          * migrate ker,0,0,1
27,2033,    add base for app/polymer && add base for example/polymer-cli ,0,1,0
28,1004,    macvlan: implement bridge  vepa and private mode          this allows each macvlan slave device to be in one     of three modes  depending on the use case:          macvlan_private:       the device never communicates with any other device       on the same upper_dev. this even includes frames       coming back from a reflective relay  where supported       by the adjacent brid,0,1,0
29,1970,    deprecation patrol.          the same issues as javaconversions with respect to overloading implicit     methods making them inaccessible to view bounds. fixed javaconverters.     added a warning for when people overload parameterized implicits: in     almost all cases the name is irrelevant so there's little point in     unwittingly suffering degraded functionality. no review.,1,0,0
30,718,    test: enable linting for tests          enable linting for the test directory. a number of changes was made so     all tests conform the current rules used by lib and src directories. the     only exception for tests is that unreachable (dead) code is allowed.          test-fs-non-number-arguments-throw had to be excluded from the changes     because of a weird issue on windows,0,1,0
31,1487,    tools: replace closure-linter with eslint          pr-url: https://github.com/iojs/io.js/pull/1539     fixes: https://github.com/iojs/io.js/issues/1253     reviewed-by: jeremiah senkpiel <fishrock123@rocketmail.com>     reviewed-by: trevor norris <trev.norris@gmail.com>     reviewed-by: roman reiss <me@silverwind.io>     reviewed-by: chris dickinson <christopher.s.dickinson@gma,1,0,0
32,583,    [arm] nommu: adjust headers for !mmu arm systems          majorily based on hyok choi's patches  this fixes up the asm-arm     header files for mmuless systems.  over and above hyok's patches:          - nommu.h merged into mmu.h (it's only a structure)     - nommu_context.h is essentially the same as mmu_context.h  but       without the mm switching code.          so there's n,1,0,0
33,1872,    [media] media: vb2: fix regression on poll() for rw mode          when using a device is read/write mode  vb2 does not handle properly the     first select/poll operation.          the reason for this  is that when this code has been refactored  some of     the operations have changed their order  and now fileio emulator is not     started.          the reintroduced check to th,1,0,0
34,1598,    add implicit any error for generator with no type annotation and no yield operands ,0,1,0
35,138,    runtime: fix memory leak in swift_enumcasename()          if the value was wrapped in an existential buffer  we would never     release the original value even though it was passed in at +1.          fixes <rdar://problem/36153982>  <https://bugs.swift.org/browse/sr-6536>. ,1,0,0
36,1102,    updates xcake action to support  new `xcake make` command. (#4068)          * adds support for new `xcake make` command. ,0,1,0
37,353,    make `foreach-object` 2 times faster by reducing unnecessary allocations and boxing (#10047) ,0,0,1
38,1198,    s390/debug: improve debug_event          debug_event currently truncates the data if used with a size larger than     the buf_size of the debug feature. for lots of callers of this function      wrappers have been implemented that loop until all data is handled.          move that functionality into debug_event_common and get rid of the wrappers.          signed-off-by: sebasti,0,0,1
39,1714,    [stdlib] add hashing methods to rawrepresentable to match == ,0,1,0
40,1148,    don’t allocate array on no args          when no dependencies are present to be digested there is no reason to build an array just to turn around and turn it back into a string.          the dependencies array is not mutated in this method so we can use the same empty array across all invocations.          total allocated: 791402 bytes (7294 objects)     total allocated: 777442,0,0,1
41,967,    fix #68208 ,1,0,0
42,943,    xen/p2m: allocate p2m tracking pages on override          it is possible to add a p2m override on pages that are currently mapped     to invalid_p2m_entry; in particular  this will happen when using     ballooned pages in gntdev. this means that set_phys_to_machine must be     used instead of __set_phys_to_machine.          signed-off-by: daniel de graaf <dgdegra@tycho.nsa.gov>,0,1,0
43,48,     bug 911913 - squiggle location for unimplemented interface method diagnostic changed to reflect interface rather than class - matching vb implementation. (changeset 1252208) ,1,0,0
44,506,    staging: ft1000-pcmcia: delete unused dpram_blk typedefs          delete unused dpram_blk typedefs.          signed-off-by: ondrej zary <linux@rainbow-software.org>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,0,0,1
45,1776,    feat: add tag downloadfile in all languages (#19361) ,0,1,0
46,1849,    change internal fs translog to be less blocking  and easier to refactor later for better flush concurrency ,0,0,1
47,1489,    track call graph roots with a smallvector rather than denseset.          this will allow us to search in the order the roots are added which     should improve stability of our output. there is also an ordinal on each     node that we can use to choose order of traversing edges at a given call     site.          swift svn r21484 ,0,0,1
48,51,    net: add rbnode to struct sk_buff          yaogong replaces tcp out of order receive queue by an rb tree.          as netem already does a private skb->{next/prev/tstamp} union     with a 'struct rb_node'  lets do this in a cleaner way.          signed-off-by: eric dumazet <edumazet@google.com>     cc: yaogong wang <wygivan@google.com>     signed-off-by: david s. miller <davem@,0,1,1
49,1165,    runtime: grow stack by copying          on stack overflow  if all frames on the stack are     copyable  we copy the frames to a new stack twice     as large as the old one.  during gc  if a g is using     less than 1/4 of its stack  copy the stack to a stack     half its size.          todo     - do something about c frames.  when a c frame is in the       stack segment  it isn,0,0,1
50,1179,    add snapshot of compiler sources ,0,1,0
51,232,    all: refactor to nonglobal file systems          updates #2701     fixes #2951 ,1,0,1
52,1495,    sh: kexec jump: fix for ftrace.          save and restore ftrace state when returning from kexec jump in     machine_kexec(). follows the x86 change.          signed-off-by: paul mundt <lethal@linux-sh.org> ,1,0,0
53,1312,    staging: rtl8188eu: remove function _rtw_write32()          _rtw_write32() is a wrapper function  being used to call usb_write32().     call usb_write32() directly and drop _rtw_write32().          signed-off-by: navin patidar <navin.patidar@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
54,118,    refactored manager class to sessionmanager to be more descriptive. ,0,0,1
55,1918,    feature: add site setting to show more detailed 404 errors. (#8014)          if the setting is turned on  then the user will receive information     about the subject: if it was deleted or requires some special access to     a group (only if the group is public). otherwise  the user will receive     a generic #404 error message. for now  this change affects only the     topics ,0,1,1
56,671,    add warning to pg_unescape_bytea() when invalid parameter is passed ,0,1,0
57,825,    perf tools: add a 'struct map_groups' pointer to 'struct map_symbol'          and fill it whenever we setup a a 'struct map_symbol'  now we need to     use it  next cset.          cc: adrian hunter <adrian.hunter@intel.com>     cc: andi kleen <ak@linux.intel.com>     cc: jiri olsa <jolsa@kernel.org>     cc: namhyung kim <namhyung@kernel.org>     link: https://lkml.kernel.org/n/,0,1,1
58,159,    qed*: update to dual-license          since the submission of the qedr driver  there's inconsistency     in the licensing of the various qed/qede files - some are gplv2     and some are dual-license.     since qedr requires dual-license and it's dependent on both      we're updating the licensing of all qed/qede source files.          signed-off-by: yuval mintz <yuval.mintz@cav,0,0,1
59,572,    updated unit tests for source text container extensions ,0,0,1
60,383,    refactor(balancer) drop the orderlist property (#2748)          this removes the `orderlist` property from the balancer entity. due to a different implementation in the dns library  it is no longer required.          from #2748 ,0,0,1
61,549,    drm/i915: enable userspace to opt-out of implicit fencing          userspace is faced with a dilemma. the kernel requires implicit fencing     to manage resource usage (we always must wait for the gpu to finish     before releasing its pte) and for third parties. however  userspace may     wish to avoid this serialisation if it is either using explicit fencing     between parti,0,0,1
62,152,    make the platform benchmarks work again (#11537)          - make it compile     - removed a few pubternal usages ,1,0,0
63,878,    - switch to new export syntax     - deprecate old syntax in this front-end (use -6g for compatibility)          r=r     ocl=13831     cl=13833 ,0,1,0
64,661,    add `style/emptylines` in `.rubocop.yml` and remove extra empty lines ,0,0,1
65,1851,    feature: allow embedding topics without creating them  by id ,0,1,0
66,1808,    fix: redirect to default homepage when visiting `/login`          previously this was hard-coded to redirect to `/latest` ,1,0,0
67,1947,    2.x: rename observable base interface types for consistency (#4300) ,0,0,1
68,1958,    arm: 8847/1: pm: fix hyp/svc mode mismatch when mcpm is used          mcpm does a soft reset of the cpus and uses common cpu_resume() routine to     perform low-level platform initialization. this results in a try to install     hyp stubs for the second time for each cpu and results in false hyp/svc     mode mismatch detection. the hyp stubs are already installed at the     beg,1,0,0
69,480,    feat(cache) in-memory and shared dict caching strategy (#1688) ,0,1,0
70,1957,    add categories to crd spec          we can group custom resources into categories i.e.     use them with kubectl get all. ,0,1,0
71,730,    windows and intl fixes ,1,0,0
72,1652,    fix #1500  #1574  #3318: name generated vars uniquely          any variables generated by coffeescript are now made sure to be named to     something not present in the source code being compiled. this way you can no     longer interfere with them  either on purpose or by mistake. (#1500  #1574)          for example  `({a}  _arg) ->` now compiles correctly. (#1574)          as ,1,0,0
73,199,    x86/boot: use cc_set()/cc_out() instead of open coding it          remove open-coded uses of set instructions with cc_set()/cc_out().          signed-off-by: uros bizjak <ubizjak@gmail.com>     signed-off-by: thomas gleixner <tglx@linutronix.de>     link: https://lkml.kernel.org/r/20180629142844.15200-1-ubizjak@gmail.com ,0,0,1
74,12,    netfilter: ip6_tables: add flags parameter to ipv6_find_hdr()          this patch adds the flags parameter to ipv6_find_hdr. this flags     allows us to:          * know if this is a fragment.     * stop at the ah header  so the information contained in that header       can be used for some specific packet handling.          this patch also adds the offset parameter for inspec,0,1,0
75,1355,    add support for 'flattened object' fields. (#42541)          this commit merges the `object-fields` feature branch. the new 'flattened     object' field type allows an entire json object to be indexed into a field  and     provides limited search functionality over the field's contents. ,0,1,1
76,727,    staging: comedi: remove this_board macro in the pcmmio driver          the 'thisboard' macro depends on having a local variable with     a magic name. the codingstyle document suggests not doing this     to avoid confusion. remove the macro and use the comedi_board()     inline helper to get the dev->board_ptr information.          signed-off-by: h hartley sweeten <hsweeten@vis,0,0,1
77,1939,    fix: don't bother with negative offsets ,1,0,0
78,548,"    sdricoh_cs: add support for bay controller devices          some ricoh sd card readers seems to advertise themselves slightly differently.     this patches the driver to will recognise an additional product id  and it     appears to work perfectly.            % pccardctl info       prodid_1=""ricoh""       prodid_2=""bay controller""       prodid_3=""""       prodid_4=""""       manfid",0,1,0
79,91,    also fix flowinterleavespec          also-by: johan andrén <johan@markatta.com>     also-by: roland kuhn <rk@rkuhn.info>     also-by: martynas mickevičius <mmartynas@gmail.com> ,1,0,0
80,1258,    added image button as option for accessibility role          summary:     because we're now separating accessibilitytraits into accessibilityrole and accessibilitystate  we're going to only allow one role to be set  and allow one preset combinations of roles that make sense.          this diff adds image button as a role.          reviewed by: petetheheat          differential ,0,1,0
81,1498,    localize strings in datagrid headers          fixes #12669. addresses one part of #9674          fixes both the general code styles page and the naming styles page ,1,0,0
82,1,    [patch] inode-diet: eliminate i_blksize from the inode structure          this eliminates the i_blksize field from struct inode.  filesystems that want     to provide a per-inode st_blksize can do so by providing their own getattr     routine instead of using the generic_fillattr() function.          note that some filesystems were providing pretty much random (and incorrect)  ,1,0,0
83,947,    fix broken tests and vs solutions caused by source code reorganization and other build infra cleanup          changes:     * fix broken tests and vs solutions caused by source code reorganization     * add a check to validate generated code and solutions on prs     * backport some source code reorg to src/identity     * fix startvs.cmd if you've already run build.ps1     * add ,1,1,1
84,1668,    gitlab::shell works on shard name  not path          direct disk access is done through gitaly now  so the legacy path was     deprecated. this path was used in gitlab::shell however. this required     the refactoring in this commit.          added is the removal of direct path access on the project model  as that     lookup wasn't needed anymore is most cases.          closes ,0,0,1
85,996,    blackbox and whitebox macros          this is the first commit in the series. this commit only:     1) splits context into blackboxcontext and whiteboxcontext     2) splits macro into blackboxmacro and whiteboxmacro     3) introduces the isbundle property in the macro impl binding          here we just teach the compiler that macros can now be blackbox and whitebox      without,0,1,1
86,242,    fixed #21302 -- fixed unused imports and import *. ,0,0,0
87,2018,    smc91x: remove isa stuff from smc91x driver          isa support in smc91x is incomplete. i doubt there're any smc91x isa card.     this driver is greatly used on arm pxa platforms. hence we remove the     isa stuff from smc91x driver.          signed-off-by: luotao fu <lfu@pengutronix.de>     acked-by: steve glendinning <steve.glendinning@smsc.com>     signed-off-by: david s. ,0,0,1
88,1852,    drm/amdgpu: remove *_mc_access from display funcs          these are no longer needed now that we use the fb_location     programmed by the vbios.          acked-by: christian könig <christian.koenig@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,0,1
89,60,    merge 3.2.x branch into master (#2648)          * down-integrate internal changes to github.          * update conformance test failure list.          * explicitly import used class in nano test to avoid random test fail.          * update _gnuc_ver to use the correct implementation of atomic operation     on mac.          * maps_test.js: check whether symbol is defined before ,1,1,0
90,1976,    deps: icu 60 bump          - update to released icu 60.1  including:       - cldr 32 (many new languages and data improvements)       - unicode 10 (8 518 new characters  including four new scripts        7 494 new han characters  and 56 new emoji characters)       - utf-8 malformed bytes now handled according to w3c/whatwg spec          fixes: https://github.com/nodejs/node/iss,1,1,1
91,1415,    aggregation cleanup          - consolidated value source parsing under a single parser that is reused in all the value source aggs parsers     - consolidated include/exclude parsing under a single parser     - cleaned up value format handling  to have consistent behaviour across all values source aggs ,0,0,1
92,574,    redesign and implement volume reconstruction work          this pr is the first part of redesign of volume reconstruction work. the     changes include     1. remove dependency on volume spec stored in actual state for volume     cleanup process (unmountvolume and unmountdevice)          modify attachedvolume struct to add devicemountpath so that volume     unmount operation ca,0,0,1
93,195,    applies new string literal convention in activemodel/test          the current code base is not uniform. after some discussion      we have chosen to go with double quotes by default. ,0,0,1
94,1573,    net/mlx5e: add new counter for arfs rule insertion failures          count arfs rules insertion failure for ethtool output. in addition  move     the error print into debug prints mechanism  as it could flood the dmesg     and reduce system bw dramatically.          signed-off-by: eran ben elisha <eranbe@mellanox.com>     reviewed-by: tariq toukan <tariqt@mellanox.com>     sign,0,1,1
95,1054,    :lipstick: add username and date-time in exported file name ,0,1,0
96,1667,    deprecate /_xpack/security/* in favor of /_security/* (#36293)          * this commit is part of our plan to deprecate and ultimately remove the use of _xpack in the rest apis.          - rest api docs     - hlrc docs and doc tests     - handle rest actions with deprecation warnings     - changed endpoints in rest-api-spec and relevant file names ,0,1,1
97,1074,    [scsi] lpfc 8.2.4 : miscellaneous fixes          miscellaneous fixes:     - fix a couple of sparse complaints     - reset the fcp recovery flag when the node is not a fcp2 device.     - speed up offline prep delays     - fixed a memory leak in lpfc_mem_alloc failure path     - fixed external loopback test.     - fixed error code returned from the driver when hba is over heated.,1,0,1
98,729,"    fix misspellings of ""whether"" in comments.          ""whether"" is misspelled in various comments across the tree; this     fixes them. no code changes.          signed-off-by: adam buchbinder <adam.buchbinder@gmail.com>     signed-off-by: jiri kosina <jkosina@suse.cz> ",1,0,0
99,595,    config for the language cookie's samesite attribute (#8672)          * config for the language cookie's samesite attribute          * address feedback          * address feedback          * fix tests to reflect samesite=lax is the default now ,1,0,1
100,673,    xfs: fix missing header includes          some of the xfs source files are missing header includes  so add them     back.  sparse complains about non-static functions that don't have a     forward declaration anywhere.          signed-off-by: darrick j. wong <darrick.wong@oracle.com>     reviewed-by: christoph hellwig <hch@lst.de> ,1,0,0
101,532,    add a unified render method to actionmailer (delegates to actionview::base#render)               git-svn-id: http://svn-commit.rubyonrails.org/rails/trunk@2037 5ecf4fe2-1ee6-0310-87b1-e25e094e27de ,0,1,0
102,613,    auto-fix lint errors          reviewed by: bestander          differential revision: d3683952          fbshipit-source-id: 9484d0b0e86859e8edaca0da1aa13a667f200905 ,1,0,0
103,1682,"        fix use of variables only used in asserts.         this otherwise triggers ""unused variable"" errors in optimized build mode.          --          piperorigin-revid: 248706350 ",1,0,1
104,695,"    fix compiler warnings [-wmissing-prototypes]          add missing include statements  add missing ""static"" qualifiers or     remove functions which are not used at all.          signed-off-by: stefan weil <sw@weilnetz.de> ",1,0,1
105,852,    [vimeo] fix authentication (closes #8520) ,1,0,0
106,248,    prefer `array?` rather than `array`          slightly refactoring `postgresqlcolumn`. `array` should be readonly.     `default_function` should be initialized by `super`. `sql_type` has been     removed `[]`. since we already choose to remove it we should not change. ,0,0,1
107,712,    add test demonstrating installing a relative symlink ,0,1,0
108,1909,    hwmon: (core) add energy and humidity attribute support to new api          acked-by: punit agrawal <punit.agrawal@arm.com>     reviewed-by: jonathan cameron <jic23@kernel.org>     signed-off-by: guenter roeck <linux@roeck-us.net> ,0,1,0
109,204,    - need to change a few things to exception based error handling     - drop erroneus/useless recursivedirectoryiterator::getsubpathinfo() ,0,0,1
110,2028,    [scsi] fusion: fix compile          the prior fusion patches moved an invocation of a function      mptscsih_tmhandler()  static to mptscsih.c into mptsas.c          make the function unstatic  move the header to mptscsih.h and export it.          signed-off-by: james bottomley <james.bottomley@steeleye.com> ,1,0,0
111,1757,"    add ""inject touch"" control message          add a control message type in the protocol to forward touch events to     the device. ",0,1,0
112,514,    trivial fixes to ext\standard ,1,0,0
113,308,    switch mapping/aggregations over to java time (#36363)          this commit moves the aggregation and mapping code from joda time to     java time. this includes field mappers  root object mappers  aggregations with date     histograms  query builders and a lot of changes within tests.          the cut-over to java time is a requirement so that we can support nanoseconds     pr,0,0,1
114,977,    add assertion whitespace lint rule (#9931)          * add assertion whitespace lint rule          * fix typo          * add the word `rule` to jakefile ,1,1,0
115,1593,    [media] media: i2c: tvp7002: remove duplicate define          this patch removes duplicate #define tvp7002_module_name     form the driver file  which was also defined in media/tvp7002.h          signed-off-by: lad  prabhakar <prabhakar.csengg@gmail.com>     signed-off-by: hans verkuil <hans.verkuil@cisco.com>     signed-off-by: mauro carvalho chehab <mchehab@redhat.com> ,0,0,1
116,816,    trailing comment tests for parameters  fixes the trailing // comments and parameter indentation ,1,0,0
117,510,    [next] revert to use ecma 5 in uglifyoptions (#4234)          * revert to use ecma 5 in uglifyoptions          * remove explicit ecma version from uglifyoptions settings          the defaults are already what we want          * be explicit of where we use ecma: 8 and ecma: 5 ,0,0,1
118,352,    move the keras api to tf.keras.          piperorigin-revid: 167638421 ,0,1,0
119,126,    drm/i915/kbl: add wadisablelsqcroperfforocl          extend the scope of this workaround  already used in skl      to also take effect in kbl.          v2: fix kbl_revid_e0 (matthew)          references: hsd#2132677     cc: matthew auld <matthew.william.auld@gmail.com>     signed-off-by: mika kuoppala <mika.kuoppala@intel.com>     reviewed-by: matthew auld <matthew.auld@intel.c,1,1,0
120,1239,    getenv: almost no one wants the error  so make it return a string that may be empty.     getenverror is the new name for the old routine that returns an error too.          r=rsc     delta=35  (7 added  7 deleted  21 changed)     ocl=30818     cl=30821 ,0,0,1
121,1773,    add api to overwrite the float interface of quantized tflite model. currently supports int8 and uint8.          also added standalone c++ main function.          piperorigin-revid: 299841432     change-id: i0fc01bbc929e8ee232f0cf2356ac83294aeafada ,0,1,0
122,722,    add an @inline(__always) function attribute.          this will let the performance inliner inline a function even if the costs are too high.     this attribute is only a hint to the inliner.     if the inliner has other good reasons not to inline a function      it will ignore this attribute. for example if it is a recursive function (which is     currently not supported by th,0,1,0
123,896,    selinux: print leading 0x on ioctlcmd audits          ioctlcmd is currently printing hex numbers  but their is no leading     0x. thus things like ioctlcmd=1234 are misleading  as the base is     not evident.          correct this by adding 0x as a prefix  so ioctlcmd=1234 becomes     ioctlcmd=0x1234.          signed-off-by: william roberts <william.c.roberts@intel.com>     sig,1,0,0
124,517,    metric: clear useless proxy statistics data ,0,0,1
125,93,    time: add get_timespec64 and put_timespec64          add helper functions to convert between struct timespec64 and     struct timespec at userspace boundaries.          this is a preparatory patch to use timespec64 as the basic type     internally in the kernel as timespec is not y2038 safe on 32 bit systems.     the patch helps the cause by containing all data conversions at t,0,1,1
126,1298,    mac80211: don't store napi struct          when introducing multiple rx queues  a single napi struct will not     be sufficient. instead of trying to store multiple  simply change     the api to have the napi struct passed to the rx function. this of     course means that drivers using rx_irqsafe() cannot use napi  but     that seems a reasonable trade-off  particularly since o,0,0,1
127,790,    [gardening] fix some recently introduced typos. ,1,0,0
128,1394,    refactor: emptylistcta (#18516)          * rewrite emptylistcta props and start removing css classes          * add watchdepth onclick          * emptylistcta with react in annotaitons/editor          * begin conversion of dashlinks editor emptylistcta          * use react component in dashlinks  variables and teamgroupsync          * remove scss file and add emotion styles    ,0,1,1
129,1313,    cpufreq: governor: fix typos in comments           - 'governer' should be 'governor'.      - 's' is used for siemens (electrical conductance) in si units         so use small 's' for seconds.          signed-off-by: stratos karafotis <stratosk@semaphore.gr>     acked-by: viresh kumar <viresh.kumar@linaro.org>     signed-off-by: rafael j. wysocki <rafael.j.wysocki@intel.com> ,0,0,1
130,495,    filter ts only keywords from js file completion     fixes #29212 ,1,0,0
131,1473,    mac80211: remove ieee80211_tx_info from rate_control_apply_mask signature          remove unnecessary ieee80211_tx_info pointer from rate_control_apply_mask     signature. rate_control_apply_mask() will be used to define a ratemask in     rate_control_set_rates() for station rate table          signed-off-by: lorenzo bianconi <lorenzo.bianconi83@gmail.com>     signed-off-by: jo,0,0,1
132,716,    treewide: replace gplv2 boilerplate/reference with spdx - rule 167          based on 1 normalized pattern(s):            this program is free software you can redistribute it and or modify       it under the terms of the gnu general public license as published by       the free software foundation version 2 of the license this program       is distributed in the hope that it wi,0,0,1
133,207,    tree-wide: convert open calls to remove spaces to skip_spaces() lib function          makes use of skip_spaces() defined in lib/string.c for removing leading     spaces from strings all over the tree.          it decreases lib.a code size by 47 bytes and reuses the function tree-wide:        text    data     bss     dec     hex filename       64688     584     592   65864   101,0,0,1
134,875,    fix animation on layout ,1,0,0
135,1602,    perf/x86/intel: add kaby lake support          add kaby lake mobile and desktop models for rapl  cstate and uncore     matching skylake.          signed-off-by: srinivas pandruvada <srinivas.pandruvada@linux.intel.com>     cc: peterz@infradead.org     cc: kan.liang@intel.com     cc: bigeasy@linutronix.de     cc: dave.hansen@linux.intel.com     cc: piotr.luc@intel.com     cc: da,0,1,0
136,1149,    rewrite imports in rntester to use standard paths (#24317)          summary:     see https://github.com/facebook/react-native/issues/24316 for the motivation. this commit rewrites the imports in the rntester project.          [general] [changed] - replaced haste-style imports with standard path-style imports for rntester     pull request resolved: https://github.com/facebook/re,0,0,1
137,1623,    lots of clean up and code review feedback addressed ,0,0,1
138,1594,"    [spark-25029][build][core] janino ""two non-abstract methods ..."" errors          ## what changes were proposed in this pull request?          update to janino 3.0.9 to address java 8 + scala 2.12 incompatibility. the error manifests as test failures like this in `expressionencodersuite`:          ```     - encode/decode for seq of string: list(abc  xyz) *** failed ***     java.",1,0,0
139,978,    add razor shims to externalaccess.razor.          - this is the first step to removing ivt to razor assemblies from core roslyn assemblies. once razor is able to consume these changes and move to the new apis we can entirely remove the ivts from roslyn assemblies.     - brought razor's `idynamicfileinfoprovider` implementation over to the externalaccess.razor package and built ,0,1,0
140,1311,    integrate healthcheck to all eshop services and apps     integrate webstatus with healthcheck ,0,1,0
141,1830,    test(ivy): root cause analysis for e2e tests in common (#28506)          adds root causes to the e2e test failures in `common`.          this pr resolves fw-1011.          pr close #28506 ,0,1,0
142,1879,    removed `taghelper` infrastructure `using` statements.          - the using statements had a chance to conflict with user code. removed them and changed the default configured type names to be `global::` full name based.     - updated test file `taghelperdescriptor.typename`s to have namespaces to make them easier to read.          #580 ,0,0,1
143,1389,    fs: add do_epoll_*() helpers; remove internal calls to sys_epoll_*()          using the helper functions do_epoll_create() and do_epoll_wait() allows us     to remove in-kernel calls to the related syscall functions.          this patch is part of a series which removes in-kernel calls to syscalls.     on this basis  the syscall entry path can be streamlined. for details  see  ,0,1,1
144,958,    organize all imports in ts extension ,0,0,1
145,1789,    * fix bug #47370 (bc breakage of array_unique()) ,1,0,0
146,34,    enable go modules (#5835)          * remove vendor          * enable go modules          * ci: add command to fetch dependencies          * ci: update setting          * ci: update settings          * require go 1.11          * rename module name to gogs.io/gogs ,0,1,1
147,311,"    fsck-cache: read the default reference information even when     not doing reachability analysis.          this avoids the dangling head problem  and means that just a     plain ""git-fsck-cache"" with no parameters will dtrt. ",0,0,1
148,1697,    [ml] improve response format of data frame stats endpoint (#44350)          this change adjusts the data frame transforms stats     endpoint to return a structure that is easier to     understand.          this is a breaking change for clients of the data frame     transforms stats endpoint  but the feature is in beta so     stability is not guaranteed.          closes #43767 ,0,0,1
149,1463,    mm: remove include/linux/bootmem.h          move remaining definitions and declarations from include/linux/bootmem.h     into include/linux/memblock.h and remove the redundant header.          the includes were replaced with the semantic patch below and then     semi-automated removal of duplicated '#include <linux/memblock.h>          @@     @@     - #include <linux/bootmem.h>,0,0,1
150,627,    drm/amd/display: fix i2c write flag.          i2c_m_rd was translated to write instead of read.          signed-off-by: andrey grodzovsky <andrey.grodzovsky@amd.com>     reviewed-by: harry wentland <harry.wentland@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,0,0
151,1799,    bcma: fix bcm4716/bcm4748 i2s irqflag          the default irqflag assignment for the i2s core on some broadcom     4716/4748 devices is invalid and needs to be corrected (from the     broadcom sdk).          signed-off-by: nathan hintz <nlhintz@hotmail.com>     acked-by: hauke mehrtens <hauke@hauke-m.de>     signed-off-by: john w. linville <linville@tuxdriver.com> ,1,0,0
152,1376,    create life-time regions for flow captures in control flow graph. (#28100)          create control flow graph regions to designate life-time of flow captures in a control flow graph. a region should start as soon as a capture is needed to accurately represent the order of evaluation within operations involving control of flow. however  it should not start too soon. for example ,0,1,0
153,1862,    remove duplicated import ,0,0,1
154,1843,    refactor actuator package locations          restructure actuator packages to improve structure. the following     changes have been made:           - separate actuator and actuator auto-configuration into different        modules.      - move endpoint code into `spring-boot-actuator`.      - move `endpoint` implementations from a single package into        technology specific ,0,0,1
155,1142,    build: remove duplicate devtools sources (#14522)          * build: remove duplicate devtools sources          * build: create separate target for chrome sources          * move sources that are always depended on by electron        starting with security_state_tab_helper.{cc|h}     * add //component/strings to pak for devtools security tab          * fix: allow specifying type,1,1,1
156,378,"    revert ""mwifiex: retrieve correct max_power information in reg_notifier handler""          this reverts commit 34202e28fe7fc8551313f9a035a8857db83de757          we made ""34202ee.."" because we didn't support custom regulatory rules     at that time. but now we use our own custom regulatory rules  so it     needs to be changed back.          also  chan->max_power calculations in c",0,0,1
157,505,    mfb: fixed bug #37671 (mysqli extension fails to recognize bit column). ,1,0,0
158,650,    fix lint for moved reactnative ,1,0,0
159,930,    move fieldpath and errors to a sub-package          this makes the naming and reading a lot simpler. ,0,0,1
160,1707,    drm: remove superflous linux/fb.h includes          everyone who uses the fbdev emulation helpers doesn't need to include     fb.h directly. remove it.          reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: daniel vetter <daniel.vetter@ffwll.ch>     link: http://patchwork.freedesktop.org/patch/msgid/1470847958-28465-3-git-send-email-daniel.vetter@ffwl,0,0,1
161,910,    cleanup src/vs/platform/environment/node/argv.ts. fixes #76239 ,1,0,0
162,862,"    hv_netvsc: fix a network regression after ifdown/ifup          recently people reported the nic stops working after     ""ifdown eth0; ifup eth0"". it turns out in this case the tx queues are not     enabled  after the refactoring of the common detach logic: when the nic     has sub-channels  usually we enable all the tx queues after all     sub-channels are set up: see rndis_set",1,0,1
163,616,    add support for distributionstrategy in tf.keras.          piperorigin-revid: 206882998 ,0,1,0
164,609,    further normalizations  uint vs uint32_t          fix merge mistake          yet one more replacement run ,1,0,0
165,1998,    aws: fixes elb creation with multiple subnets per az          only takes the first available subnet in a az  ignore other subnets     and log warning about this.          removes aws region comparison for subnet azs. a vpc is only in a single     aws region.          fixes #12381 ,1,0,0
166,728,    fix(http): invalidstateerror response body          check on null value failed with last version of mozilla.     check on undefined type instead. ,1,0,0
167,269,    test-bot: fix multiline regex. ,1,0,0
168,281,    [media] dvb-core: add support for a dvbv5 get_frontend() callback          creates a dvbv5 get_frontend call  renaming the dvbv3 one to     get_frontend_legacy()  while not all frontends are converted.          after the conversion for all drivers  get_frontend_legacy()     will be removed.          signed-off-by: mauro carvalho chehab <mchehab@redhat.com> ,0,1,1
169,698,"    eliminate direct access to size/strides of thtensor; replace them with std::vector (#9561)          summary:     * thtensor now stores `sizes_` and `strides_` which is a `std::vector<int64_t>`     * anywhere a ""public"" api function made use of a int64_t* of sizes  i opted to just finagle it out of the tensor using thtensor_getsizeptr rather than try to rewrite all of these site",0,0,1
170,927,    [split] mavenize all finagle tests.          rb_id=65068 ,0,0,1
171,884,    improved 'django-admin runserver' so that it explicitly tells you how to stop it. also trapped keyboardinterrupt so stopping it doesn't give an ugly traceback.          git-svn-id: http://code.djangoproject.com/svn/django/trunk@264 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,0,0,1
172,1561,    drm/nouveau: port all engines to new engine module format          this is a huge commit  but it's not nearly as bad as it looks - any problems     can be isolated to a particular chipset and engine combination.  it was     simply too difficult to port each one at a time  the compat layers are     *already* ridiculous.          most of the changes here are simply to the glue  t,0,1,1
173,484,    fix flaky experiment_test.     change: 150289601 ,1,0,0
174,347,    fix compilation/verify works          original commit: elastic/x-pack-elasticsearch@62001c83cb9b508b82cd2845554b15b1e19ed1e9 ,1,0,0
175,1938,    fix golint error under scheduler/algorithm/priorities. ,1,0,0
176,1146,    create an analyzer to warn users not to decorate filters on page handler methods          fixes #7684 ,1,0,0
177,1633,    remove redundant logic for uninstalling tomcat's url stream handler factory          closes gh-8622 ,0,0,1
178,208,    [form] fixed display of empty values in datetype  timetype and datetimetype if they are not required ,1,0,0
179,256,    refactor `api::helpers` into `api::helpers::core` and `api::helpers::authentication` ,0,0,1
180,1854,    added endpoint routing support (#7608)          - basic endpoint routing support to for signalr hubs  connectionhandler and iconnectionbuilder endpoints     - updated all functional tests and samples to use it     - added all attributes as metadata from hubs and connectionhandlers     - added a test to verify client is rejected if auth is ineffective ,0,1,0
181,598,    expose c10 cuda ops to caffe2 (#18036)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/18036          - add macros to export c10 cuda operators to caffe2 frontend     - instead of having a separate caffe2 registry for the c10 operator wrappers  use the existing caffe2 registries          reviewed by: ezyang          differential revision: d1,0,0,1
182,1846,    blackfin: optimize fixed code handling for the most common case          the majority of the time we are returning to user space  it is not in the     fixed atomic code region.  so rather than branch to a function where we     check the pc and return  do the check inline and branch only when needed.          also  tweak some of the fixed code handling based on assumptions we ar,1,0,1
183,1861,    fix typo in lxc_template.go          signed-off-by: arnaud porterie <arnaud.porterie@docker.com> ,1,0,0
184,1346,"    add a diagnostic source event that fires when a route is matched (#11685)          * add a diagnostic source event that fires when a route is matched     - usually more information becomes available about a request once route is matched. this event shoud allow diagnositc systems to enlighten the typical ""begin request"" metadata to include more information about the matched rout",0,1,1
185,748,    mfh: resolve coverity issue #224 ,1,0,0
186,22,    - refix bug #43840.     - fix bug #43841.     - remove redundant trailing dots from the error messages.     - fix tests. ,1,0,0
187,320,    fix shouldruntest to avoid showing skipped tests as passed.          change shouldruntest to return a boolean and a message to tell the reason that     the test is skipped. change runtest to call skiptest with the reason that the     test is skipped instead of returning a pass status.          previously  tests that are skipped because shouldruntest returns false are     shown ,1,0,0
188,985,    fix ocl::equalizehist mismatch ,1,0,0
189,1226,    hlrc: implement get-user-privileges api (#36292)          this adds the _security/user/_privileges api to the high     level rest client.          this also makes some changes to the java model for the role apis     in order to better accommodate the getprivileges api ,0,1,0
190,1535,    [spark-14355][build] fix typos in exception/testcase/comments and static analysis results          ## what changes were proposed in this pull request?          this pr contains the following 5 types of maintenance fix over 59 files (+94 lines  -93 lines).     - fix typos(exception/log strings  testcase name  comments) in 44 lines.     - fix lint-java errors (maxlinelength) in 6,1,0,0
191,1960,    fix precedence of playmagicforjava implicits vs. passed ones (#8654)          * enable twirl for play-java project          * test: passed messages precede playmagicforjava.implicitjavamessages          * play.i18n.messages is a messagesprovider now          * implicitjavamessages type should be a messagesprovider          * test: passed lang precedes playmagicforjava.implicitj,1,1,0
192,266,    ext3: make ext3 mount default to barrier=1          this patch turns on barriers by default for ext3.  mount -o barrier=0     will turn them off.  based on a patch from chris mason in the suse tree.          signed-off-by: chris mason <chris.mason@oracle.com>     signed-off-by: christoph hellwig <hch@lst.de>     acked-by: eric sandeen <sandeen@redhat.com>     acked-by: jan kara,0,0,1
193,806,    deps: update v8 to 5.4.500.27          pick up latest commit from the 5.4-lkgr branch.          deps: edit v8 gitignore to allow trace event copy     deps: update v8 trace event to 315bf1e2d45be7d53346c31cfcc37424a32c30c8     deps: edit v8 gitignore to allow gtest_prod.h copy     deps: update v8 gtest to 6f8a66431cb592dad629028a50b3dd418a408c87          pr-url: https://github.c,0,0,1
194,1117,    pinctrl: add checks for empty function names          this is needed as otherwise we can get the following when     dealing with buggy data in a pinmux driver for     pinmux_search_function:          unable to handle kernel null pointer dereference at virtual     address 00000000     ...     pc is at strcmp+0xc/0x34     lr is at pinmux_get+0x350/0x8f4     ...          as we nee,1,1,0
195,1446,    avoid unnecessary eager creation of gradle tasks (#45098) ,0,0,1
196,1657,    gfs2: remove unnecessary extern declarations          make log operations statuc; they are only used locally.          signed-off-by: andreas gruenbacher <agruenba@redhat.com> ,0,0,1
197,305,    packet: fix using smp_processor_id() in preemptible code          this patches fixes the following warning by replacing smp_processor_id()     with raw_smp_processor_id():          [   11.120893] bug: using smp_processor_id() in preemptible [00000000] code: arping/3510     [   11.120913] caller is .packet_sendmsg+0xc14/0xe68     [   11.120920] cpu: 13 pid: 3510 comm: arping not,1,0,0
198,742,    selftests/powerpc: make reg.h common to all powerpc selftests          currently there is a reg.h in pmu/ebb that has defines that are useful     in other powerpc selftests so move this up into selftests/powerpc     folder. also include in utils.h - as this is often used in self tests.     add in some other useful register defines.          signed-off-by: rashmica gupta <rashmi,0,0,1
199,1527,"    staging: lustre: remove typedef and update cfs_hash struct          remove typedef keyword and rename the cfs_hash_t struct to     cfs_hash in libcfs_hash.h. these changes resolve the ""do     not add new typedefs"" warning generated by checkpatch.pl     and meet kernel coding style.          struct variables in other header and source files that     depend on libcfs_hash.h are u",0,0,1
200,120,    net: ethernet: ti: cpts: clean up event list if event pool is empty          when a cpts user does not exit gracefully by disabling cpts     timestamping and leaving a joined multicast group  the system     continues to receive and timestamps the ptp packets which eventually     occupy all the event list entries.  when this happns  the added code     tries to remove some list e,0,0,1
201,384,"    codemod to import * as react from ""react""; (#18102)          * import * as react from ""react"";          this is the correct way to import react from an es module since the es     module will not have a default export. only named exports.          * import * as reactdom from ""react-dom"" ",0,0,1
202,5,    ipvs: allow null argument to ip_vs_scheduler_put()          this simplifies caller logic sightly.          signed-off-by: simon horman <horms@verge.net.au>     acked-by: julian anastasov <ja@ssi.bg> ,0,0,1
203,96,    add a triggered errors assertion helper ,0,1,0
204,1387,    backport windows scheduling fixes ,1,0,0
205,1018,    replicate write actions before fsyncing them (#49746)          this commit fixes a number of issues with data replication:          - local and global checkpoints are not updated after the new operations have been fsynced  but     might capture a state before the fsync. the reason why this probably went undetected for so     long is that asyncioprocessor is synchronous if you i,1,0,0
206,1586,    fix: all basic integer settings should have max value validation ,1,0,0
207,2035,    fix add_issues_modal_spec ,1,0,0
208,562,    fix memory leak in rctsafeareaview          summary:     according to the retain code collector  rctsafeareaview is in a cycle:     -> _bridge -> rctcxxbridge -> _moduledatabyname -> __nsdictionarym -> rctmoduledata -> _instance -> rctuimanager -> _viewregistry -> __nsdictionarym -> rctsafeareaview     this should break the cycle.          reviewed by: shergin          differen,1,0,0
209,1038,    stdlib: implement new print() api          rdar://20775683          swift svn r28309 ,0,1,0
210,2004,    godoc: if there is no search box  don't run the respective js code          fixes a js crash which prevented the automatically generated     table of contents to not appear.          r=adg  bradfitz     cc=golang-dev     https://golang.org/cl/4460041 ,1,0,0
211,272,    rxrpc: pass the last tx packet marker in the annotation buffer          when the last packet of data to be transmitted on a call is queued  tx_top     is set and then the rxrpc_call_tx_last flag is set.  unfortunately  this     leaves a race in the ack processing side of things because the flag affects     the interpretation of tx_top and also allows us to start receiving reply,0,0,1
212,230,    cleanup searchphasecontroller interface (#23844)          searchphasecontroller is tighly coupled to atomicarray which makes     non-dense representations of results very difficult. this commit removes     the coupling and cuts over to collection rather than list to ensure no     order or random access lookup is implied. ,0,0,1
213,1169,    added transport filtering          requests are now auth'ed on the transport level as well (in addition to the transport action level). this is required as some internal requests are not executed as actions  thus not going through the auth process in the transport action. since we have n2n authentication  we also assume here that requests that are not associated with an authent,0,1,0
214,876,    fixed #2109 -- convert old-style classes to new-style classes throughout django. thanks  nicola larosa          git-svn-id: http://code.djangoproject.com/svn/django/trunk@3113 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,1,0,0
215,98,"    [patch] ib/ipath: purge sps_lid and sps_mlid arrays          the two arrays only had space for 4 units.          also changed from ipath_set_sps_lid() to ipath_set_lid(); the sps was     leftover.          signed-off-by: dave olson <dave.olson@qlogic.com>     signed-off-by: bryan o'sullivan <bryan.osullivan@qlogic.com>     cc: ""michael s. tsirkin"" <mst@mellanox.co.il>     cc: r",1,0,0
216,415,    ensure each lambda  including an implicit lambda in a query expression  has its own scope for declaration expressions within it. fixes https://roslyn.codeplex.com/workitem/2. this is a port of https://roslyn.codeplex.com/sourcecontrol/changeset/e79e272450264fb41a2f7f39b3fbaf3a0e73021b. (changeset 1250867) ,1,0,0
217,465,    rxrpc: fix handling of call quietly cancelled out on server          sometimes an in-progress call will stop responding on the fileserver when     the fileserver quietly cancels the call with an internally marked abort     (rx_call_dead)  without sending an abort to the client.          this causes the client's call to eventually expire from lack of incoming     packets directe,0,0,0
218,1893,    refactored portability support ,0,0,1
219,104,    ib/mlx5: add flow counters binding support          associates a counters with a flow when ib_flow_spec_action_count is part     of the flow specifications.          the counters user space placements of location and description (index      description) pairs are passed as private data of the counters flow     specification.          reviewed-by: yishai hadas <yishaih@mellanox.,0,1,0
220,1230,    module: replace default paths in require.resolve()          prior to this commit  the default search paths would be included     in the require.resolve() process  even if user specified paths     were provided. this commit causes the default paths to be     omitted by using a fake parent module.          refs: https://github.com/nodejs/node/issues/5963     pr-url: https://githu,0,0,1
221,681,    [irgen] move the protocol conformance descriptor builder.          place it right there next to the witnesstablebuilder  because the     two should be the same thing. nfc ,0,0,1
222,1954,    arm: pxa: clean up set_pxa_fb_info          set_pxa_fb_info() has been a long-standing wart in the naming scheme     of the pxa_set_xxx_info() functions.  this renames the function  and     combines set_pxa_fb_parent() with set_pxa_fb_info().          signed-off-by: russell king <rmk+kernel@arm.linux.org.uk>     acked-by: igor grinberg <grinberg@compulab.co.il>     signed-off-b,0,0,1
223,151,    fixed #30704 -- fixed crash of jsonfield nested key and index transforms on expressions with params.          thanks florian apolloner for the report and helping with tests. ,1,0,0
224,366,    staging: lustre: ptlrpc/ldlm: remove ccflags from makefile          fix up the relative paths in the .c files to properly build with the     makefile change.          cc: andreas dilger <andreas.dilger@intel.com>     cc: oleg drokin <oleg.drokin@intel.com>     cc: hpdd-discuss <hpdd-discuss@lists.01.org>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
225,955,    count doesn't work for empty query (discrepancy with search api)  closes #1377. ,1,0,0
226,1952,    add sig comparer code ,0,1,0
227,1880,    fix display of enterable tournaments on homepage ,1,0,0
228,364,    fixed #21216 -- allow `onetoonefield` reverse accessor to be hidden. ,1,0,0
229,1553,    ath9k_hw: fix full sleep setup for ar9271          after telling the ar9271 to go into full sleep we do not need     to clear the rtc reset signal.          signed-off-by: sujith <sujith.manoharan@atheros.com>     signed-off-by: vasanthakumar thiagarajan <vasanth@atheros.com>     signed-off-by: luis r. rodriguez <lrodriguez@atheros.com>     signed-off-by: john w. linville <linv,1,0,0
230,1528,    build(aio): refactor dgeni packages          this is to tidy up the `author-packagse`  which currently duplicates a     lot of the configuration in the main packages. we need to     dry this up so that we don't fall foul of a change in one being missed in     the other. ,0,0,1
231,324,    ethernet: altera: add missing of_node_put          of_node_put needs to be called when the device node which is got     from of_parse_phandle (or of_node_get) has finished using.          signed-off-by: peter chen <peter.chen@nxp.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,1,0
232,1338,    rename csswraptype to shorter csswrap matching java and csharp          reviewed by: gkassabli          differential revision: d4174257          fbshipit-source-id: ba0bfab996ba158b07863d8c72cf2a41262c9592 ,0,0,1
233,1621,    staging: rtl8187se: fix c99 style commenting in dot11d.c          this patch fixes the following checkpatch.pl issues in     ieee80211/dot11d.c-     error: do not use c99 // comments          signed-off-by: rashika kheria <rashika.kheria@gmail.com>     reviewed-by: josh triplett <josh@joshtriplett.org>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
234,815,    iio:adc: drop assign iio_info.driver_module and iio_trigger_ops.owner          the equivalent of both of these are now done via macro magic when     the relevant register calls are made.  the actual structure     elements will shortly go away.          signed-off-by: jonathan cameron <jonathan.cameron@huawei.com>     reviewed-by: lars-peter clausen <lars@metafoo.de> ,0,0,1
235,1423,    asoc: sigmadsp: fix simple_return.cocci warnings          sound/soc/codecs/sigmadsp.c:656:1-4: warning: end returns can be simpified and declaration on line 636 can be dropped           simplify a trivial if-return sequence.  possibly combine with a      preceding function call.     generated by: scripts/coccinelle/misc/simple_return.cocci          signed-off-by: fengguang wu <,1,0,0
236,63,    acpi / pm: add missing pm_generic_complete() invocation          add missing invocation of pm_generic_complete() to     acpi_subsys_complete() to allow ->complete callbacks provided     by the drivers of devices using the acpi pm domain to be executed     during system resume.          fixes: f25c0ae2b4c4 (acpi / pm: avoid resuming devices in acpi pm domain during system suspen,1,0,0
237,80,    fix group formatting and padding.          very small or large numbers use exponent notation when converted to     strings.  if grouping is enabled and there is no decimal  the exponent     wasn’t being ignored  so the group separator was in the wrong place.          this also fixes a bug relating to padding and thousands grouping: the     padding calculation assumed a grouping,1,0,0
238,1580,    add android log when trying to add a view into a non viewgroup          summary:     easy diff to add extra logging when fabric tries to add a view inside a view that is not a viewgroup          changelog: [internal]          reviewed by: joshuagross          differential revision: d19737506          fbshipit-source-id: ecb858820de7befc385e725c45b537359e39c0e7 ,0,1,0
239,1493,    fix some mismatch ,1,0,0
240,167,    iwlagn: separate init calib and rt calib          my previous patch for init calib cfg disable a set of calibration for both     init and runtime which cause performance issue  fix it          signed-off-by: wey-yi guy <wey-yi.w.guy@intel.com>     signed-off-by: john w. linville <linville@tuxdriver.com> ,1,0,0
241,922,    convert signalr projects to build with projectreference (#6457)          part of #4246          changes:     * update source code layout to follow the new conventions for this repo     * update project files to use `<reference>`     * update targets to build npm packages     * update buildtools to support custom 'restore' and 'test' targets ,0,0,1
242,122,"    staging: exfat: fix spelling mistake ""maont"" -> ""mount""          there is a spelling mistake in a kernel info message. fix it.          signed-off-by: colin ian king <colin.king@canonical.com>     link: https://lore.kernel.org/r/20191114221509.10728-1-colin.king@canonical.com     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ",1,0,0
243,1635,    staging: most: core: remove context pointer          this patch removes the unused context pointer that was meant to provide the     opportunity to store context information.          signed-off-by: christian gromm <christian.gromm@microchip.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
244,926,    staging: lustre: missed a few cases of using null instead of 0          it is preferable to use null instead of 0 for pointers. this fixes sparse     warnings such as:          lustre/fld/fld_request.c:126:17: warning: using plain integer as null pointer          the second parameter of class_match_param() was changed to a const  to     be able to remove a cast in one user  to ,0,0,1
245,1858,    added `sort_mode` option that defines what value to pick in the case the sort field is multi-valued.          the `min` and `max` sort modes are supported for all field types. either the lowest value or the highest value is picked. in addition to that number based fields also support `sum` and `avg` as sort mode. if `sum` sort mode is used then all the values for a field and be,0,1,0
246,1790,    fixed bug #54180 (parse_url() incorrectly parses path when ? in fragment) ,1,0,0
247,1725,    mips: alchemy: xxs1500 pcmcia driver rewrite          rewritten xxs1500 pcmcia socket driver  standalone (doesn't depend on     au1000_generic.c) and added carddetect irq support.          signed-off-by: manuel lauss <manuel.lauss@gmail.com>     cc: florian fainelli <florian@openwrt.org>     cc: linux-pcmcia <linux-pcmcia@lists.infradead.org>     signed-off-by: ralf baechle <ra,0,1,1
248,1434,    license cleanup: add spdx license identifier to uapi header files with no license          many user space api headers are missing licensing information  which     makes it hard for compliance tools to determine the correct license.          by default are files without license information under the default     license of the kernel  which is gplv2.  marking them gplv2 would ex,0,1,1
249,1655,    crypto: use err_cast          use err_cast(x) rather than err_ptr(ptr_err(x)).  the former makes more     clear what is the purpose of the operation  which otherwise looks like a     no-op.          the semantic patch that makes this change is as follows:     (http://coccinelle.lip6.fr/)          // <smpl>     @@     type t;     t x;     identifier f;     @@          t f (...) ,0,0,1
250,1171,"    finagle-thrift: move richparam from c.t.f to c.t.f.thrift          summary: problem/solution:          `richclientparam` and `richserverparam` should be in in     `com.twitter.finagle.thrift` package instead of `com.twitter.finagle"".          jira issues: csl-5305          tbr=true          differential revision: https://phabricator.twitter.biz/d97196 ",0,0,1
251,605,    ice: introduce ice_dev_onetime_setup          ice_dev_onetime_setup contains a couple of driver workarounds for current     firmware limitations. these workarounds are expected to go away once     these limitations are fixed in the firmware.          on a firmware release that has these issues addressed  these workarounds     (while unnecessary) will not break anything.        ,1,1,0
252,2001,    refactor: update paths from modules/@angular to packages ,0,0,1
253,1579,    merge pull request #15510 from seiko2plus:issue15506          * core: rework and optimize simd implementation of dotprod            - add new universal intrinsics v_dotprod[int32]  v_dotprod_expand[u&int8  u&int16  int32]  v_cvt_f64(int64)       - add a boolean param for all v_dotprod&_expand intrinsics that change the behavior of addition order between         pairs in some pl,0,1,1
254,871,    fixed mongodb storage missing time range. fixed ui not searching properly. removed unnecessary time query. ,1,0,1
255,1848,    add opds support     this pr implements a simple opds browser which can be launched     from filemanager menu. ,0,1,0
256,19,    ib/{core hw}: have ib_umem_get extract the ib_ucontext from ib_udata          ib_umem_get() can only be called in a method callback  which always has a     udata parameter. this allows ib_umem_get() to derive the ucontext pointer     directly from the udata without requiring the drivers to find it in some     way or another.          signed-off-by: jason gunthorpe <jgg@mellanox,1,0,0
257,1611,    rubocop: automatic rule fixes. ,1,0,0
258,1201,    powerpc: use generic memcpy code in little endian          we need to fix some endian issues in our memcpy code. for now     just enable the generic memcpy routine for little endian builds.          signed-off-by: anton blanchard <anton@samba.org>     signed-off-by: benjamin herrenschmidt <benh@kernel.crashing.org> ,0,1,0
259,1823,    cmd/internal/objfile: add arm64 disassembler support          fixes #19157          change-id: ieea286e8dc03929c3645f3113c33df569f8e26f3     reviewed-on: https://go-review.googlesource.com/58930     reviewed-by: cherry zhang <cherryyz@google.com> ,1,1,0
260,965,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/razor/tree/fd4572874e41ca3af803b0b2c71955505dd4bde5 ,0,0,1
261,478,    ftrace: type cast filter+verifier          the mmiotrace map had a bug that would typecast the entry from     the trace to the wrong type. that is a known danger of c typecasts      there's absolutely zero checking done on them.          help that problem a bit by using a gcc extension to implement a     type filter that restricts the types that a trace record can be     cast i,1,0,0
262,1243,    - fixed #52660 (custom process title for fpm) ,1,0,0
263,1287,    runtime/internal/sys: use standard generated code header          this change implements the convention for generated code header agreed upon in https://golang.org/s/generatedcode.     additionally run go generate.     also update some comments.          updates #13560          change-id: if45f91b93aaa0d43280c2c4630823bc4d2dc7d3a     reviewed-on: https://go-review.googlesource.,0,0,1
264,1781,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/authsamples/tree/8f471bf65bbc6a5de4425da64a64ee262aafbadb ,0,0,1
265,1398,    [twsk]: introduce struct timewait_sock_ops          so that we can share several timewait sockets related functions and     make the timewait mini sockets infrastructure closer to the request     mini sockets one.          next changesets will take advantage of this  moving more code out of     tcp and dccp v4 and v6 to common infrastructure.          signed-off-by: arnaldo car,0,1,0
266,169,    fixed #11624: `render_to_kmz` no longer balks on non-ascii data.               git-svn-id: http://code.djangoproject.com/svn/django/trunk@11527 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,1,0,0
267,1884,    add two_finger_pan gesture ,0,1,0
268,1792,    add scheduling framework configuration          update bazel build          fix get plugin config method          initialize only needed plugins          fix unit test          fix import duplicate package          update bazel          add docstrings          add weight field to plugin          add plugin to v1alpha1          add plugins at appropriate extension points        ,1,1,0
269,1156,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/razor/tree/8ba0a894256e4b5c5385db9b5aac32fdbd046f3a ,0,0,1
270,1028,    implement metrics for windows nodes          this implements stats for windows nodes in a new package  winstats.     winstats exports methods to get cadvisor like datastructures  however     with windows specific metrics. winstats only gets node level metrics and     information  container stats will go via the cri. this enables the     use of the summary api to get metrics for,0,0,1
271,640,    [spark-529][sql] modify sqlconf to use new config api from core.          because sql keeps track of all known configs  some customization was     needed in sqlconf to allow that  since the core api does not have that     feature.          tested via existing (and slightly updated) unit tests.          author: marcelo vanzin <vanzin@cloudera.com>          closes #11570 from van,0,1,0
272,1526,    abstract auto merge processes          we have one auto merge strategy today - merge when pipeline     succeeds.          in order to add more strategies for merge train feature      we abstract the architecture to be more extensible.          removed arguments          fix spec ,1,0,0
273,883,    i40e: remove casts of pointer to same type          casting a pointer to a pointer of the same type is pointless      so remove these unnecessary casts.          done via coccinelle script:          $ cat typecast_2.cocci     @@     type t;     t *foo;     @@          -       (t *)foo     +       foo          signed-off-by: joe perches <joe@perches.com>     tested-by: kavindya ,0,0,1
274,1768,    fixed #12851 -- another attempt at fixing select_related() with inherited models  this time with only(). thanks to phxx for the test case.          git-svn-id: http://code.djangoproject.com/svn/django/trunk@13059 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,1,0,0
275,960,"    mac80211: michael.c use kernel-provided infrastructure          replace private implementation of bit rotation and unaligned access helpers     with kernel-provided implementation.          fold xswap helper in its one usage in the michael_block macro.          signed-off-by: harvey harrison <harvey.harrison@gmail.com>     cc: ""john w. linville"" <linville@tuxdriver.com>     sig",0,0,1
276,222,    disable reflow options when reflow is not on     this should also fix #1061. ,1,0,1
277,455,    fix rubocop offenses ,1,0,0
278,10,    change java client package name to com.microsoft.signalr (#3096) ,1,0,0
279,1464,    add config for new memcached features          adds config for persistent connections  sasl authentication  and custom options ,0,1,0
280,760,    filter cache: introduce new `node` level filter cache and make it default  closes #959. ,0,1,0
281,1107,    [spark-17474] [sql] fix python udf in takeorderedandprojectexec          ## what changes were proposed in this pull request?          when there is any python udf in the project between sort and limit  it will be collected into takeorderedandprojectexec  extractpythonudfs failed to pull the python udfs out because queryplan.expressions does not include the expression inside opt,1,0,0
282,319,    cmd/vendor: update github.com/google/pprof          sync @ fde099a (oct 26  2018)          also update misc/nacl/testzip.proto to include new testdata.     change-id: if41590be9f395a591056e89a417b589c4ba71b1a     reviewed-on: https://go-review.googlesource.com/c/147979     run-trybot: hyang-ah hana kim <hyangah@gmail.com>     trybot-result: gobot gobot <gobot@golang.org>     re,0,1,0
283,1315,    lib benchmark test: implement consistent braces          this change is in preparation for lint-enforced brace style.          pr-url: https://github.com/nodejs/node/pull/7630     reviewed-by: brian white <mscdex@mscdex.net>     reviewed-by: michaël zasso <mic.besace@gmail.com>     reviewed-by: ben noordhuis <info@bnoordhuis.nl>     reviewed-by: roman reiss <me@silverwind.io>  ,0,0,1
284,451,    added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. this fixes #59. ,1,1,0
285,1000,    add support for filtering aliases to deletebyquery ,0,1,0
286,1641,    pm / qos: add no_constraints_value field to struct pm_qos_constraints          add a new field  no_constraints_value  to struct pm_qos_constraints     representing a list of pm qos constraint requests to be returned by     pm_qos_get_value() when that list of requests is empty.          that field will be equal to default_value for all of the existing     global pm qos classes ,0,1,0
287,667,    refactor users update service ,0,0,1
288,1296,    i2c: convert most new-style drivers to use module aliasing          based on earlier work by jon smirl and jochen friedrich.          update most new-style i2c drivers to use standard module aliasing     instead of the old driver_name/type driver matching scheme. i've     left the video drivers apart (except for soc camera drivers) as     they're a bit more diffcult to deal wit,0,0,1
289,1222,    perf session: move threads to struct machine          the 'machine' abstraction was introduced with 'perf kvm' where we could     have samples for the host and multiple guests  but at the time we ended     up keeping the list of all machines threads all in     session->host_machine.          move the threads rb_tree to struct machine to separate the namespaces.          cc: dav,0,0,1
290,542,    remove a workaround in the debug info handling of zero-sized types.          this fixes potential llvm verifier errors in exploded variables with undefined     elments  because a few lines below the size of fragments is derived from the     size of the llvm ssa value and the constant used in the deleted workaround is     always an i64.          rdar://problem/51343998 ,1,0,0
291,708,    add a new gitlab::useractivities class to track user activities          this new class uses a redis hash instead of a sorted set.          signed-off-by: rémy coutable <remy@rymai.me> ,0,1,0
292,1468,    media: uvcvideo: use internal kernel integer types          replace the __[su]{8 16 32} variant of integer types with the     non-underscored types as the code is internal to the driver  not exposed     to userspace.          signed-off-by: laurent pinchart <laurent.pinchart@ideasonboard.com>     signed-off-by: mauro carvalho chehab <mchehab@s-opensource.com> ,0,0,1
293,287,    xen/pci: use apic directly when apic virtualization hardware is available          when hardware supports apic/x2apic virtualization we don't need to use     pirqs for msi handling and instead use apic since most apic accesses     (mmio or msr) will now be processed without vmexits.          as an example  netperf on the original code produces this profile     (collected wih 'x,0,0,1
294,391,    remove abstract internalmetricsaggregation class (#23326)          this class doesn't seem to do much other than to group together     certain types of aggregations. ,0,0,1
295,1837,    [spark-18057][follow-up][ss] update kafka client version from 0.10.0.1 to 2.0.0          ## what changes were proposed in this pull request?          update to kafka 2.0.0 in streaming-kafka module  and remove override for scala 2.12. it won't compile for 2.12 otherwise.          ## how was this patch tested?          existing tests.          author: sean owen <srowen@gmail.com,1,1,0
296,1726,    remove empty xml comment lines (#7401) ,0,0,1
297,1912,    node: emit 'exit' when exiting with error          fix #3555 ,1,0,0
298,724,"    drm/amd/display: fully remove i2caux folder          this is a follow up to:     e28e1490794d (""drm/amd/display: remove i2caux folder"")          some files were still left  so delete all of them.          cc: david francis <david.francis@amd.com>     cc: harry wentland <harry.wentland@amd.com>     signed-off-by: leo li <sunpeng.li@amd.com>     reviewed-by: alex deucher <alexand",0,0,1
299,1375,    move dom dependent tests out of the shared folder (#8954)          we have a bunch of tests that are meant to test generic react behavior.     however  we've written the tests against the dom renderer. this moves     tests that depend on reactdom or reacttestutils out of the shared repo.          this will let us sync the shared repo directly to environments that don't     supp,0,0,1
300,136,    mt76x0: use mt76u_init for bus initialization          use mt76u_init utility routine for usb initialization.     moreover remove following unused routines:     - mt76x0_rr     - mt76x0_wr     - mt76x0_rmw     - mt76x0_wr_copy     - mt76x0_assign_pipes          signed-off-by: lorenzo bianconi <lorenzo.bianconi@redhat.com>     signed-off-by: kalle valo <kvalo@codeaurora.org> ,0,0,1
301,1281,    e1000e: cleanup - update gpl header and copyright          this patch is to update the gpl header by removing the portion that     refers to the free software foundation address.          change the copyright date for 2014.          reformat the header comments to conform to kernel networking coding norms          signed-off-by: dave ertman <davidx.m.ertman@intel.com>     teste,0,0,1
302,787,    [patch] call mm/page-writeback.c:set_ratelimit() when new pages are hot-added          ratelimit_pages in page-writeback.c is recalculated (in set_ratelimit())     every time a cpu is hot-added/removed.  but this value is not recalculated     when new pages are hot-added.          this patch fixes that problem by calling set_ratelimit() when new pages     are hot-added.        ,1,0,0
303,1056,    ipc: consolidate sem_exit_ns()  msg_exit_ns() and shm_exit_ns()          sem_exit_ns()  msg_exit_ns() and shm_exit_ns() are all called when an     ipc_namespace is released to free all ipcs of each type.  but in fact  they     do the same thing: they loop around all ipcs to free them individually by     calling a specific routine.          this patch proposes to consolidate thi,0,0,1
304,874,    add `:nested_groups` metadata to `groups::nestedcreateservice` specs ,0,1,0
