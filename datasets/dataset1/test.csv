,index,text,Corrective,Adaptive,Perfective
0,1161,    unicore32: modify io_p2v and io_v2p macros  and adjust pkunity_mmio_bases          1. remove __reg macro     2. add (void __iomem *) to io_p2v macro     3. add (phys_addr_t) to io_v2p macro     4. add pkunity_ahb_base and pkunity_apb_base definitions     5. modify all pkunity_mmio_bases from physical addr to virtual addr     6. adjust prefix macro for all usage of pkunity_mmio_,0,1,1
1,1424,"    fs/proc/namespaces.c: prevent crash when ns_entries[] is empty          if config_net_ns  config_uts_ns and config_ipc_ns are disabled      ns_entries[] becomes empty and things like     ns_entries[array_size(ns_entries) - 1] will explode.          reported-by: richard weinberger <richard@nod.at>     cc: ""eric w. biederman"" <ebiederm@xmission.com>     cc: daniel lezcano <daniel",1,0,0
2,900,    v4l/dvb: drivers/media: make static data tables and strings const          making static data const avoids allocation of additional r/w memory and     reduces initialisation time.  it also provides some additional opportunities     for compiler optimisations.          signed-off-by: lawrence rust <lvr@softsystem.co.uk>     signed-off-by: mauro carvalho chehab <mchehab@redhat.co,0,0,1
3,1761,    add c10::stream  make at::cuda::cudastream use it. (#13133)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/13133          c10::stream is a device agnostic object which represents a stream     on some device (defined as c10::device).  the primary benefit of     introducing this object is that we can easily refer to it from code     in the no,0,1,0
4,1558,    net/mlx5e: add netdev support for vxlan tunneling          if a vxlan udp dport is added to device it will:             - configure the hardware to offload the port (up to the max          supported).        - advertise netif_f_gso_udp_tunnel and supported hw_enc_features.          signed-off-by: matthew finlay <matt@mellanox.com>     signed-off-by: saeed mahameed <saeedm@mella,0,1,0
5,746,    c# proto2 feature : extensions (#5350)          * compiler changes (extensions)          * generated changes (extensions)          * library changes (extensions)          * adjusted a summary to indicate containingtype can be null for extensions          * compiler changes (custom option review + access level review)          * generated code changes (custom options + access re,0,1,0
6,664,    fixes #27609 ,1,0,0
7,1674,    client-go: add an exec-based client auth provider ,0,1,0
8,200,"    move ""get_ack()"" back to fetch-pack          in 41cb7488 linus moved this function to connect.c for reuse inside     of the git-clone-pack command.  that was 2005  but in 2006 junio     retired git-clone-pack in commit efc7fa53.  since then the only     caller has been fetch-pack.  since this ack/nak exchange is only     used by the fetch-pack/upload-pack protocol we should mov",0,0,1
9,662,    fix spec/helpers/award_emoji_helper_spec.rb by using `iid` instead of `id`          closes gitlab-org/gitlab-ee#2890 ,1,0,0
10,1712,    media: use strscpy() instead of strlcpy()          the implementation of strscpy() is more robust and safer.          that's now the recommended way to copy nul terminated strings.          signed-off-by: mauro carvalho chehab <mchehab+samsung@kernel.org>     reviewed-by: kees cook <keescook@chromium.org>     acked-by: hans verkuil <hans.verkuil@cisco.com>     signed-off-by: ma,0,0,1
11,889,    added multi percolate api          the multi percolate allows the bundle multiple percolate requests into one request. this api works similar to the multi search api. the request body format is line based. each percolate request item takes two lines  the first line is the header and the second line is the body.          the header can contain any parameter that normally would b,0,1,0
12,890,    cifs: separate smb2 header structure          in order to support compounding and encryption we need to separate     rfc1001 length field and smb2 header structure because the protocol     treats them differently. this change will allow to simplify parsing     of such complex smb2 packets further.          signed-off-by: pavel shilovsky <pshilov@microsoft.com> ,0,0,1
13,1736,    cmd/link: let writelines work when pcstmt symbol doesn't exist          the assembler does not produce pcstmt symbols  writeline should be able     to work even if no pcstmt symbol exists for a given function.          fixes #25216  #25191          change-id: i41e16df1e7c8ca59d27e7514537609e309a51c51     reviewed-on: https://go-review.googlesource.com/110816     reviewed-by: da,1,0,0
14,1020,    drm/amd/pp: use atombios api directly in powerplay (v2)          in order to remove the cgs wrapper functions for atombios api.          v2: squash in whitespace cleanup (alex)          reviewed-by: huang rui <ray.huang@amd.com>     signed-off-by: rex zhu <rex.zhu@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,0,1
15,886,    more strongly typed telemetry (#77412)          * more strongly typed telemetry          * updated update service to not duplicate typings ,0,0,1
16,423,    query refactoring: refactor query_string query and score functions          refactor the function_score query so it can be parsed on the coordinating node  split parse into fromxcontent and toquery  make functionscorequerybuilder writeable.          closes #13653 ,0,0,1
17,733,    sil: use objc_method instruction for objective-c protocol method calls          fixes <rdar://problem/15933365>. ,1,0,0
18,1906,    clean up user activity code in preparation for topic rendering ,0,0,1
19,1174,    [scsi] nsp_cs: remove kernel 2.4 code          signed-off-by: adrian bunk <bunk@stusta.de>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: james bottomley <james.bottomley@steeleye.com> ,0,0,1
20,1217,    use consistent javadoc style for annotation links          closes gh-13920 ,0,0,1
21,1011,    rename all c-style headers (e.g. <stdio.h>) to c++ style (<cstdio>). ,0,0,1
22,1144,    reorganized scala.tools.nsc.io! ,0,0,1
23,382,    2.x: distinctuntilchanged to store the selected key instead of the value (#4747)          * 2.x: distinctuntilchanged to store the selected key instead of the value          * fix null test and whitespaces ,1,0,0
24,679,    fix some styling offender ,1,0,0
25,1727,    safer way to handling typename + cleanup ,0,0,1
26,404,    drm/radeon: add radeon_test_syncing function v2          tests syncing between all rings by using     semaphores and fences.          v2: use radeon_testing as a bit flag rather than on/off switch         this allow to test for one thing at a time (bo_move or semaphore         test). it kind of break the usage if user wheren't using 1         for bo move test but as it's a test,0,1,1
27,1232,    next generation of macros          implements sip 16: self-cleaning macros: http://bit.ly/wjjxtz          features:     * macro defs     * reification     * type tags     * manifests aliased to type tags     * extended reflection api     * several hundred tests     * 1111 changed files          not yet implemented:     * reification of refined types     * expr.value splicing   ,0,1,1
28,957,    selinux: add /sys/fs/selinux mount point to put selinuxfs          in the interest of keeping userspace from having to create new root     filesystems all the time  let's follow the lead of the other in-kernel     filesystems and provide a proper mount point for it in sysfs.          for selinuxfs  this mount point should be in /sys/fs/selinux/          cc: stephen smalley <sds,0,1,0
29,981,    fix undo/redo ,1,0,0
30,1157,    rename `list_id` param to `id` in boards::issues::listservice ,0,0,1
31,1072,    provide multiple implementations of rpc responses on the fetch path.          this cl includes wrapper classes for the protocol buffer messages     `tensorflow::runstepresponse` and `tensorflow::rungraphresponse` (to     complement the corresponding request message wrappers that were added recently).          this change makes the backend code deal with abstract     `tensorflow,0,1,0
32,165,    [alsa] hda: fix vref cap and ctl values          hda codec driver hda generic driver     fix some vref defines so they are valid for the different bits in     the pin cap and pin control registers. please apply.          signed-off-by: matt <matt@embeddedalley.com>     signed-off-by: takashi iwai <tiwai@suse.de> ,1,0,0
33,1730,    added covar_ and sort_ enums to core.hpp; fixed many  many vs2005  vs2010 and mingw (gcc 4.5.2) warnings ,1,1,0
34,295,    refactor helpers code in action pack a bit          * avoid calling class_eval when not needed     * remove helpers_path attr accessor  it's defined as a class attribute a       few lines later     * avoid creating extra arrays when finding helpers  use flat_map and sort!     * remove not required refer variable when redirecting :back ,0,0,1
35,442,    remove queryparsecontext from parsing querybuilders (#25448)          currently queryparsecontext is only a thin wrapper around an xcontentparser that     adds little functionality of its own. i provides helpers for long deprecated     field names which can be removed and two helper methods that can be made static     and moved to other classes. this is a first step in helping ,0,0,1
36,144,    fixed #16969 -- don't connect to named database when possible          thanks andreas pelme for the report and initial patch  and     aymeric augustin  shai berger and tim graham for the reviews. ,1,0,0
37,53,    fix scale invariance on last year vs. this year admin kpi graphs ,1,0,0
38,1115,    cmd/link: replace interface{} fields with concrete types          the lsym.section and section.elfsect fields were defined as interface{} but     always had the same concrete type (*section and *elfshdr respectively) so just     define them with that type. reduces size of lsym from 328 to 320 bytes and     reduces best-of-10 maxresident size from 246028k to 238036k when linking,0,0,1
39,1216,"    mm: treewide: remove gfp_temporary allocation flag          gfp_temporary was introduced by commit e12ba74d8ff3 (""group short-lived     and reclaimable kernel allocations"") along with __gfp_reclaimable.  it's     primary motivation was to allow users to tell that an allocation is     short lived and so the allocator can try to place such allocations close     together and preve",0,0,1
40,1766,    fs: reduce the use of module.h wherever possible          for files only using this_module and/or export_symbol  map     them onto including export.h -- or if the file isn't even     using those  then just delete the include.  fix up any implicit     include dependencies that were being masked by module.h along     the way.          signed-off-by: paul gortmaker <paul.gortmaker,1,0,0
41,400,    buffer: optimize buffer#tostring()          break up buffer#tostring() into a fast and slow path.  the fast path     optimizes for zero-length buffers and no-arg method invocation.          the speedup for zero-length buffers is a satisfying 700%.  the no-arg     tostring() operation gets faster by about 13% for a one-byte buffer.          this change exploits the fact that mos,0,0,1
42,1110,    fixed bugs in page locked memory allocation     avoid extra gpu memory allocation in bp and csbp ,1,0,0
43,47,    net: rename net/nexthop.h net/rtnh.h          the header contains rtnh_ macros so rename the file accordingly.     allows a later patch to use the nexthop.h name for the new     nexthop code.          signed-off-by: david ahern <dsahern@gmail.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
44,418,    license cleanup: add spdx gpl-2.0 license identifier to files with no license          many source files in the tree are missing licensing information  which     makes it harder for compliance tools to determine the correct license.          by default all files without license information are under the default     license of the kernel  which is gpl version 2.          update ,0,1,1
45,317,    ast: make substflags::useerrortype the default behavior          we've fixed a number of bugs recently where callers did not expect     to get a null type out of subst(). this occurs particularly often     in sourcekit  where the input ast is often invalid and the types     resulting from substitution are mostly used for display.          let's fix all these potential problems ,1,0,0
46,1206,    v4l/dvb (9516): cx18: move dvb buffer transfer handling from irq handler to work_queue          cx18: move dvb buffer transfer handling from irq handler to work_queue thread.     in order to properly lock the epu2cpu mailbox for driver to cx23418 commands      the dvb/ts buffer handling needs to be moved from the irq handler and irq     context to a work queue.  this work_queue,0,0,1
47,658,"    vm: make unmap_vmas() return void          same story - nobody uses it and it's been pointless since     ""mm: remove i_mmap_lock lockbreak"" went in.          signed-off-by: al viro <viro@zeniv.linux.org.uk> ",0,0,1
48,1972,    fix crash in dependentgenerictyperesolver::resolvedependentmembertype          an erroneous `basety` would cause resolvearchetype to return nullptr  resulting in a null dereference. ,1,0,0
49,1856,    coda: get rid of coda_alloc()          these days we have kvzalloc() so we can delete coda_alloc().          i made a couple related changes in coda_psdev_write().  first  i added     some error handling to avoid a null dereference if the allocation     failed.  second  i used kvmalloc() instead of kvzalloc() because we copy     over the memory on the next line so there is no n,0,1,1
50,1425,    [patch] avr32 architecture          this adds support for the atmel avr32 architecture as well as the at32ap7000     cpu and the at32stk1000 development board.          avr32 is a new high-performance 32-bit risc microprocessor core  designed for     cost-sensitive embedded applications  with particular emphasis on low power     consumption and high code density.  the avr32 arc,0,1,1
51,438,    [patch] jfs: write journal sync points more often          this patch adds jfs_syncpt  which calls lmlogsync to write sync points     to the journal both in jfs_sync_fs and when sync barrier processing     completes.          lmlogsync accomplishes two things:  1) it pushes logged-but-dirty     metadata pages to disk  and 2) it writes a sync record to the journal     so that jf,0,1,0
52,552,    made significant changes to the internal architecture of two-input filters  which should fix many bugs. you no longer need to set targettoignoreforupdates in almost all cases. ,1,0,1
53,76,    rapidio: integrate rio_switch into rio_dev          convert rio switches device structures (rio_dev + rio_switch) into a     single allocation unit.          this change is based on the fact that rio switches are using common rio     device objects anyway.  allocating rio switch objects as rio devices with     added space for switch information simplifies handling of rio switch,0,0,1
54,751,    make testing builds for react/reactdom (#17915)          this pr introduces adds `react/testing` and `react-dom/testing`.     - changes infra to generate these builds     - exports act on reactdom in these testing builds     - uses the new test builds in fixtures/dom          in the next pr -          - i'll use the new builds for all our own tests     - i'll replace usages of ,0,1,0
55,703,    fixed crashes and memory leak for objects with null write_property/has_property/unset_property handlers ,1,0,0
56,804,    refactor controller hierarchy (#7249) ,0,0,1
57,2006,    [stdlib] change _fixlifetime<t> to use builtin.fixlifetime now that we lower fix_lifetime to swift_keepalive in irgen.          also remove the old swift_keepalive and rename swift_keepalive2 => swift_fixlifetime.          rdar://16464507          swift svn r21723 ,0,0,1
58,1187,"    igb: drop the ""adv"" off function names relating to descriptors          many of the function names in the hot path are carrying an extra ""_adv""     suffix on the end of them to represent the fact that they are using     advanced descriptors instead of legacy descriptors.  however since all igb     uses are advanced descriptors adding the extra suffix doesn't really add     any ",0,0,1
59,630,    nikdon 20535 check same origin (#20962)          * =htp checksameorigin shows allowed origins          add httporiginrangedefault into the javadsl and refactor          resolving binary compatibility + add copyright          return back public static final in the httporiginrange          * =htp #20535 address bin compat issues in checksameorigin pr ,0,1,1
60,425,    efi/x86: move x86 back to libstub          this reverts commit 84be880560fb  which itself reverted my original     attempt to move x86 from #include'ing .c files from across the tree     to using the efi stub built as a static library.          the issue that affected the original approach was that splitting     the implementation into several .o files resulted in the variable ,0,0,1
61,173,    [cs] fix conditional conformances in overload ranking.          resolves rdar://problem/35480952. ,1,0,0
62,1112,    inotify: tail drop inotify q_overflow events          in f44aebcc the tail drop logic of events with no file backing     (q_overflow and in_ignored) was reversed so in_ignored events would     never be tail dropped.  this now means that q_overflow events are not     tail dropped.  the fix is to not tail drop in_ignored  but to tail drop     q_overflow.          signed-off-by: e,1,0,0
63,103,    tcp: switch rtt estimations to usec resolution          upcoming congestion controls for tcp require usec resolution for rtt     estimations. millisecond resolution is simply not enough these days.          fq/pacing in dc environments also require this change for finer control     and removal of bimodal behavior due to the current hack in     tcp_update_pacing_rate() for 'smal,0,1,1
64,475,    drbd: fix state change in case of connection timeout          a connection timeout affects all volumes of a resource!     under the following conditions:           a resource with multiple volumes       and      ko-count >=1       and      a write request triggers the timeout (ko-count * timeout)          drbd's internal state gets confused. that in turn may     lead to very mi,1,0,0
65,1658,    re-factored build.scala to build.sbt thereby leveraging the new 0.13 syntax. this has the following-on effect of being able to dispense with play's own project object for use in sbt build files - i.e. play now uses sbt in a idiomatic way.          also  changes to the console that fix up jline upsetting some terminals and the play logo no longer having an exclamation mark (not ,0,0,1
66,1082,    add spdx-license-identifier headers to most files.          this tags all the files that i can clearly identify as being part of     netdata and not a local copy of a third party package that we're     redistributing. ,0,0,1
67,1418,    [media] add and use is_reachable macro          in the media drivers  the v4l2 core knows about all submodules     and calls into them from a common function. however this cannot     work if the modules that get called are loadable and the     core is built-in. in that case we get          drivers/built-in.o: in function `set_type':     drivers/media/v4l2-core/tuner-core.c:301:,0,1,0
68,1720,    fix the indent for the parameter and typeparameter emit in .d.ts file ,1,0,0
69,153,    fix gitlab pages not refreshing upon new content          due to autoloading and ruby scoping  the .update file was never being     updated due to this error:          ```     nomethoderror: undefined method `pages' for projects::settings:module             from /opt/gitlab/embedded/service/gitlab-rails/app/services/projects/update_pages_configuration_service.rb:50:in `pages_up,1,0,0
70,1391,"    irq: maintain regs pointer globally rather than passing to irq handlers          maintain a per-cpu global ""struct pt_regs *"" variable which can be used instead     of passing regs around manually through all ~1800 interrupt handlers in the     linux kernel.          the regs pointer is used in few places  but it potentially costs both stack     space and code to pass it around",0,0,1
71,741,    epoch is 0 indexed  add one to match from fit (#8137)          * epoch is 0 index  add one to match other output          * fix pep8 style          * fix filepath in tests  modelcheckpoint ,1,0,0
72,1045,    - added 'import java.lang.system' to satisfy th...          - added 'import java.lang.system' to satisfy the .net backend. ,0,1,0
73,2,    tensor roll op implementation (#14953)          * half migrated to manip          half migrated to tf.manip          * roll op: polymorphism & gpu attempt          * roll op: added support for gradients          added compile script          * rebase for roll op code          * roll op: migrated to manip namespace          * roll op: supports cpu thread pooling          fix nam,1,1,0
74,1371,    #682: implement experimental instant mode ,0,1,0
75,1740,    add networking.k8s.io v1 api  with networkpolicy ,0,1,0
76,1459,    cmd/go: invoke godoc with import path when possible     also add -n -x flags to doc  fmt  vet.     also shorten unknown command error.          fixes #3612.     fixes #3613.          r=golang-dev  bradfitz  r     cc=golang-dev     https://golang.org/cl/6211053 ,1,0,0
77,1507,    [dev.cc] cmd/internal/obj  cmd/internal/gc  new6g: reconvert          reconvert using rsc.io/c2go rev 27b3f59.          changes to converter:      - fatal does not return  so no fallthrough after fatal in switch      - many more function results and variables identified as bool      - simplification of negated boolean expressions          change-id: i3bc67da5e46cb7ee613e230cf7e,0,0,1
78,805,    make js/ts quickfix-all action last item in group          fixes #55641 ,1,0,0
79,264,    [xla:gpu] make whiletransformer match computations post fusion and copy insertion hlo passes. switches implementation to use simple expression tree matching  and reduces the number of patterns to match to those that we care about in production (i.e. post fusion and copy insertion).          // executethunks runtime frnn forward pass (sequence_length=30)  whilethunk: 112ms      ,0,0,1
80,1420,    keyboard accessibility improvements (#24359)          summary:     in order to meet our accessibility requirements we need to have full support for keyboard navigation. the touchable components works with press/tap with a finger  but doesn't respond to 'enter' when using a keyboard. navigation works fine. this pr adds an onclick listener to touchable views that have the onpress,1,1,1
81,77,    nfs: fix an lock/open race when unlinking an open file          at connectathon 2016  we found that recent upstream linux clients     would occasionally send a lock operation with a zero stateid. this     appeared to happen in close proximity to another thread returning     a delegation before unlinking the same file while it remained open.          earlier  the client received,1,0,0
82,30,    blackfin arch: update blackfin header files to latest one in vdsp.          a) add new processor bf52x/bf54x header files     b) update blackfin bf533/bf537/bf561 header files to latest one in vdsp.     c) scrub watchdog/rtc masks from headers as we dont need/want them (too generic and the drivers dont use them)          signed-off-by: mike frysinger <michael.frysinger@analog.c,0,0,1
83,1550,    [patch] sis190: merge some register related information from sis driver.          merge some register related information from sis driver.          signed-off-by: francois romieu <romieu@fr.zoreil.com>     signed-off-by: jeff garzik <jgarzik@pobox.com> ,0,1,0
84,1268,    x86  apicv: add virtual x2apic support          basically to benefit from apicv  we need to enable virtualized x2apic mode.     currently  we only enable it when guest is really using x2apic.          also  clear msr bitmap for corresponding x2apic msrs when guest enabled x2apic:     0x800 - 0x8ff: no read intercept for apicv register virtualization                     except a,0,1,0
85,1344,    icons deprecations fixes (#6920) ,1,0,0
86,1769,    remove the condition argument from warning() (#17568)          * prep for codemod          * prep warnings          * rename lint rules          * codemod for ifs          * shim www functions          * handle more cases in the transform          * thanks de morgan          * run the codemod          * delete the transform          * fix up confusing conditions manually       ,1,0,1
87,1885,    proposed (ideally destined for improvement and/...          proposed (ideally destined for improvement and/or generalization) fix     for #2323. ,1,0,1
88,501,    prevent circular reference error in banzai ,1,0,0
89,1139,    net: add moduleparam.h for users of module_param/module_parm_desc          these files were getting access to these two via the implicit     presence of module.h everywhere.  they aren't modules  so they     don't need the full module.h inclusion though.          signed-off-by: paul gortmaker <paul.gortmaker@windriver.com> ,0,1,0
90,573,    fix: don’t use the global `ng` at all with closure enhanced optimizations          this is needed as:     - closure declares globals itself for minified names  which sometimes clobber our `ng` global     - we can't declare a closure extern as the namespace `ng` is already used within google for typings for angularjs (via `goog.provide('ng....')`). ,1,0,0
91,1413,    [powerpc] cell: move cbe_regs.h to include/asm-powerpc/cell-regs.h          the new cell edac driver needs that file  oprofile also does ugly     path tricks to get to it  it's time to move it to asm-powerpc. while     at it  rename it to be consistent with cell-pmu.h (and dashes look     nicer than underscores anyway).          signed-off-by: benjamin herrenschmidt <benh@kerne,0,0,1
92,659,    added put  get and delete pipeline apis. ,0,1,0
93,1605,    fixed a bunch of persistence bugs ,1,0,0
94,570,    add support for https ,0,1,0
95,402,    add version 4.2 to all existing migrations          db schema generated by a migration may look different in     rails 4 and 5 (because rails 5 may use different default values).     for this reason it's important to explicitly set for which rails     version a migration was written for.          see https://stackoverflow.com/questions/35929869/activerecordmigration-deprecation,0,1,0
96,1209,    [mips] fix rm9000 wait instruction detection.          only revisions < 4.0 don't have a functional wait instruction.          from thomas koeller (thomas.koeller@baslerweb.com).          signed-off-by: ralf baechle <ralf@linux-mips.org> ,1,0,0
97,275,    tpl: improve the built-in disqus template (#3639)          * improve the built-in disqus template            set `disqus_identifier`  `disqus_title`  and `disqus_url`       only if the user has explicitly provided them.            do not load disqus when the website is previewed locally        otherwise it is very confusing.          * use disqus_config instead of three global ,0,0,1
98,348,    allow early servletrequest autowiring          update `embeddedwebapplicationcontext` so that servlet related     resolvable dependencies are registered in `postprocessbeanfactory`.          this allows a `servletreqest` to be autowired into an early initialized     bean and brings parity with war based deployments.          closes gh-14990 ,0,0,1
99,1016,    2.x: coverage  fixes  cleanup  copy to flowable 10/19-1 (#4730) ,1,0,0
100,367,    allow enabling rctdevsettings outside of dev mode          summary: this make rctdevsettings configurable like rctredbox.          reviewed by: rsnara          differential revision: d17798517          fbshipit-source-id: 3717e0aed27b2a6951b402641f589d472f45243e ,0,0,1
101,1408,    add a feature gate for debug containers ,0,1,0
102,225,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/routing/tree/c28c7dea4e866ec5a0d33f0e290bc49baadb1c85 ,0,0,1
103,1832,    produce .d.ts files from our typescript compilation.     deliver them into our npm module output so users can consume them directly.          fixes #3082 ,1,0,0
104,607,    added support for dynamic noise_shape in dropout (#7999)          * added support for dynamic noise_shape in dropout          * handle the case noise_shape=none ,0,1,0
105,508,    refactor(view_compiler): codegen di and queries          breaking change:     - renderer:       * rendercomponent method is removed form `renderer`  only present on `rootrenderer`       * renderer.setdebuginfo is removed. renderer.createelement / createtext / createtemplateanchor         now take the debuginfo directly.     - query semantics:       * queries don't work with dyn,0,0,1
106,1793,    usblp: cosmetics          this is a small bunch of cosmetic fixes:      - timeout is not a write timeout anymore  rename      - condition in poll was confusingly backwards  invert and simplify      - the comment log gave a wrong impression of version 0.13  terminate it.          signed-off-by: pete zaitcev <zaitcev@redhat.com>     signed-off-by: greg kroah-hartman <gregkh@suse.,1,0,0
107,976,    arm: omap2+: hwmod: remove unused _hwmod_wakeup_enabled flag          _hwmod_wakeup_enabled is currently unused across the hwmod     framework. just get rid of it  so we have one less flag to     worry about.          tested-by: vaibhav bedia <vaibhav.bedia@ti.com>     signed-off-by: rajendra nayak <rnayak@ti.com>     signed-off-by: santosh shilimkar <santosh.shilimkar@ti.com> ,0,0,1
108,41,    [swiftc] add 💥 case (😢 → 42  😀 → 5090) triggered in swift::constraints::constraintsystem::resolveoverload(…)          add crash case with stack trace:          ```     <t     <t     <t     swift: /path/to/swift/lib/sema/constraintsystem.cpp:1509: void swift::constraints::constraintsystem::resolveoverload(swift::constraints::constraintlocator *  swift::type  swift::constraints::,0,1,0
109,987,    simplify check output errors ,0,0,1
110,869,    fixing compilation errors in windows and mac ,1,0,0
111,50,    dmaengine: remove dma unmap flags          remove no longer needed dma unmap flags:     - dma_compl_skip_src_unmap     - dma_compl_skip_dest_unmap     - dma_compl_src_unmap_single     - dma_compl_dest_unmap_single          cc: vinod koul <vinod.koul@intel.com>     cc: tomasz figa <t.figa@samsung.com>     cc: dave jiang <dave.jiang@intel.com>     signed-off-by: bartlomiej zolnie,0,0,1
112,761,    kvm: nvmx: allow tests to use bad virtual-apic page address          as mentioned in the comment  there are some special cases where we can simply     clear the tpr shadow bit from the cpu-based execution controls in the vmcs02.     handle them so that we can remove some xfails from vmx.flat.          signed-off-by: paolo bonzini <pbonzini@redhat.com> ,0,0,1
113,52,    introduce extensionhostdebugservice to no longer piggy back on the broadcastservice          fixes #70835 ,1,0,0
114,433,    staging: iio: adc: ad7280a: remove camelcase notation          fix camelcase naming.          signed-off-by: cristian sicilia <sicilia.cristian@gmail.com>     signed-off-by: jonathan cameron <jonathan.cameron@huawei.com> ,1,0,0
115,422,    [console] correct command::initialize() and inputinterface::bind() phpdoc regarding thrown exceptions ,1,0,0
116,349,    fixed polish text - change '--' into '-'. ,1,0,0
117,1336,    import latest compiler crashers from practicalswift          68% are already fixed  including all those marked as beta 4 regressions.          swift svn r30914 ,0,0,1
118,1178,    add kbd shortcuts for discussion navigation          add keyboard shortcuts `p` and `n` to navigate duscussions. ,0,1,0
119,1328,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/razor/tree/582f3f867eeb8fca00e6b328faf7665c9a98476c ,0,0,1
120,714,    changed the chunk coordinator to process the chunks concurrently. (#3256)          the shard follow task executor determines the range of translog operations     between the leader shard's global checkpoint and the last know processed     seqno by the current shard follow task that are missing.          then the chunks coordinator can then chunk this range up in smaller ranges ,0,0,1
121,1908,    perf tools: add snapshot format file parsing          the .snapshot file indicates that the provided event value is a snapshot     value and we have to bypass the delta computation logic.          adding support to check up this file and set event flag accordingly.          signed-off-by: jiri olsa <jolsa@kernel.org>     cc: andi kleen <ak@linux.intel.com>     cc: corey ashford,0,1,1
122,1841,    code restructuring          - moved source files matrix.swift  matrixsize.swift & number.swift to the sources foler in the playground     - restrucutred the code into extensions to make it more organized and readable     - deleted all the objects from the playground and moved them to the sources folder ,0,0,1
123,101,    drm/amd/display; fix kernel doc warnings          we had a couple of missing definitions and formatting errors.          v2: fix 'notifying' type          signed-off-by: harry wentland <harry.wentland@amd.com>     reviewed-by: nicholas kazlauskas <nicholas.kazlauskas@amd.com>     reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexander.de,1,0,0
124,240,    input: add new sun4i-lradc-keys driver          allwinnner sunxi socs have a low resolution adc (called lradc) which is     specifically designed to have various (tablet) keys (ie home  back  search      etc). attached to it using a resistor network. this adds a driver for this.          there are 2 channels  currently this driver only supports chan0 since there     are no boar,0,1,0
125,1426,    ux: new /categories layout ,0,1,0
126,696,    [form] fix #11694 - enforce options value type check in some form types ,1,0,0
127,1922,    remove excessive copyright/license boilerplate          the copyright and license notice is already in the license file.  there     is no justifiable reason to also require that it be included in every     file  since the individual files are not individually distributed except     as part of the entire package. ,0,0,1
128,903,    fix: protect against future regressions of google omniauth ,1,0,0
129,1329,    don't change filelist when beforeupload returns false (#8299)          close #8036 ,1,0,0
130,1625,    implement shape folding in the canonicalization pass:      - add a few canonicalization patterns to fold memref_cast into        load/store/dealloc.      - canonicalize alloc(constant) into an alloc with a constant shape followed by        a cast.      - add a new patternrewriter::updatedrootinplace api to make this more convenient.          simplifyallocconst and the testcase ,0,1,1
131,398,    cleanup assemblyinfo (#8190)          remove old code from assemblyinfo.cs ,0,0,1
132,715,    rename finagle-memcachedx to finagle-memcached          problem          finagle-memcachedx was created to aid the transition from finagle-memcached.     now that the transition is complete  we can drop the x.          solution          rename finagle-memcachedx to finagle-memcached.          rb_id=730337     tbr=true     user_hook_args=--i-am-evil -x macaw-swift/.hooks/presubm,0,0,1
133,561,    [scsi] libfc: cache align struct fc_fcp_pkt fields          re-arrange its fields to avoid padding and have better     cacheline alignments.          removed not used start_time  end_time and last_pkt_time     fields.          this all reduced this struct size to 448 from 480 and     that also reduced one cacheline on x86_64 beside     eliminating 8 pads. however kept logical f,0,0,1
134,1091,    rkt: refactoring the construction of the mount points.          so that at most one volume object will be created for every unique     host path. also the volume's name is random generated uuid to avoid     collision since the mount point's name passed by kubelet is not     guaranteed to be unique when 'subpath' is specified. ,0,0,1
135,554,    anetresolveip() added to anet.c.          the new function is used when we want to normalize an ip address without     performing a dns lookup if the string to resolve is not a valid ip.          this is useful every time only ips are valid inputs or when we want to     skip dns resolution that is slow during runtime operations if we are     required to block. ,0,1,0
136,1860,    polish thumbar code.          * fix a memory leak in thumbar initialization.     * check the number of thumbar buttons  should be <= 7.     * correct to check thumbar button click event. ,1,0,1
137,771,    fix #6764 endpointconventionbuilder api review ,1,0,0
138,1351,    fix(language-service): make missing module suggestion instead of error (#34115)          if a component or directive is not part of any ngmodule  the language     service currently produces an error message. this should not be an     error. instead  it should be a suggestion.          this pr removes `ng.diagnostickind`  and instead reuses     `ts.diagnosticcategory`.          ,1,0,1
139,117,    runtime: rename sigaltstack to sigaltstackt          avoids a conflict between the type and function sigaltstack.          lgtm=crawshaw     r=rsc  crawshaw     cc=golang-codereviews     https://golang.org/cl/138920043 ,1,0,0
140,813,    drivers: staging: bcm: sort: kill handrolled bubblesort          replaced the handrolled bubblesort with the kernel's sort() function.     makes things considerably smaller & clearer.          signed-off-by: chris forbes <chrisf@ijw.co.nz>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,0,0,1
141,1721,    - registry: fix issue preventing to pull specific tag ,1,0,0
142,831,    asoc: convert au1x directory to module_platform_driver          factor out some boilerplate code.          signed-off-by: axel lin <axel.lin@gmail.com>     signed-off-by: mark brown <broonie@opensource.wolfsonmicro.com> ,0,0,1
143,1666,    add yet more logging around index creation (#46431)          further investigation into #46091  expanding on #46363  to add even more     detailed logging around the retry behaviour during index creation. ,0,1,0
144,512,    [media] gspca: remove gspca-specific debug magic          instead use v4l2_dbg and v4l2_err. note that the pdebug macro is kept to     make this patch-set less invasive  but it is simply a wrapper around     v4l2_dbg now. most of the other changes are there to make the dev parameter     for the v4l2_xxx macros available everywhere we do logging.          signed-off-by: theodore,0,0,1
145,781,    drm/amdkfd: added vega12 and polaris12 for kfd.          add vega12 and polaris12 device info and device ids to kfd.          signed-off-by: gang ba <gaba@amd.com>     reviewed-by: felix kuehling <felix.kuehling@amd.com>     signed-off-by: felix kuehling <felix.kuehling@amd.com>     reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexander,0,1,0
146,1491,    adds missing requires for object#blank? and object#present? ,1,1,0
147,1461,    bluetooth: convert debug files to actually use debugfs instead of sysfs          some of the debug files ended up wrongly in sysfs  because at that point     of time  debugfs didn't exist. convert these files to use debugfs and     also seq_file. this patch converts all of these files at once and then     removes the exported symbol for the bluetooth sysfs class.          signe,1,0,0
148,1671,    fixed t0392; un-deprecated iterator.fromarray (...          fixed t0392; un-deprecated iterator.fromarray (i don't see a good     alternative?) ,1,0,0
149,417,    fixed compile error about gdimagecolorresolve (#14426  #15000). ,1,0,0
150,84,    add iptables restore failure metrics          as mentioned in issue #80061  in iptables lock contention case      we can see increasing rate of iptables restore failures because it     need to grab iptables file lock.          the failure metric can provide administrators more insight          metrics will be collected in kube-proxy iptables and ipvs modes          signed-off-b,1,1,0
151,86,    pdio-311. add inactive attribute support to itemrec feature based.          also handle itypes for training. ,0,1,0
152,463,    x86  ioremap: fix incorrect physical address handling in pae mode          current x86 ioremap() doesn't handle physical address higher than     32-bit properly in x86_32 pae mode. when physical address higher than     32-bit is passed to ioremap()  higher 32-bits in physical address is     cleared wrongly. due to this bug  ioremap() can map wrong address to     linear address ,1,0,0
153,844,"    fixed #28804 -- fixed ""unknown system variable 'transaction_isolation'"" on mariadb.          regression in 967450a3bf940c43db891fe1e2ef3bcf73456ff8. ",1,0,0
154,756,    add -parse-stdlib to macos target test so it builds on linux. ,0,1,0
155,481,    refactor rest storage to use generic defaults          signed-off-by: monis khan <mkhan@redhat.com> ,0,0,1
156,1797,    standardize style and eliminate trailing whitespace. nfc.          swift svn r31419 ,0,0,1
157,1065,    trm290: add ide_hflag_trm290 host flag          * add ide_hflag_trm290 host flag and use it in ide_build_dmatable().          * remove no longer needed ide_trm290 chipset type.          acked-by: sergei shtylyov <sshtylyov@ru.mvista.com>     signed-off-by: bartlomiej zolnierkiewicz <bzolnier@gmail.com> ,0,1,1
158,147,    debug: exceptino widget background non transparent          fixes #32093 ,1,0,0
159,993,    virtio-scsi: pass struct virtio_scsi to virtqueue completion function          this will be needed soon in order to retrieve the per-target     struct.          cc: linux-scsi@vger.kernel.org     signed-off-by: paolo bonzini <pbonzini@redhat.com>     signed-off-by: wanlong gao <gaowanlong@cn.fujitsu.com>     reviewed-by: asias he <asias@redhat.com>     signed-off-by: rusty russ,0,0,1
160,646,    add streamableresponseaction to aid in deprecation of streamable (#43770)          the action base class currently works for both streamable and writeable     response types. this commit intorduces streamableresponseaction  for     which only the legacy action implementions which provide newresponse()     will extend. this eliminates the need for overriding newresponse() with  ,0,1,0
161,1608,    enhance bulkimport pre_cook (#5015)          * enhance bulkimport pre_cook          * bulkimport: trim <br> at begining and ending [quote][quote/] ,0,0,1
162,1637,    - added the lchown() and lchgrp() functions which change permissions and group       permissions on symbolic links.     #- we'll also add this to php 5.1.3? or php 5.2  so i didn't add it to news. ,0,1,0
163,132,    mips: convert fdt pointers to opaque pointers          the architecture code does not need to access the internals of the fdt     blob directly  so make the pointers to it void * and use char arrays     for section variables.          signed-off-by: rob herring <robh@kernel.org>     cc: ralf baechle <ralf@linux-mips.org>     tested-by: grant likely <grant.likely@linaro.org> ,0,0,1
164,1980,    even more tournament fixes and improvements ,1,0,1
165,1124,    add code to handle setup with status tracking ,0,1,0
166,881,    rework patternbindingdecl::hasstorage() to be a dynamic query of the vardecls it     contains  instead of being a stored bit set up by the parser.  observed properties     have storage... unless they are overriding  and this avoids having to maintain     this bit.          this fixes:     <rdar://problem/16382967> overriding observing properties have no storage  so shouldn't pr,1,0,1
167,301,    [patch] clean up struct flock64 definitions          this patch gathers all the struct flock64 definitions (and the operations)      puts them under !config_64bit and cleans up the arch files.          signed-off-by: stephen rothwell <sfr@canb.auug.org.au>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ,0,0,1
168,182,    integration-cli: don't build -test images if they already exist          there's no need to try to re-build the test images if they already     exist. this change makes basically no difference to the upstream     integration test-suite running  but for users who want to run the     integration-cli suite on a host machine (such as distributions doing     tests) this change allow,0,0,1
169,1210,    allow modifying log levels of individual play classes and packages instead of having an all or nothing approach where to change a log level for one class means you must change it for all classes ,0,1,0
170,1514,    fix invalid rounding value for timeintervalrounding close to dst transition          there are edge cases where rounding a date to a certain interval using a time     zone with dst shifts can currently cause the rounded date to be bigger than the     original date. this happens when rounding a date closely after a dst start and     the rounded date falls into the dst gap.      ,1,0,0
171,1987,    v4l/dvb (6079): cleanup: remove linux/moduleparam.h from drivers/media files          since at least kernel 2.6.12-rc2  module.h includes moduleparm.h. this     patch removes all occurences of moduleparm.h from drivers/media files.          signed-off-by: mauro carvalho chehab <mchehab@infradead.org> ,0,0,1
172,1688,"    init/main.c: remove unnecessary repair_env_string in do_initcall_level          since commit 08746a65c296 (""init: fix in-place parameter modification     regression"")  parse_args in do_initcall_level is called on a copy of     saved_command_line.  it is unnecessary to call repair_env_string during     this parsing  as this copy is not used for anything later.          remove th",1,0,1
173,1327,    added api testing group ,0,1,0
174,1969,    make blobdeserialization throw exceptions instead of returning bool          summary: makes it much nicer to spot errors  especially in ipython notebook.          reviewed by: kennyhorror          differential revision: d4465726          fbshipit-source-id: c0adaf5168248a70987ff9d5dfce54a622ff2219 ,0,0,1
175,503,    [tg3]: fix nvram selftest failures          newer devices contain bootcode in the chip's private rom area.  this     bootcode is called selfboot.  selfboot can be patched in the device's     nvram and the patches can have several formats.  in one particular     format  the checksum calculation needs to be slightly modified.  this     patch adjusts the nvram test code for that c,1,0,0
176,1610,    support nesting eagertemplate objects.          * nesting is implemented by sharing a single eagervariablestore among a top-level eagertemplate and all children eagertemplate objects that are nested underneath it. variables added to an eagertemplate object are also added to all eagertemplate objects under which it is nested.     * this change also simplifies the implementation ,0,1,1
177,1070,    changed xml type datetime to datetime  fixes #6328     xmlmini define the xml 'datatime'  but according to     http://www.w3.org/tr/xmlschema-2/#datetime could be better     change this to 'datetime' with upper case letter 't.     so 'datetime' and 'time' are redefined from 'datetime' to 'datetime'          add the changing to the changelog ,1,0,0
178,593,    kstat: modify kstat_irqs_legacy to be variable sized          impact: reduce memory usage.          allocate kstat_irqs_legacy based on nr_cpu_ids to deal with this     memory usage bump when nr_cpus bumped from 128 to 4096:               8192   +253952    262144 +3100%  kstat_irqs_legacy(.bss)          this is only when config_sparse_irqs=y.          signed-off-by: mike travis,0,0,1
179,1711,    improve consistency in nsnumber bridging          this makes sure casts of nan succeed  and init(exactly: nan) fails. ,1,0,1
180,1431,    rename affineint type to index type.  the name 'index' may not be perfect  but is better than the old name.  here is some justification:          1) affineint (as it is named) is not a type suitable for general computation (e.g. the multiply/adds in an integer matmul).  it has undefined width and is undefined on overflow.  they are used as the indices for forstmt because they a,0,0,1
181,334,    drm/amdgpu: add displayport cec-tunneling-over-aux support          add displayport cec-tunneling-over-aux support to amdgpu.          signed-off-by: hans verkuil <hans.verkuil@cisco.com>     acked-by: alex deucher <alexander.deucher@amd.com>     reviewed-by: harry wentland <harry.wentland@amd.com>     link: https://patchwork.freedesktop.org/patch/msgid/de9586bb-151e-bae9-b8e3-,0,1,0
182,1807,    add two helper methods to the graphcycle class.          piperorigin-revid: 195902659 ,0,1,0
183,983,    inline fbjs/lib/eventlistener dependency (#11402)          * drop fbjs/lib/eventlistener from tests          assert on the underlying native event listener instead.          this test file still needs to be rewritten in terms of public apis.          * inline fbjs/lib/eventlistener dependency          we explicitly don't want to shim this and we don't use the return value.     ,0,0,1
184,1838,    get rid of rubbish logs from serialization_test ,0,0,1
185,280,    cleanup: move all license related classes into a single package          this change moves all license related code in xpack under     org.elasticsearch.license. some classes become package private (more can     become package private later with further deguicing). it also adds     package level javadocs. note  i did not move anything from the actual     licensing jar.  this sh,0,0,1
186,18,    beceem: add network device message level control          provide standard interface to control verbosity of debug messages          signed-off-by: stephen hemminger <shemminger@vyatta.com> ,0,1,0
187,653,    a consolidation of a couple random weekend work.          (1) various bugfixes.     (2) tensor is now a class independent from its data type. this allows us         to write easier type-independent operators.     (3) code convention changes a bit: dtype -> t  tensor<*context> -> tensor* alias.     (4) parallelnet -> dagnet to be more consistent with what it does.     (5) caffe',1,0,1
188,1839,"    implement ""-c"" option to allocate a number of cpu shares to a container ",0,1,0
189,1220,    octeontx2-pf: initialize and config queues          this patch does the initialization of all queues ie the     receive buffer pools  receive and transmit queues  completion     or notification queues etc. allocates all required resources     (eg transmit schedulers  receive buffers etc) and configures     them for proper functioning of queues. also sets up receive     queue's ,0,1,1
190,735,    [ml] improve logging for autodetect crashes (elastic/x-pack-elasticsearch#2866)          improving logging for unexpected autodetect termination (crash  oom). output to the log pipe not conforming to the json log output format are treated as fatal error and logged  so that the crash as well as a proper error message if available gets logged.          original commit: elastic/x-,0,0,1
191,1332,    acpi: delete unused c-state promotion/demotion data strucutures          these were used before cpuidle by the native acpi idle driver      which tracked promotion and demotion between states.          the code was referenced by config_acpi_procfs     for /proc/acpi/processor/*/power      but as we no longer do promotion/demotion  that     reference has been a nop since the tra,0,0,1
192,1824,    sema: subscript default arguments          fixes <https://bugs.swift.org/browse/sr-6118>. ,1,0,0
193,1006,    drivers/net: remove unnecessary returns from void function()s          this patch removes from drivers/net/ all the unnecessary     return; statements that precede the last closing brace of     void functions.          it does not remove the returns that are immediately     preceded by a label as gcc doesn't like that.          it also does not remove null void functions with r,0,0,1
194,773,    alsa: hda - add quirk for fsc amilo xi2550          added model=fujisu-pi2515 for fsc amilo xi2550 with alc883 codec.          refernece: novell bnc#450979             https://bugzilla.novell.com/show_bug.cgi?id=450979          signed-off-by: takashi iwai <tiwai@suse.de> ,0,1,0
195,292,    split up mvc.extensions into smaller packages          startup.cs api experience to follow in a separate change. this change just     gets the bulk of the code churn out of the way. ,0,0,1
196,547,    rtc: isl1208: introduce driver state struct          this driver has no state of its own  depending entirely on what is in     the generic rtc device.          intoduce a state struct.  for now it only contains a pointer to the rtc     device struct  but future patches will add more data.          cc: alessandro zummo <a.zummo@towertech.it>     cc: alexandre belloni <alexandre.,0,1,0
197,625,    [netfilter]: attribute count is an attribute of message type  not subsytem          prior to this patch  every nfnetlink subsystem had to specify it's     attribute count.  however  in reality the attribute count depends on     the message type within the subsystem  not the subsystem itself.  this     patch moves 'attr_count' from 'struct nfnetlink_subsys' into     nfnl_callbac,1,0,0
198,803,    [net]: make /proc/net per network namespace          this patch makes /proc/net per network namespace.  it modifies the global     variables proc_net and proc_net_stat to be per network namespace.     the proc_net file helpers are modified to take a network namespace argument      and all of their callers are fixed to pass &init_net for that argument.     this ensures that all ,1,0,0
199,1738,    prevent duplicate files from getting onto sources ,0,0,1
200,239,    pinctrl: add a pin_base for sparse gpio-ranges          this patch enables mapping a base offset of gpio ranges with     a pin offset even if does'nt matched. a base of pinctrl_gpio_range     means a base offset of gpio. however  we cannot convert gpio to pin     number for sparse gpio ranges just only using a gpio base offset.     we can convert a gpio to real pin number(even ,0,1,0
201,106,    [powerpc] rename get_property to of_get_property: drivers          signed-off-by: stephen rothwell <sfr@canb.auug.org.au>     acked-by: benjamin herrenschmidt <benh@kernel.crashing.org>     signed-off-by: paul mackerras <paulus@samba.org> ,1,0,0
202,516,    scsi: hisi_sas: take debugfs snapshot for all regs          this patch takes snapshot for global regs  port regs  cq  dq  iost  itct.          add code for snapshot trig and generate dump directory.          signed-off-by: luo jiaxing <luojiaxing@huawei.com>     signed-off-by: john garry <john.garry@huawei.com>     signed-off-by: martin k. petersen <martin.petersen@oracle.com> ,0,0,1
203,427,    - fixed memory leaks and segfaults  patch by joe orton.     - fixed bug #45038 (crash when using datetimezone object returned by       date::gettimezone). ,1,0,0
204,372,    deps: upgrade v8 to 4.2.77.13          this commit applies some secondary changes in order to make `make test`     pass cleanly:          * disable broken postmortem debugging in common.gypi          * drop obsolete strict mode test in parallel/test-repl          * drop obsolete test parallel/test-v8-features          pr-url: https://github.com/iojs/io.js/pull/1232     reviewed,0,0,1
205,1886,    fixes #29564: customize tasks action in quick open should be shown for all tasks ,1,0,0
206,1380,"    powerpc: cleanup udbg_16550 and add support for lpc pio-only uarts          the udbg_16550 code  which we use for our early consoles and debug     backends was fairly messy. especially for the debug consoles  it     would re-implement the ""high level"" getc/putc/poll functions for     each access method. it also had code to configure the uart but only     for the straight mmio m",0,1,1
207,1510,    [s390] zcrypt: remove duplicated struct cprbx definition          signed-off-by: ralph wuerthner <rwuerthn@de.ibm.com> ,0,0,1
208,1259,"    mlx5: fix incorrect wc pkey_index assignment for gsi messages          since patch series ""demux ib cm requests in the rdma_cm module"" the     p_key index is taken from the work completion rather than the message     itself.          the hca provides us with the message p_key. in order to provide the     p_key index  we need to look it up. given that this is relevant only     f",1,0,0
209,1894,    include/asm-x86/pci_64.h: checkpatch cleanups - formatting only          signed-off-by: joe perches <joe@perches.com>     signed-off-by: ingo molnar <mingo@elte.hu> ,0,0,1
210,601,    [netfilter]: fix -wunder error in ip_conntrack_core.c          signed-off-by: nick sillik <n.sillik@temple.edu>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
211,479,    remove unnecessary js lang files from prettify  update styles for prettify ,0,0,1
212,745,    mmc: tmio: move mmc_gpio_request_cd() before mmc_add_host()          drivers do not need to call mmc_gpiod_request_cd_irq() explicitly     because mmc_start_host() calls it.  to make it work  cd_gpio must     be set before mmc_add_host().          signed-off-by: masahiro yamada <yamada.masahiro@socionext.com>     reviewed-by: wolfram sang <wsa+renesas@sang-engineering.com>     ,0,0,1
213,1552,    hlrc: add get watch api (#35531)          this changes adds the support for the get watch api in the high level rest client. ,0,1,0
214,699,    iwlwifi: mvm: add reorder timeout per frame          add a timer in order to release expired frames from the     reorder buffer.     this is needed since some aps do not retransmit frames     to fill in the reorder holes and in tcp it results with     a complete stall of traffic.          this has a few side effects on the general design:          the nssn may not reflect the t,0,1,0
215,1043,    cmd/go: add go tools to rearrangement     fix  vet     yacc is also fixed (it was wrong before)     all that's left is the commands used during compilation     this looks like a huge cl  but it's almost all file renames.     the action is in cmd/go/pkg.go  the makefiles  and .../doc.go.          r=golang-dev  rsc     cc=golang-dev     https://golang.org/cl/5595044 ,1,1,0
216,1664,    handle net.external_inputs correctly in appendnet          summary:     when appending net a to net b  an external input of net a should not be added as     an external input of net b if net b is outputting that blob.          reviewed by: dzhulgakov          differential revision: d4975921          fbshipit-source-id: a5c0ada7b96d851e57d345244d322dd93c7be8e4 ,1,0,0
217,1663,    timers: add clock_boottime hrtimer base          clock_monotonic stops while the system is in suspend. this is because     to applications system suspend is invisible. however  there is a     growing set of applications that are wanting to be suspend-aware      but do not want to deal with the complications of clock_realtime     (which might jump around if settimeofday is calle,0,1,0
218,622,    net/http: fix inserting of implicit redirects in serve mux          in serve mux  if pattern contains a host name  pass only the path to     the redirect handler.          add tests for serve mux redirections.          r=rsc     cc=bradfitz  gobot  golang-dev     https://golang.org/cl/6329045 ,1,1,0
219,1416,    uwb: return uwb_rsv_alloc_not_found rather than crashing on null dereference if kzalloc fails          crashing on a null pointer deref is never a nice thing to do. it seems     to me that it's better to simply return uwb_rsv_alloc_not_found if     kzalloc() fails in uwb_rsv_find_best_allocation().          signed-off-by: jesper juhl <jj@chaosbits.net>     acked-by: david vrabe,1,0,0
220,719,    ath10k: remove meaningless check          the check doesn't make much sense. if the address     were to be 0x0000 the check would fail. in this     case a 0 address isn't wrong.          signed-off-by: michal kazior <michal.kazior@tieto.com>     signed-off-by: kalle valo <kvalo@qca.qualcomm.com> ,0,0,1
221,1014,    drm/amdgpu: make pad_ib a ring function v3          the padding depends on the firmware version and we need that for bo moves as     well  not only for vm updates.          v2: new approach of making pad_ib a ring function     v3: fix typo in macro name          signed-off-by: christian könig <christian.koenig@amd.com>     reviewed-by: alex deucher <alexander.deucer@amd.com>   ,1,1,1
222,1531,    debugger: show current line  fix for #6150 ,1,0,0
223,1638,    mm: split gfp_mask and mapping flags into separate fields          mapping->flags currently encodes two different things into a single flag.     it contains sticky gfp_mask for page cache allocations and as_ codes used     to report errors/enospace and other states which are mapping specific.     condensing the two semantically unrelated things saves few bytes but it     also c,0,0,1
224,2032,    preserve order of all heaps  fixes #795 ,1,0,0
225,3,    improve video updates from sheet ,0,0,1
226,565,    bridge: pseudo-header required for the checksum of icmpv6          checksum of icmpv6 is not properly computed because the pseudo header is not used.     thus  the mld packet gets dropped by the bridge.          signed-off-by: zheng yan <zheng.z.yan@intel.com>     reported-by: ang way chuang <wcang@sfc.wide.ad.jp>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
227,1260,    kvm: mmu: use cmpxchg for pte updates on walk_addr()          in preparation for multi-threaded guest pte walking  use cmpxchg()     when updating guest pte's. this guarantees that the assignment of the     dirty bit can't be lost if two cpu's are faulting the same address     simultaneously.          [avi: fix kunmap_atomic() parameters]          signed-off-by: marcelo tosatti,1,0,0
228,1193,    [patch] oss: use array_size macro when appropriate          use array_size macro already defined in kernel.h          signed-off-by: ahmed s. darwish <darwish.07@gmail.com>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,0,0,1
229,633,    make changes to report error if the type used from external module cannot be named     adds test cases too ,0,1,1
230,1669,    finagle-thrift: implement netty4 transport          problem          the finagle-thrift project doesn't have a netty4 transport     implementation.          solution          add one.          result          we can now use netty4 as the transport implementation for     thrift clients and servers. this commit also contains more     refactoring  moving netty3 specific types to t,1,1,1
231,1353,    net: use netdev_tx_ok instead of 0 in ndo_start_xmit() functions          this patch is the result of an automatic spatch transformation to convert     all ndo_start_xmit() return values of 0 to netdev_tx_ok.          some occurences are missed by the automatic conversion  those will be     handled in a seperate patch.          signed-off-by: patrick mchardy <kaber@trash.net>  ,1,0,1
232,1155,    try catch failjob          failjob gets called from 2 separate places. better to put this code     around a try catch instead of in the try catch in handlejobexception ,0,0,1
233,1005,    test(aio): fix testing of `ngpackagesinstaller` (#19655)          pr close #19655 ,1,0,0
234,1284,    [spark-14011][core][sql] enable `linelength` java checkstyle rule          ## what changes were proposed in this pull request?          [spark coding style guide](https://cwiki.apache.org/confluence/display/spark/spark+code+style+guide) has 100-character limit on lines  but it's disabled for java since 11/09/15. this pr enables **linelength** checkstyle again. to help that  thi,0,1,1
235,1218,    [spark 6096][mllib] add naive bayes load save methods in python          see [spark-6096](https://issues.apache.org/jira/browse/spark-6096).          author: xusen yin <yinxusen@gmail.com>          closes #5090 from yinxusen/spark-6096 and squashes the following commits:          bd0fea5 [xusen yin] fix style problem  etc.     3fd41f2 [xusen yin] use hanging indent in python st,1,0,0
236,1728,    drm/i915: add rc6 residency times to debugfs          rc6 residency should be in intervals of 1.28us  and the counter wraps.     here is an example using awk to get the various rc6 and rc6+ residency     times in seconds  since boot.          cat /sys/kernel/debug/dri/0/i915_drpc_info  | grep residency | awk -f':' -f' '  '{print $5 * 1.28 / 1000000}'          this is primarily ,0,1,0
237,1172,    fix: small actions should show descriptions on the user stream ,1,0,0
238,1515,    ondidchangecodelenses:event<void>  fixes #19495 ,1,0,0
239,953,    gui: format + change shortcutsdialog title ,0,0,1
240,1617,    headers: remove sched.h from interrupt.h          after m68k's task_thread_info() doesn't refer to current      it's possible to remove sched.h from interrupt.h and not break m68k!     many thanks to heiko carstens for allowing this.          signed-off-by: alexey dobriyan <adobriyan@gmail.com> ,0,0,1
241,1933,    clk: qcom: gdsc: add support to poll cfg register to check gdsc state          the default behavior of the gdsc enable/disable sequence is to     poll the status bits of either the actual gdscr or the     corresponding hw_ctrl registers.          on targets which have support for a cfg_gdscr register  the     status bits might not show the correct state of the gdsc      especia,0,1,0
242,566,    add a mode to test implicit dynamic with private imports ,0,1,0
243,1323,    staging: wilc1000: remove unused string functions          the driver provides wrappers for a lot of string operations.     some of them are unused  while others should be replaced     with normal kernel functions.          this replaces the unused ones for now  and leaves the other     ones for a later cleanup.          signed-off-by: arnd bergmann <arnd@arndb.de>     signed-o,0,0,1
244,1058,"    - fix bug #37212 (access to protected property of common base class)       by adding ""zend_class_entry *ce"" to struct zend_property_info;     # besides closing the bug this patch allows to optimize a bunch of     # property handling optimizations. i need to find out what all can be     # optimized. all other tests relevant to class handling still pass. ",1,1,1
245,1231,    introduce value witness markers into the generic set of requirements.          value witness markers note the location within a generic function     type's list of requirements where the value witness table will be     placed when calling a generic function with that type. it allows one     to get the same effect from walking the requirements of a generic     function that one ,0,1,0
246,1914,    [spark-13583][core][streaming] remove unused imports and add checkstyle rule          ## what changes were proposed in this pull request?          after spark-6990  `dev/lint-java` keeps java code healthy and helps pr review by saving much time.     this issue aims remove unused imports from java/scala code and add `unusedimports` checkstyle rule to help developers.          ##,0,1,1
247,38,    acpi: add missing prototype_for arch_post_acpi_subsys_init()          in commit e7ff3a47630d (x86/amd: check for the c1e bug post acpi subsystem     init) a new function arch_post_acpi_subsys_init() was introduced. this     weak function can potentially be overridden on a per arch basis  introduce     the prototype for clarity.          silence the following gcc warning (w=1): ,0,1,0
248,403,"    v4l/dvb (5648): dvb/frontends: remove unnecessary #include's of ""dvb-pll.h""          these sources do not need to #include ""dvb-pll.h""          signed-off-by: michael krufky <mkrufky@linuxtv.org>     signed-off-by: mauro carvalho chehab <mchehab@infradead.org> ",0,0,1
249,1779,    staging: rtl8192u: fix checkpatch issue with comma in r819xu_firmware.c          add space after ' ' to fix the error message provided by checkpatch.pl:     error: space required after that ' '          signed-off-by: freeman zhang <freeman.zhang1992@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
250,71,    fix(server side rendering): fixed issues with server side rendering for alerting & for auth proxy scenarios  fixes #6115  fixes #5906 ,1,0,0
251,1247,    fixed #1935 -- initial sql data now works in sqlite if there are multiple statements. thanks  jpellerin@gmail.com          git-svn-id: http://code.djangoproject.com/svn/django/trunk@2985 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,1,0,0
252,88,    fix escaping in generation ,1,0,0
253,1994,    [scsi] aacraid: rework communication support code          received from mark salyzyn           replace all if/else communication transports with a platform function call.     this is in recognition of the need to migrate to up-and-coming transports.     currently the linux driver does not support two available communication     transports provided by our products  these will b,0,1,0
254,333,    [spark-9731] standalone scheduling incorrect cores if spark.executor.cores is not set          the issue only happens if `spark.executor.cores` is not set and executor memory is set to a high value.     for example  if we have a worker with 4g and 10 cores and we set `spark.executor.memory` to 3g  then only 1 core is assigned to the executor. the correct number should be 10 cor,1,0,0
255,678,    improve powershell startup time (#8341)          major changes are as follows:     - avoid `securitysupport.isproductbinary` and unnecessary amsi/suspicious code scan at startup time        - update `compiledscriptblockdata.isproductcode` to avoid unnecessary calls to `isproductbinary`  which attempts to retrieve catalog signature of the target file.        - update `performsec,0,0,1
256,1404,    rtc: hid-sensor-time: remove some dead code          devm_rtc_device_register() doesn't ever return null so there is no need     to check.          signed-off-by: dan carpenter <dan.carpenter@oracle.com>     signed-off-by: alexandre belloni <alexandre.belloni@free-electrons.com> ,0,0,1
257,156,    [powerpc] add tsi108_pci.h for common pci functions          add a header file for the common pci routines used for the tsi bridge          signed-off-by: josh boyer <jwboyer@linux.vnet.ibm.com>     acked-by: olof johansson <olof@lixom.net>     signed-off-by: paul mackerras <paulus@samba.org> ,0,1,0
258,823,    implement more support for per-channel quantization (#26240)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/26240          in particular adds support for empty/empty_like which is needed for memory layouts to work.          test plan: imported from oss          differential revision: d17443220          pulled by: dzhulgakov          fbshipi,0,0,1
259,769,    pnfsblock: add blocklayout kconfig option  makefile  and stubs          define a configuration variable to enable/disable compilation of the     block driver code.          add the minimal structure for a pnfs block layout driver  and empty     list-heads that will hold the extent data          [pnfsblock: make nfs_v4_1 select pnfs_block]     signed-off-by: peng tao <peng_tao@e,0,1,0
260,1584,    fixed #828. added many other minor refactorings. ,1,0,1
261,449,    x86 idle: repair large-server 50-watt idle-power regression          linux 3.10 changed the timing of how thread_info->flags is touched:                  x86: use generic idle loop             (7d1a941731fabf27e5fb6edbebb79fe856edb4e5)          this caused intel nhm-ex and wsm-ex servers to experience a large number     of immediate monitor/mwait break wakeups  which caused cpu,0,0,1
262,1386,"    mangler: add a dwarf-only mangling for type aliases that includes the     decl context of the type alias.     this implements <rdar://problem/15290346> ""typealias sugar needs to be     mangled into debug info mangled type names"".          swift svn r10749 ",0,1,0
263,116,    pm / devfreq: add debugfs support with devfreq_summary file          add debugfs interface to provide debugging information of devfreq device.     it contains 'devfreq_summary' entry to show the summary of registered     devfreq devices as following and the additional debugfs file will be added.     - /sys/kernel/debug/devfreq/devfreq_summary          [detailed description of e,0,1,1
264,808,    smarter fix for #810  since not all 24-character strings are like mongodb ids. ,1,0,1
265,1194,    support softmax on hexagon and remove some custom ops from graph transferer     change: 147788426 ,0,1,1
266,146,    net: fix can_checksum_protocol() arguments swap          commit 0363466866d901fbc (net offloading: convert checksums to use     centrally computed features.) mistakenly swapped can_checksum_protocol()     arguments.          this broke ipv6 on bnx2 for instance  on nic without tcpv6 checksum     offloads.          reported-by: hans de bruin <jmdebruin@xmsnet.nl>     signed-off-,1,0,0
267,1618,    get rid of fromgcvalue     get rid of gcvalueextractor     remove unused code ,0,0,1
268,1724,    refactor: rename the atom directory to shell ,0,0,1
269,110,    don't take down http(s) server on connection errors (fixes #700) ,1,0,0
270,1672,    drm/amd/display: fix aviinfoframe bar info and add set_avmute          signed-off-by: charlene liu <charlene.liu@amd.com>     reviewed-by: dmytro laktyushkin <dmytro.laktyushkin@amd.com>     acked-by: harry wentland <harry.wentland@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,1,0
271,959,    powerpc: add macros to access floating point registers in thread_struct.          we are going to change where the floating point registers are stored     in the thread_struct  so in preparation add some macros to access the     floating point registers.  update all code to use these new macros.          signed-off-by: michael neuling <mikey@neuling.org>     signed-off-by: paul,0,0,1
272,254,    first iteration          create shared folder for vue common files     update paths          second iteration - refactor main component to be 100% reusable between the 3 tables ,0,0,1
273,990,    more strongly typed telemetry (#76472) ,0,0,1
274,486,    returns `nil` when `am::errors#delete` doesn't delete anything:          - `am::errors#delete` currently returns an empty array when trying       to delete an error that doesn't exist.            this behaviour is surprising and i think it would be better       to no return a truthy value but instead return nil like       `hash#delete` does. ,1,0,0
275,1304,    fix(core): allow to query content of templates that are stamped out at a different place          previously  if a `templateref` was created in a `viewcontainerref`     at a different place  the content was not query able at all.          with this change  the content of the template can be queried     as if it was stamped out at the declaration place of the template.          ,1,0,0
276,23,    asoc: tegra: use dai's not card's dev for dev_err          this is the actual device of the i2s or spdif controller reporting the     problem. if a future change converts these controllers to be codecs  then     there may be no pcm associated with the substream  so this change avoids     a crash.          signed-off-by: stephen warren <swarren@nvidia.com>     signed-off-by: mar,0,1,0
277,130,    sysctl: introduce a generic compat sysctl sysctl          this uses compat_alloc_userspace to remove the various     hacks to allow do_sysctl to write to throuh oldlenp.          the rest of our mature compat syscall helper facitilies     are used as well to ensure we have a nice clean maintainable     compat syscall that can be used on all architectures.          the motiviati,0,1,0
278,1462,    use j2objc's @retainedwith annotation instead of @weak on immutablemap.keyset     to prevent crashes on ios.          tested=created a map inside a autorelease pool and saved a reference to the     keyset. checked that the keyset functions correctly outside the autorelease     pool. checked that both the keyset and the map are deallocated by the     autorelease pool when not ho,1,0,0
279,651,"    remove @suppresswarning for ""checkreturnvalue"" and ""canignorereturnvalue"" in     favor of unused variables.     -------------     created by moe: https://github.com/google/moe     moe_migrated_revid=110486602 ",0,0,1
280,114,    ahci: add pci ids for intel bay trail  cherry trail and apollo lake ahci          add pci ids for intel bay trail  cherry trail and apollo lake ahci     sata controllers. this commit is a preparation patch for allowing a     different default sata link powermanagement policy for mobile chipsets.          signed-off-by: hans de goede <hdegoede@redhat.com>     signed-off-by: teju,0,1,0
281,163,"    treewide: switch define_timer callbacks to struct timer_list *          this changes all define_timer() callbacks to use a struct timer_list     pointer instead of unsigned long. since the data argument has already been     removed  none of these callbacks are using their argument currently  so     this renames the argument to ""unused"".          done using the following semanti",0,0,1
282,1443,    [net] cleanup maxuploadtarget          * log: nmaxoutboundlimit is in bytes     * log: hide misleading -maxuploadtarget=0 warning     * qa : minor cleanup to maxuploadtarget rpc tests     * net: use default_max_upload_target = 0 ,0,0,1
283,1705,    consistent use of header comment format.          correct format:     //===--- name of file - description ----------------------------*- lang -*-===// ,0,0,1
284,1626,    ptrace: add support for generic ptrace_getregset/ptrace_setregset          generic support for ptrace_getregset/ptrace_setregset commands which     export the regsets supported by each architecture using the correponding     nt_* types. these nt_* types are already part of the userland abi  used     in representing the architecture specific register sets as different notes     ,0,1,0
285,1706,    inferfromusage codefix now emits jsdoc in js files (#27610)          * now adding @type to variable declarations  at least          probably everything else  but not as well.          * improve @param output and add test          it's still bad  but at least it's not wrong.          * add some js/inferfromusage tests and fixes          also  remove redundant is(set|get)accessor,1,1,1
286,1237,"    whitespace: add tab-in-indent error class          some projects and languages use coding style where no tab character is used to     indent the lines.          this only adds support and documentation for ""apply --whitespace=warn"" and     ""diff --check""; later patches add ""apply --whitespace=fix"" and tests.          signed-off-by: chris webb <chris@arachsys.com>     signed-off",0,1,0
287,1864,    ieee802154: introduce sysfs file          this patch moves the sysfs handling in a own file. this is like wireless     sysfs file handling.          signed-off-by: alexander aring <alex.aring@gmail.com>     signed-off-by: marcel holtmann <marcel@holtmann.org> ,0,1,0
288,1508,    introduce is_owner_or_cap() to wrap cap_fowner use with fsuid check          introduce is_owner_or_cap() macro in fs.h  and convert over relevant     users to it. this is done because we want to avoid bugs in the future     where we check for only effective fsuid of the current task against a     file's owning uid  without simultaneously checking for cap_fowner as     well  thu,0,1,1
289,1368,    rename: linux/pata_platform.h to linux/ata_platform.h          signed-off-by: jeff garzik <jgarzik@redhat.com> ,0,0,1
290,489,    branch 135176011 (#4771)          * adds a test tf.assert inside a function.     change: 134855633          * remove non-batch methods from operator_pd_cholesky if they have been merged with batch.     recent changes to tensorflow linear algebra ops merged batch/non-batch ops.     this makes their separation un-necessary in operatorpdcholesky.  note that operatorpdbase will sti,0,1,1
291,1516,    unnest sources from the framework/src setup (#9023)          * bulk unnest from the framework/src setup          just the bulk moves  without file content changes.          * fix paths from unesting from the framework/src setup          * re-add gz test assets          * move bin to scripts          * correctly moving bin scripts          * remove unused file ,1,1,1
292,1589,    absolutized paths involving the scala package.          confusing  now-it-happens now-it-doesn't mysteries lurk     in the darkness. when scala packages are declared like this:            package scala.collection.mutable          then paths relative to scala can easily be broken via the unlucky     presence of an empty (or nonempty) directory. example:            // a.scala    ,0,0,1
293,1207,    iwlwifi: mvm: change beacon filtering command          change beacon filtering command due to a change in the api.          in case the fw supports the old api  we do not send the     bf hcmd and assume that since the corresponding struct in     the fw is zeroed by default then we don't need to disable     it in the fw actively.          signed-off-by: hila gonen <hila.gonen@in,0,1,0
294,1044,    spi: davinci: simplify prescalar calculation          simplify pre-scalar calculation and move it into a seprate     function.          refuse to correct invalid pre-scalar values silently as this     might lead to unexpected bugs and lower performance. instead     an error will force users to dig into the root-cause of the     issue.          while at it  remove some device sp,1,0,1
295,1151,"    greybus: loopback: use u64_max for initialization          use the largest representable value when initializing the ""min""     field when resetting loopback statistics.          signed-off-by: alex elder <elder@linaro.org>     reviewed-by: bryan o'donoghue <bryan.odonoghue@linaro.org>     signed-off-by: greg kroah-hartman <gregkh@google.com> ",0,0,1
296,1622,    arp: allow arp processing to honor per interface arp_accept sysctl          i found recently that the arp_process function which handles all of our received     arp frames  is using ipv4_devconf_all macro to check the state of the arp_process     flag.  this seems wrong  as it implies that either none or all of the network     interfaces accept gratuitous arps.  this patch corr,1,0,0
297,174,    mx25: add support for the csi device          signed-off-by: baruch siach <baruch@tkos.co.il>     signed-off-by: sascha hauer <s.hauer@pengutronix.de> ,0,1,0
298,255,    deprecate all jvm 1.5 targets and make 1.6 default.          add a check if deprecated target is being used. i put     that check into `checkdeprecatedsettings`. i tried to     invent some general mechanism for deprecating choices     in choicesetting but i gave up eventually. it wasn't     worth it the complexity. also  with current approach     i'm able to provide nice  custo,0,0,1
299,158,    removed more than 3400 svn '$id' keywords and r...          removed more than 3400 svn '$id' keywords and related junk. ,0,0,1
300,1689,    drm/amdgpu: retry dcpd fetch          retry the dpcd fetch several times.  some edp panels     fail several times before the fetch is successful.          bug:     https://bugs.freedesktop.org/show_bug.cgi?id=73530          ported from radeon.          reviewed-by: christian könig <christian.koenig@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,0,0
301,1116,    simplify logging of ts request errors          fixes #28095          removes the manual error logging on client requests in favor of doing this automatically in the service client. also fixes logging of canellation errors ,1,0,1
302,461,"    net: vlan: rename netif_f_hw_vlan_* feature flags to netif_f_hw_vlan_ctag_*          rename the hardware vlan acceleration features to include ""ctag"" to indicate     that they only support ctags. follow up patches will introduce 802.1ad     server provider tagging (stags) and require the distinction for hardware not     supporting acclerating both.          signed-off-by: patri",0,0,1
303,202,    ecryptfs: rename ecryptfs_crypt_stat.num_header_bytes_at_front          this patch renames the num_header_bytes_at_front variable to     metadata_size since it now contains the max size of the metadata.          reviewed-by: eric sandeen <sandeen@redhat.com>     signed-off-by: tyler hicks <tyhicks@linux.vnet.ibm.com> ,0,0,1
304,1081,    alsa: usb-audio - add quirks for m-audio fast track pro and quattro          this patch gives m-audio fast track pro and m-audio quattro quirks and     endpoints to boot and setup those devices with special options (digital     inputs and outputs  24 bits mode  etc...). m-audio audiophile quirks are     just adapted to match the new global m-audio parameters.          special c,0,1,0
305,1878,    add flag cursor and pending flags. ,0,1,0
306,369,    build(broccoli): add support for diffresult#addedpaths          some plugins want to explicitly know of new paths  so we need to distinguish them from changed paths. ,0,1,0
