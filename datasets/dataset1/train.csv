,level_0,index,text,Corrective,Adaptive,Perfective
0,0,1501,    add a warn() macro; this is warn_on() + printk arguments          add a warn() macro that acts like warn_on()  with the added feature that it     takes a printk like argument that is printed as part of the warning message.          [akpm@linux-foundation.org: fix printk arguments]     [akpm@linux-foundation.org: coding-style fixes]     signed-off-by: arjan van de ven <arjan@lin,0,1,0
1,1,1470,    update scalafmt config for finagle.          problem:       the scalafmt config doesn't match the twitter style guide.       this causes angst and makes onboarding new folks onto scalafmt       a difficult sell.          solution:       update the scalafmt config  and everyone who has opted into       automatic application of scalafmt.          result:       the code automatica,1,0,0
2,2,1390,    ima: digital signature verification using asymmetric keys          asymmetric keys were introduced in linux-3.7 to verify the signature on     signed kernel modules. the asymmetric keys infrastructure abstracts the     signature verification from the crypto details. this patch adds ima/evm     signature verification using asymmetric keys. support for additional     signature ve,0,1,1
3,3,1920,    fix modules/ typos          found using `codespell -q 3 -s ./3rdparty -l activ amin ang atleast childs dof endwhile halfs hist iff nd od uint` ,1,0,0
4,4,551,    removed unused function. (seems like a copy of imap_body) ,0,0,1
5,5,421,    remove need for two attributes on diagnostic analyzers.          current design of diagnosticanalyzers require each analyzer type to have 2 attributes:     1) diagnosticanalyzerattribute: this is defined in microsoft.codeanalysis and is used by       (a) command line compilers to detect analyzer types in analyzer assemblies.       (b) msbuild and ide to detect per-project analy,0,0,1
6,6,1001,    typo fix: immediatly -> immediately          signed-off-by: hu tao <hutao@cn.fujitsu.com> ,1,0,0
7,7,494,    test(ivy): enable ivy tests for platform-browser (#27460)     pr close #27460 ,0,1,0
8,8,16,    remove elasticsearchiae and elasticsearchise          this commit removes elasticsearchiae and elasticsearchise in favor of     the jdks iae and ise.          closes #10794 ,1,0,0
9,9,1348,    bluetooth: rename le_scanning_* macros          this patch renames le_scanning_enabled and le_scanning_disabled     macros to le_scan_enable and le_scan_disable in order to keep     the same prefix others le scan macros have.          it also fixes le_scan_enable_req function so it uses the le_scan_     enable macro instead of a magic number.          signed-off-by: andre guede,1,1,1
10,10,1810,    added #define __stdc_format_macros to tensor and storage code templates to avoid problems with gcc 4.8.5 (#3629) ,0,1,0
11,11,250,    intel mkl kernels for concat  lrn and fusedbatchnorm          this commit implements following changes:          1) mkl kernels for lrn  concat  concatv2 and fusedbatchnorm and applicable gradient ops     2) graph layout pass change to support new ops     3) removes mkl graph node merge pass as a separate pass     4) changes mkl-tf tensor ordering from interleaved to contiguous,0,1,1
12,12,44,"    imx: fix iomux v3          commit ""arm: i.mx iomux-v3 replace struct pad_desc with bitmapped cookie""     (b705cb4d42e95a4a43a8945571c8613e71526c3d) introduced a typo which was     preventing my efikamx to boot. this patch is fixing that.          signed-off-by: arnaud patard <arnaud.patard@rtp-net.org>     tested-by: fabio estevam <fabio.estevam@freescale.com>     signed-off-by",1,0,0
13,13,515,    get template should return warmers          fixes #2868 ,1,0,0
14,14,24,    removed podstatus.host          fixes #6165 ,1,0,0
15,15,1256,    track signup modal panel nav button clicks          don't track them on mixpanel          add tracking for other paths          don't log errors  don't dupe legacy event ,0,1,0
16,16,509,    add basic compilation tests from swift-compiler-crashes (https://github.com/practicalswift/swift-compiler-crashes.git)          swift svn r21693 ,0,1,0
17,17,1062,    fix(tap-click): works inside shadow-dom          adds private ion-activable attribute          fixes #15128 ,1,1,0
18,18,58,    ensure that the deferred tick runs this frame.          previously it was using date.now()  which might be a millisecond or two past the     now time of the current frame  and thus might not run until the next frame! by     using the current time  we guarantee that it runs at the end of this frame. ,1,0,0
19,19,1440,    atyfb: fix header file trailing whitespace          fix trailing whitespace because quilt complained about it.          signed-off-by: randy dunlap <randy.dunlap@oracle.com>     cc: benjamin herrenschmidt <benh@kernel.crashing.org>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,1,0,0
20,20,1737,    improve etcd-version-monitor metrics proxying  add etcd 3.1 gprc metric support ,0,1,1
21,21,17,    staging: rtl8192e: remove undefs          they relate to macros that are not used in the driver.          signed-off-by: mateusz kulikowski <mateusz.kulikowski@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
22,22,767,    fixed cs (missing or misplaced license blocks) ,1,0,0
23,23,186,    fixes to %pd format usage ,1,0,0
24,24,393,    use different eslint config for es6 and es5 (#11794)          * use different eslint config for es6 and es5          * remove confusing eslint/baseconfig.js & add more eslint setting for es5  es6          * more clear way to run eslint on es5 & es6 file          * seperate esnext  es6  es6 path  and use different lint config          * rename eslint config file & update eslint ,0,0,1
25,25,1185,    iwlwifi: kill iwl4965_fill_rs_info          iwl4965_fill_rs_info was used in sysfs. this info is already present     in iwl-agn-rs debugfs.          signed-off-by: tomas winkler <tomas.winkler@intel.com>     signed-off-by: zhu yi <yi.zhu@intel.com>     signed-off-by: john w. linville <linville@tuxdriver.com> ,0,0,1
26,26,906,    alsa: support module on-demand loading for seq and timer          if config_snd_dynamic_minors is used  assign /dev/snd/seq and     /dev/snd/timer the usual static minors  and export specific     module aliases to generate udev module on-demand loading     instructions:            $ cat /lib/modules/2.6.33.4-smp/modules.devname       # device nodes to trigger on-demand module l,0,1,0
27,27,989,    fixed #23395 -- limited line lengths to 119 characters. ,1,0,0
28,28,1113,"    drop scala-xml from scaladoc pt. 1          to simplify boostrapping  we're going nih on scala-xml.     next step: remove usage in diagram generation  or maybe     move that to a d3 / dot js client-side solution.          the diff on scaladoc for the core is minimal  using     a textconv Ã  la:          ```     cat ""$1"" | perl -pe 's/\s+/ /gm' | perl -pe 's/ef26caa/60fce92/g' | ",0,0,1
29,29,1027,    - introduced new compilation loop ,0,1,0
30,30,1255,    revert support for isolates.          it was decided that the performance benefits that isolates offer (faster spin-up     times for worker processes  faster inter-worker communication  possibly a lower     memory footprint) are not actual bottlenecks for most people and do not outweigh     the potential stability issues and intrusive changes to the code base that     first-cla,0,0,1
31,31,1596,    add toggle to show closed issues on milestones#show          progress on #1167 ,0,1,0
32,32,1101,    fix copy when used with scratch and images with empty rootfs          commit the rwlayer to get the correct diffid     refacator copy in thebuilder     move more code into exportimage     cleanup some windows tests     release the newly commited layer.     set the imageid on the buildstage after exporting a new image.     move archiver to buildmanager.     have releaseablelayer,1,0,1
33,33,1442,    add mono as a test runner ,0,1,0
34,34,1126,    style(reflector): formatting ,0,0,1
35,35,928,    refactoring: moving and renaming things ,0,0,1
36,36,1075,    add support for delete animation in layoutanimation on ios          summary:this adds support for delete view animations in layoutanimation for ios. it supports the same properties as the create animation (alpha  scale).          this allows making simple animations when removing a view which is normally hard to do in react since we need to not remove the view node immediately.,0,1,0
37,37,1234,    removed useless zval_ptr_dtor() ,0,0,1
38,38,522,    improved push and pull with upload manager and download manager          this commit adds a transfer manager which deduplicates and schedules     transfers  and also an upload manager and download manager that build on     top of the transfer manager to provide high-level interfaces for uploads     and downloads. the push and pull code is modified to use these building     bloc,0,0,1
39,39,424,    eventbus now handles adding and removal better. see #2561 ,0,1,0
40,40,850,"    [powerpc] celleb: update for pci          this adds support for the pci bus on celleb with new ""i/o routines     for powerpc.""  external pci on celleb must do explicit synchronization     with devices (bus has no automatic synchronization feature).          signed-off-by: kou ishizaki <kou.ishizaki@toshiba.co.jp>     acked-by: arnd bergmann <arnd@arndb.de>     signed-off-by: pa",0,1,0
41,41,1103,    feat(pipe): added the pipe decorator and the pipe property to view          breaking change:         instead of configuring pipes via a pipes object  now you can configure them by providing the pipes property to the view decorator.              @pipe({           name: 'double'         })         class doublepipe {           transform(value  args) { return value * 2; }         },0,1,0
42,42,1901,    remove ioremap_nocache and devm_ioremap_nocache          ioremap has provided non-cached semantics by default since the linux 2.6     days  so remove the additional ioremap_nocache interface.          signed-off-by: christoph hellwig <hch@lst.de>     acked-by: arnd bergmann <arnd@arndb.de> ,0,0,1
43,43,1504,    added support for multitargeting          - added 1_x src project for multitargeting          - added 1_x test project for multitargeting          - added 1_x test mvcshim for multitargeting          - make section directive generate the correct code the appropriate version          - added another sln ,0,1,0
44,44,2017,    add correct dependencies to sdca ops to fix build breakage.     change: 115408162 ,1,0,0
45,45,853,    refactor holes and reifiers slices of quasiquotes cake          this commit performs a number of preliminary refactoring needed to     implement unliftable:          1. replace previous inheritance-heavy implementation of holes with        similar but much simpler one. holes are now split into two different        categories: applyhole and unapplyhole which correspondingly repr,0,0,1
46,46,168,    minor improvements over cl/163390862: avoid storing unused data  and add a     little bit of documentation for future reference.          piperorigin-revid: 163483408 ,0,0,1
47,47,914,    @cleaned up extension namespace (stig)     cleaned up extension namespace  and changed ext/standard into one single     extension. ,0,0,1
48,48,309,    fixed port separator in dsn when using dblib with pdo in sql server connector ,1,0,0
49,49,597,    make numeric namings consistent with bytes ones     also add the ability to get the ordinals from doublevalues.withordinals and longvalues.withordinals ,0,0,1
50,50,1530,    add test for emit destructuring invariable declaration with omitted expression ,0,1,0
51,51,1777,    power: supply: maxim: add spdx license identifiers          replace gpl v2.0 and v2.0+ license statements with spdx license     identifiers.          signed-off-by: krzysztof kozlowski <krzk@kernel.org>     signed-off-by: sebastian reichel <sebastian.reichel@collabora.com> ,0,1,0
52,52,1066,    feature: make pin expiration mandatory ,0,1,0
53,53,1692,    add restart koreader function and ensure flushsettings event can be delivered to all widgets (#2772) ,0,1,0
54,54,1665,    dmaengine: tegra-apb: remove unnecessary return statements and variables          some void functions have unnecessary return statements at the end     (reported by sparse) and so remove these. also remove the return variables     from functions tegra_dma_prep_slave_sg() and tegra_dma_prep_slave_cyclic()     because the value is not used.          signed-off-by: jon hunter <jon,0,0,1
55,55,1921,    e1000: driver state fixes (race fix)          we were plagued by our interrupt handler posting a watchdog event which     could occur when our adapter was going down in case a late packet arrived     just before e1000_down() finished. this caused the watchdog timer to start     after the nic was down and keep rescheduling it every n seconds. once     the driver unloaded it woul,1,0,0
56,56,2024,    drivers/misc/hmc6352.c: fix wrong return value checking for i2c_master_recv()          i2c_master_recv() returns negative errno  or else the number of bytes     read.  thus i2c_master_recv(client  i2c_data  2) returns 2 instead of 1 in     success case.          [akpm@linux-foundation.org: make `ret' signed]     signed-off-by: axel lin <axel.lin@gmail.com>     cc: kalhan trisal,1,0,0
57,57,1033,    btrfs: merge btrfs_find_device and find_device          both btrfs_find_device() and find_device() does the same thing except     that the latter does not take the seed device onto account in the device     scanning context. we can merge them.          signed-off-by: anand jain <anand.jain@oracle.com>     reviewed-by: david sterba <dsterba@suse.com>     signed-off-by: david ste,0,0,1
58,58,1447,    drm/amdkfd: use ref count to prevent kfd_process destruction          use a reference counter instead of a lock to prevent process     destruction while functions running out of process context are using     the kfd_process structure. in many cases these functions don't need     the structure to be locked. in the few cases that really do need the     process lock  take it expli,1,0,1
59,59,1541,    bluetooth: refactor arguments of mgmt_device_connected          the values of a lot of the mgmt_device_connected() parameters come     straight from a hci_conn object. we can simplify the function by passing     the full hci_conn pointer to it.          signed-off-by: alfonso acosta <fons@spotify.com>     signed-off-by: johan hedberg <johan.hedberg@intel.com> ,0,0,1
60,60,358,    add test operation (#114)          addresses #1 ,1,1,0
61,61,227,    v4l/dvb (11537): gspca - m5602-po1030: clear subsampling flag when setting vga mode          signed-off-by: erik andr?n <erik.andren@gmail.com>     signed-off-by: mauro carvalho chehab <mchehab@redhat.com> ,0,0,1
62,62,279,    fix the prefix comparison ,1,0,0
63,63,1568,    [codecompletion] fix completion in string literal interpolation at top-level          mostly this was just returning the parserstatus bits that we got from     parseexprlist from parseexprstringliteral. the rest was just cleaning up     places that didn't handle eof very well  which is important here because     the code completion token is buried in the string literal  so the ,1,0,1
64,64,1032,    [spark-26837][sql] pruning nested fields from object serializers          ## what changes were proposed in this pull request?          in spark-26619  we make change to prune unnecessary individual serializers when serializing objects. this is extension to spark-26619. we can further prune nested fields from object serializers if they are not used.          for example  in foll,0,0,1
65,65,1436,    ath10k: refactor phyerr event handlers          existing phyerr event handlers directly uses phyerr header format     (ie  struct wmi_phyerr and struct wmi_phyerr_event) in the code     exactly on how firmware packs it. this is the problem in 10.4 fw     specific phyerr event handling where it uses different phyerror     header format. before adding 10.4 specific handler  littl,0,0,1
66,66,1051,    shapes now handle radial gradient fills. handled one sprite (new anya attack) export including initializing a container with movie clip arguments for no apparent reason  so loosened spriteparser a bit to handle this. ,1,0,0
67,67,1897,    performance optimization for detection of modified submodules          in the worst case is_submodule_modified() got called three times for     each submodule. the information we got from scanning the whole     submodule tree the first time can be reused instead.          new parameters have been added to diff_change() and diff_addremove()      the information is stored in a ne,0,1,1
68,68,205,    introduce ir and parser support for ml functions.     representing function arguments is still todo.     supporting instructions other than return is also todo.          piperorigin-revid: 202570934 ,0,1,0
69,69,700,    si-6363 removes scala.reflect.base          as the experience has shown  there's no need for a separate layer of reflection     in scala-library.jar. therefore i'm putting an end to it. ,0,0,1
70,70,1791,    update formatting and remove some unnecessary imports ,0,0,1
71,71,111,    rename warn() to warning() to clear the namespace          we want to use warn() as a variant of warn_on()  however a few drivers are     using warn() internally.  this patch renames these to warning() to avoid the     namespace clash.  a few cases were defining but not using the thing  for those     cases i just deleted the definition.          signed-off-by: arjan van de ven ,0,0,1
72,72,1466,    add aliasanalysis to torch::registeroperators() (#21084)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/21084          - now aliasanalysiskind can be set using the torch::registeroperators() api     - this also allows us to remove the last place in torch::jit::registeroperators that didn't use c10 yet.          reviewed by: dzhulgakov      ,1,1,0
73,73,1646,    add function maintainaspectratioofinteriorcontent to browserwindow in order to enforce an aspect ratio for an electron window ,0,1,0
74,74,676,"    fix: check for category conflicts in sitesetting validations (#8137)          it was possible to add a category to more than one default group  e.g. ""default categories muted"" and ""default categories watching first post"".          the bug was caused by category validations inadvertently comparing strings and numbers. ",1,0,0
75,75,747,    fix copyright header for edited files ,1,0,0
76,76,1017,    fix current spec failures ,1,0,0
77,77,1759,    api: fixes visibility of project hook          when a user is not authorized to see the list of hooks for a project  he is     still able to access the hooks separately. for example if access to     `get /projects/:id/hooks` fails and returns a `403 unauthorized` error it is     still possible to access a hook directly via `get /projects/:id/hooks/:hook_id`.          fixes acce,1,0,0
78,78,244,    delete trailing whitespace     - #engineeringday     - total replaced: 506  matching files: 118          did not change any files under test/microsoft.aspnet.razor.test/testfiles     - avoiding need to redo hashes ,0,0,1
79,79,1750,    remove unnecessary code. ,0,0,1
80,80,1717,    changed coding standards: indendation is now 4 spaces ,0,0,1
81,81,1640,    feat(browser): use appmodules for bootstrap in the browser          this introduces the `browsermodule` to be used for long form     bootstrap and offline compile bootstrap:          ```     @appmodule({       modules: [browsermodule]        precompile: [maincomponent]        providers: [â¦]  // additional providers       directives: [â¦]  // additional platform directives       ,0,1,0
82,82,936,    fix(router): do not finish bootstrap until all the routes are resolved (#14762)          deprecation:          use `routermodule.forroot(routes  {initialnavigation: 'enabled'})` instead of     `routermodule.forroot(routes  {initialnavigtaion: true})`.          before doing this  move the initialization logic affecting the router     from the bootstrapped component to the boostr,1,0,0
83,83,1505,    remove unused git attributes ident          the $id$ keywords were used in subversion where they can be substituted     with filename  last revision number change  last changed date  and last     user who changed it.          in git this functionality is different and can be done with git attribute     ident. these need to be defined manually for each file in the     .gitattrib,0,0,1
84,84,749,    [scsi] libsas: add an lu reset mechanism to the error handler          after discussion with andmike and dougg  it seems that the purpose of     eh_device_reset_handler is to issue lu resets  and that     eh_bus_reset_handler would be a more appropriate place for a phy reset.          signed-off-by: darrick j. wong <djwong@us.ibm.com>     signed-off-by: james bottomley <james.b,0,1,1
85,85,1339,    relocate projects to spring-boot-project          move projects to better reflect the way that spring boot is released.          the following projects are under `spring-boot-project`:            - `spring-boot`       - `spring-boot-autoconfigure`       - `spring-boot-tools`       - `spring-boot-starters`       - `spring-boot-actuator`       - `spring-boot-actuator-autoconfigur,0,1,1
86,86,1642,    [securitybundle] add functional test for form login with csrf token ,0,1,0
87,87,1751,    fix some format specificers          time_t is of 64 bits type on some systems as well. ,1,0,1
88,88,1084,    [patch] s390: add vmcp interface          add interface to issue vm control program commands.          signed-off-by: martin schwidefsky <schwidefsky@de.ibm.com>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ,0,1,0
89,89,1458,    improvements identified via static code analysis with cppcheck ,0,0,1
90,90,377,    [tf.data] have experimental_slack fail on nonconforming input pipelines. also updates optimize_dataset_op to fail if any of the optimizers fail (previously  it would log an error but continue).          piperorigin-revid: 251259335 ,1,0,0
91,91,1941,    enumerate fields with gitaly calls           - add a complexity of 1 if gitaly is called at least once      - add an error notification if `calls_gitaly` isn't right for a      particular field ,0,1,0
92,92,974,    small fix ,1,0,0
93,93,631,    internal: remove xcollector.          we don't actually need this interface  we can just run the post-collection     operation once collection is finished on impls that need it.          close #9677 ,0,0,1
94,94,1627,    a big cleanup of settings code.          manage existing settings and add new ones. it's paving the way for     low-fuss scalac preferences so we can exert fine grained config file     based control over compiler behavior. ,0,1,1
95,95,1588,    clean up activerecord code in todoservice          this refactors the todoservice class according to our code reuse     guidelines. the resulting code is a wee bit more verbose  but it allows     us to decouple the column names from the input  resulting in fewer     changes being necessary when we change the schema.          one particular noteworthy line in todoservice is the ,0,0,1
96,96,1966,    remove have_assert_h          the `<assert.h>` header file is part of the standard c89 headers [1] and     on older systems there needed to be also a manual check if header is     present.          since php requires at least c89 manual check and the `have_assert_h`     symbol defined by autoconf in configure.ac can be both removed [2].          this patch also removes unused <,0,0,1
97,97,639,    eeepc-wmi: refine quirks handling          signed-off-by: corentin chary <corentin.chary@gmail.com>     signed-off-by: matthew garrett <mjg@redhat.com> ,0,0,1
98,98,637,    [patch] fix for __generic_file_aio_read() to return 0 on eof          i came across the following problem while running ltp-aiodio testcases from     ltp-full-20050405 on linux-2.6.12-rc3-mm3.  i tried running the tests with     ext3 as well as jfs filesystems.          one or two fsx-linux testcases were hung after some time.  these testcases     were hanging at wait_for_all_a,1,0,0
99,99,245,    assert getexportequalslocalsymbol returns  a defined result (#21831) ,0,0,1
100,100,1039,    cmd/6g  cmd/8g: eliminate short integer arithmetic when possible.          fixes #3909.     fixes #3910.          r=rsc  nigeltao     cc=golang-dev     https://golang.org/cl/6442114 ,1,0,0
101,101,599,    serial: earlycon: add missing spinlock initialization          if an earlycon console driver needs to acquire the uart_port.lock     spinlock for serial console output  and config_debug_spinlock=y:              bug: spinlock bad magic on cpu#0  swapper/0          lock: sci_ports+0x0/0x3480  .magic: 00000000  .owner: <none>/-1  .owner_cpu: 0         cpu: 0 pid: 0 comm: swapper n,1,0,0
102,102,14,    3.x: widen functional interface throws  replace callable with supplier (#6511)          * 3.x: widen functional interface throws  replace callable with supplier          * fix typo and wrong link in supplier  some style cleanup          * some cleanup ,1,0,0
103,103,677,    s390: replace __get_cpu_var uses          __get_cpu_var() is used for multiple purposes in the kernel source. one of     them is address calculation via the form &__get_cpu_var(x).  this calculates     the address for the instance of the percpu variable of the current processor     based on an offset.          other use cases are for storing and retrieving data from the current,0,0,1
104,104,1988,    refactor(core): update migrations descriptions (#33440)          with the next version of the cli we don't need to add logging for the description of the schematic as part of the schematic itself.          this is because now  the cli will print the description defined in the `migrations.json` file.          see: https://github.com/angular/angular-cli/pull/15951          pr clo,0,0,1
105,105,1133,    src/pkg/[n-z]*: gofix -r error -force=error          r=golang-dev  bsiegert  iant     cc=golang-dev     https://golang.org/cl/5294074 ,1,0,0
106,106,1061,"    add support for federated avatars (#3320)          * add support for federated avatars          fixes #3105          removes avatar fetching duplication code     adds an ""enable federated avatar"" checkbox in user settings     (defaults to unchecked)          moves avatar settings all in the same form  making     local and remote avatars mutually exclusive          renames uploa",1,1,1
107,107,1675,    x86: speed up the irq_remapped check in hot pathes          irq_2_iommu is in struct irq_cfg  so we can do the irq_remapped check     based on irq_cfg instead of going through a lookup function. that's     especially interesting in the eoi_ioapic_irq() hotpath.          signed-off-by: thomas gleixner <tglx@linutronix.de>     reviewed-by: ingo molnar <mingo@elte.hu>     acked-by,0,0,1
108,108,1324,    refactoring the collections api to support diff...          refactoring the collections api to support differentiation between     referring to a sequential collection and a parallel collection  and to     support referring to both types of collections.          new set of traits gen* are now superclasses of both their * and par* subclasses. for example  geniterable is a superc,0,0,1
109,109,354,"    - fixed bugs #33431  #33432 (""int"" used instead of ""long"" in parameter parsing) ",1,0,0
110,110,798,    !htp #16101 improve basic directive infrastructure  add more scaladoc  fix smaller problems ,1,0,1
111,111,687,    fix for bug #31710 (return value for mysql_rollback is reverted)     fixed also same behaviour for mysql_commit and mysql_autocommit ,1,0,0
112,112,437,    s390/ipl: add helper functions to create an ipl report          pr: adjusted to the use in kexec_file later.          signed-off-by: martin schwidefsky <schwidefsky@de.ibm.com>     signed-off-by: philipp rudo <prudo@linux.ibm.com>     signed-off-by: martin schwidefsky <schwidefsky@de.ibm.com> ,0,1,1
113,113,1806,    [xla] refactor createmoduleconfig to share code between multiple call-sites.          previously service  localservice and compileonlyservice had their own code to     create a new hlomoduleconfig  with much repetition (and some ommissions);     collect all these uses in a single method.          piperorigin-revid: 163766869 ,0,1,1
114,114,1471,    block: abstract out bvec iterator          immutable biovecs are going to require an explicit iterator. to     implement immutable bvecs  a later patch is going to add a bi_bvec_done     member to this struct; for now  this patch effectively just renames     things.          signed-off-by: kent overstreet <kmo@daterainc.com>     cc: jens axboe <axboe@kernel.dk>     cc: geert uy,0,1,0
115,115,252,    staging:iio: scrap scan_count and ensure all drivers use active_scan_mask          obviously drivers should only use this for pushing to buffers.     they need buffer->scan_mask for pulling from them post demux.          signed-off-by: jonathan cameron <jic23@cam.ac.uk>     acked-by: lars-peter clausen <lars@metafoo.de>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,0,0,1
116,116,1587,"    workqueue: remove the empty check in too_many_workers()          the commit ea1abd6197d5 (""workqueue: reimplement idle worker rebinding"")     used a trick which simply removes all to-be-bound idle workers from the     idle list and lets them add themselves back after completing rebinding.          and this trick caused the @worker_pool->nr_idle may deviate than the actual     n",0,0,1
117,117,916,    ijkplayer: support get frame at time ,0,1,0
118,118,183,                   1) change default gofmt default settings for                       parsing and printing to new syntax.                            use -oldparser to parse the old syntax                        use -oldprinter to print the old syntax.                         2) change default gofmt formatting settings                       to use tabs for indentation only and to us,0,0,1
119,119,440,    v4l/dvb (3384): separate tv & radio freqs  fix cb/freq transmit order for tuners that need this.          - moved msp_set_matrix to v4l2-common.h     - fix typos and integer overflows in tea5767.c     - split old freq field into a tv_freq and a radio_freq. prevents       that a radio tuner is initialized with a tv frequency or vice versa.     - when switching to radio mode init,1,0,0
120,120,568,    more test cases ,0,1,0
121,121,1950,    setupaction parameter in mvclocalizationservices.addlocalizationservices is never used     fixes #7761 ,1,0,0
122,122,1320,    all: add /api/proxies api for statistics info ,0,1,0
123,123,588,    [spark-4397][core] cleanup 'import sparkcontext._' in core          this pr cleans up `import sparkcontext._` in core for spark-4397(#3262) to prove it really works well.          author: zsxwing <zsxwing@gmail.com>          closes #3530 from zsxwing/spark-4397-cleanup and squashes the following commits:          04e2273 [zsxwing] cleanup 'import sparkcontext._' in core ,0,0,1
124,124,67,    commands: make sure the hugo field is always initialized before it's used          wrap the field to make it accessible after initialization.          fixes #6193 ,1,0,0
125,125,538,    graph: fix for downscaling y-axis format  never downscale when value is zero  fixes #826 ,1,0,0
126,126,82,    ast: remove archetype from abstracttypeparamdecl          there's a bit of a hack to deal with generic typealiases  but     overall this makes things more logical.          this is the last big refactoring before we can allow constrained     extensions to make generic parameters concrete. all that remains     is a small set of changes to sil type lowering  and retooling     som,1,0,1
127,127,20,"    fix(ivy): handle pipes in i18n attributes properly (#30573)          prior to this change we processed binding expression (including bindings with pipes) in i18n attributes before we generate update instruction. as a result  slot offsets for pipebind instructions were calculated incorrectly. now we perform binding expression processing when we generate ""update block"" instructio",1,0,0
128,128,642,    fix nest.map_structure() bug where attr objects were repacked in the wrong order.          piperorigin-revid: 239153412 ,1,0,0
129,129,962,    added @ to all chmod() calls to avoid php warnings (operation not permitted) when using cifs or ntfsa (closes #2125) ,0,0,1
130,130,445,    update libcc for electron/libchromiumcontent#285          this fixes non-client area dpi scaling on recent windows 10 versions.     see discussion in #8786. ,1,0,0
131,131,234,    add error for class exprs w/private properties ,0,1,0
132,132,1524,    * added an en_za company provider  that can generate company registration numbers ,0,1,0
133,133,1984,    fix bug for field presence ,1,0,0
134,134,385,    revision.c: put promisor option in specialized struct          put the allow_exclude_promisor_objects flag in setup_revision_opt. when     it was in rev_info  it was unclear when it was used  since rev_info is     passed to functions that don't use the flag. this resulted in     unnecessary setting of the flag in prune.c  so fix that as well.          signed-off-by: matthew dev,1,0,1
135,135,1874,"    drm/nouveau/nouveau: fix incorrect sizeof on args.src an args.dst          the sizeof is currently on args.src and args.dst and should be on     *args.src and *args.dst. fortunately these sizes just so happen     to be the same size so it worked  however  this should be fixed     and it also cleans up static analysis warnings          addresses-coverity: (""sizeof not portable"")",1,0,1
136,136,1825,    drm/armada: replace drm_framebuffer_reference/unreference() with _get/put()          this patch replace instances of drm_framebuffer_reference/unreference with     *_get/put() suffixes  because get/put is shorter and consistent with the     kernel use of *_get/put suffixes.     this was done with the following coccinelle script:          @r1@     expression e;     @@          (,0,0,1
137,137,1290,    [tf.data] refactoring of performance modeling implementation and adding performance modeling for all core and experimental tf.data kernels.          piperorigin-revid: 219406929 ,0,1,1
138,138,276,    nfc: nci: fix nci_core_conn_create to allowing empty destination          nci_core_conn_create may not have any destination type parameter.          signed-off-by: christophe ricard <christophe-h.ricard@st.com>     signed-off-by: samuel ortiz <sameo@linux.intel.com> ,1,0,0
139,139,1484,    drm/i915/guc: move guc boot param initialization out of xfer          we want to keep ucode xfer functions separate from other     initialization. once separated  add explicit forcewake.          v2: use blitter domain only and add comment (daniele)          suggested-by: joonas lahtinen <joonas.lahtinen@linux.intel.com>     signed-off-by: michal wajdeczko <michal.wajdeczko@int,0,1,1
140,140,1496,    tg3: remove unused cfgspc device members          this patch removes the pci_bist and pci_hdr_type members from the     device structure and removes the code that references them.  they are     not really used.          the patch rounds out the changes by moving the pci_cmd member to plug     a structure hole that would have been created.  on 32-bit systems  this     movement r,0,0,1
141,141,1163,    remove use of deprecated scala features #22581 ,0,0,1
142,142,1517,    fix issue preventing refactoring ordering. ,1,0,0
143,143,1486,    added unix-like piping. allows chaining of function calls where every succeeding call receives as first argument the result of all preceding expressions. ,0,1,0
144,144,1673,"    include multiple versions in clientset     update client-gen to use the term ""internalversion"" rather than ""unversioned"";     leave internal one unqualified;     cleanup client-gen ",0,0,1
145,145,1931,    add frozen_string_literal to spec/features          using the sed script from     https://gitlab.com/gitlab-org/gitlab-ce/issues/59758 ,0,1,0
146,146,1762,    improvements to candle shadow color choice ,0,0,1
147,147,860,    make type checker debug output redirectable          introduce a replaceable typecheckerdebugconsumer for this.               swift svn r9555 ,0,1,0
148,148,0,"    netfilter: xt_log: fix mark logging for ipv6 packets          in dump_ipv6_packet()  the ""recurse"" parameter is zero only if     dumping contents of a packet embedded into an icmpv6 error     message. therefore we want to log packet mark if recurse is     non-zero  not when it is zero.          signed-off-by: michal kubecek <mkubecek@suse.cz>     signed-off-by: pablo neira ayus",1,0,0
149,149,846,    v4l/dvb (6200): cx23885: use a pointer to the required i2c bus in dvb_register function          store a pointer to the required i2c_bus so that we do not put the wrong     analog demod into standby.          signed-off-by: michael krufky <mkrufky@linuxtv.org>     signed-off-by: steven toth <stoth@hauppauge.com>     signed-off-by: mauro carvalho chehab <mchehab@infradead.org> ,1,0,0
150,150,973,    spi/fsl: unnecessary double init_completion removed          the double call to init_completion(&mpc8xxx_spi->done); is not needed     presumably this is a editing mistake only.          signed-off-by: nicholas mc guire <der.herr@hofr.at>     signed-off-by: mark brown <broonie@kernel.org> ,0,0,1
151,151,1826,     use rollover for slm's history indices (#45686)          following our own guidelines  slm should use rollover instead of purely     time-based indices to keep shard counts low. this commit implements lazy     index creation for slm's history indices  indexing via an alias  and     rollover in the built-in ilm policy. ,0,1,1
152,152,1275,    add support for manually defined deepcopy methods          in bringing back clayton's pr piece-by-piece this was almost as easy to     implement as his version  and is much more like what i think we should be     doing.          specifically  any time which defines a .deepcopy() method will have that method     called preferentially.  otherwise we generate our own functions for,0,1,0
153,153,1026,    api uses protectedbranchpolicy for destroy/create ,0,0,1
154,154,1661,    arm: at91: remove at91rm9200 legacy boards files          remove old board files that use at91rm9200 atmel soc. the     device tree is mature on this socs. it must be used now.          signed-off-by: nicolas ferre <nicolas.ferre@atmel.com>     acked-by: boris brezillon <boris.brezillon@free-electrons.com> ,0,0,1
155,155,732,    wireless: fix kernel-doc warning in net/cfg80211.h          fix kernel-doc warning in net/cfg80211.h:            warning(include/net/cfg80211.h:1884): no description found for parameter 'registered'          signed-off-by: randy dunlap <rdunlap@xenotime.net>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,1,0,0
156,156,493,    rt2x00: introduce soc interface type.          introduce the soc interface type to detect soc devices  instead of having     them mimic being pci devices.     this allows for easier detection of soc devices.          signed-off-by: gertjan van wingerde <gwingerde@gmail.com>     acked-by: ivo van doorn <ivdoorn@gmail.com>     signed-off-by: john w. linville <linville@tuxdriver.c,0,1,0
157,157,477,    fix type errors          close #9988 ,1,0,0
158,158,1378,"    fix collapse.js aria-expanded behavior          * remove aria-expanded from collapse.js target element          aria-expanded=""true""/aria-expanded=""false"" only applies to the trigger      not the element that is being expanded/collapsed.          * tweak collapse.js accessibility section          ...to make it clearer that the aria-expanded attribute always just goes     on the",1,0,1
159,159,785,    builder: lint fixes          signed-off-by: tonis tiigi <tonistiigi@gmail.com> ,1,0,0
160,160,579,    added cookie option to session configuration. ,0,1,0
161,161,949,    add support for more es6 features ,0,1,0
162,162,1377,    tests(integration) speed up integration tests          speed up integration tests by avoiding unnecessary truncations. ,0,0,1
163,163,1503,    decrease the number of external headers pulled in and refactor allocator and reader/writer. ,0,0,1
164,164,1704,    test: fix tests that check error messages          20285ad17755187ece16b8a5effeaa87f5407da2 changed the format     of error messages throughout lib. however  the tests were not     updated to reflect these changes. this commit makes those     changes.          pr-url: https://github.com/nodejs/node/pull/3727     reviewed-by: roman reiss <me@silverwind.io>     reviewed-by: johan,1,0,0
165,165,1624,    build: fix file paths after moving modules/@angular/* to packages/* ,1,1,0
166,166,643,    nommu: optimise away the {dac_ }mmap_min_addr tests          in nommu mode clamp dac_mmap_min_addr to zero to cause the tests on it to be     skipped by the compiler.  we do this as the minimum mmap address doesn't make     any sense in nommu mode.          mmap_min_addr and round_hint_to_min() can be discarded entirely in nommu mode.          signed-off-by: david howells <dhow,0,0,1
167,167,1989,    bah  fix another bug. need tests  stat! ,1,0,0
168,168,913,    tidy up license headers [1/n]          summary: changelog: [general] [fixed] - license header cleanup          reviewed by: yungsters          differential revision: d17952695          fbshipit-source-id: 81aa607612ba1357ef7814ef20371335151afe7e ,1,0,1
169,169,521,    cmd/go: handle paths like \x.go on windows          fixes #8130.          lgtm=rsc     r=golang-codereviews  rsc     cc=golang-codereviews     https://golang.org/cl/143200043 ,1,0,0
170,170,261,    net/mlx5: introduce offloads steering namespace          add a new namespace (mlx5_flow_namespace_offloads) to be populated     with flow steering rules that deal with rules that have have to     be executed before the en nic steering rules are matched.          the namespace is located after the bypass name-space and before the     kernel name-space. therefore  it precedes the,0,1,0
171,171,1388,    all commands must declare unstructured or internal          callers must take a dependency on one or the other set of conversions     and default client behavior. future changes may add a versioned() type      but this is an accurate reflection of current code state. ,0,0,1
172,172,1277,    sh: introduce struct clk_div4_table          this patch introduces struct clk_div4_table. the structure     will be used to keep div4 specific data  and is with this     patch replacing the struct clk_div_mult_table pointer arg     used by the sh_clk_div4_register() functions.          signed-off-by: magnus damm <damm@opensource.se>     signed-off-by: paul mundt <lethal@linux-s,0,1,0
173,173,1263,    events: simplify removealllisteners logic          unnecessary checks were being performed on if the event existed before     being removed.          _events starts out as null  so reset to null when emptied.          checking typeof is a lot cheaper than isarray(). ,0,0,1
174,174,306,    perf scripting: shut up 'perf record' final status          we want just the script output  not internal details about the record phase.          cc: frederic weisbecker <fweisbec@gmail.com>     cc: ingo molnar <mingo@elte.hu>     cc: mike galbraith <efault@gmx.de>     cc: paul mackerras <paulus@samba.org>     cc: peter zijlstra <peterz@infradead.org>     cc: stephane eranian <,0,0,1
175,175,986,    clk: renesas: r8a77965: add sata clock          this patch adds sata clock to the r8a77965 soc.          signed-off-by: takeshi kihara <takeshi.kihara.df@renesas.com>     [wsa: rebased to upstream base]     signed-off-by: wolfram sang <wsa+renesas@sang-engineering.com>     reviewed-by: simon horman <horms+renesas@verge.net.au>     signed-off-by: geert uytterhoeven <geert+renesa,0,1,0
176,176,66,    staging: speakup - syle fix permissions to octal          a style fix across whole driver.     changed permissions to octal style  found using checkpatch          signed-off-by: derek robson <robsonde@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
177,177,911,"    [patch] bcm43xx: code cleanups. this removes various ""inline"" statements and reduces codesize.          signed-off-by: michael buesch <mbuesch@freenet.de>     signed-off-by: john w. linville <linville@tuxdriver.com> ",0,0,1
178,178,340,    bugfix: correct after_fork semantics          after fork sitesettings was not getting a new process id      causing site settings not to refresh properly in unicorn          this code also centralizes the logic ,1,0,0
179,179,497,    auth: azure ad oauth (#20030)          * implement azure ad oauth          * use go-jose and cleanup          * update go-jose in go.mod          * cleanup          * add unit tests          * fix scopes          * add documentation page          * improve documentation          * convert extract_role into function.          * do not use upn and replace unique_name with preferr,1,1,0
180,180,1795,    make thccachinghostallocator less aggressive.          in cases where copyasync is a large percentage of the work      processing events in recordevent can cause a large bottleneck.          here  we relax the constraint that we reclaim blocks as fast as possible     (i.e. in copyaync); instead  we only check that a block can be re-allocated     in malloc and free. ,0,0,1
181,181,31,    [test] add warnings check to estestcase          we are currenlty checking that no deprecation warnings are emitted in our query tests. that can be moved to estestcase (disabled in esintegtestcase) as it allows us to easily catch where our tests use deprecated features and assert on the expected warnings. ,0,1,1
182,182,139,    introduce new xunit performance tests ,0,1,0
183,183,1644,    alsa: hda - reorganize fixup structure for realtek          instead of keeping various data types in a single record  put the     type field and keep a single value in each entry  but allows chaining     multiple fixup entries.  this allows more flexible data management     (see alc275_fixup_sony_hweq for example).          signed-off-by: takashi iwai <tiwai@suse.de> ,0,0,1
184,184,1734,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/security/tree/930ed239e41d7547edf06f31efa3461d1a2c6bad ,0,0,1
185,185,399,    improve settings and keybindings smoke tests ,0,0,1
186,186,297,    fix(es2018): add a target and an initial lib (#20385)          * run jake lkg before es2018 addition          fixes #20342          * fix(es2018): add a target and an initial lib          fixes #20342 ,1,0,0
187,187,1925,    fix a bunch of spelling errors across the project (#4295)          generated by https://github.com/jsoref/spelling `f`; to maintain your repo  please consider `fchurn`          i generally try to ignore upstream bits. i've accidentally included some items from the `deps/` directory. i expect someone will give me a list of items to drop  i'm happy to drop whole files/directories,1,0,0
188,188,396,    this implementation lazily (on 1st forecast request) checks for available     diskspace and creates a subfolder for storing data outside of lucene     indexes  but as part of the es data paths.          details:      - tmp storage is managed and does not allow allocation if disk space is        below a threshold (5gb at the moment)      - tmp storage is supposed to be managed b,0,0,1
189,189,1068,    ring-buffer: have benchmark test print to trace buffer          currently the output of the ring buffer benchmark/test prints to     the console. this test runs for ten seconds every ten seconds and     ouputs the result after every iteration. this needlessly fills up     the logs.          this patch makes the ring buffer benchmark/test print to the ftrace     buffer using tra,1,0,0
190,190,2031,    add fixawaitinsyncfunction code fix (#21069)          * add fixawaitinsyncfunction code fix          * just insert the keyword          * only one codefix          * remove comment          * change explicit return type t to promise<t>          * review changes          * change codefix message ,1,0,1
191,191,1395,    mm  fs: remove remaining page_cache_* and page_cache_{get release} usage          mostly direct substitution with occasional adjustment or removing     outdated comments.          signed-off-by: kirill a. shutemov <kirill.shutemov@linux.intel.com>     acked-by: michal hocko <mhocko@suse.com>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,0,0,1
192,192,1306,    sched/fair: spread out tasks evenly when not overloaded          when there is only one cpu per group  using the idle cpus to evenly spread     tasks doesn't make sense and nr_running is a better metrics.          signed-off-by: vincent guittot <vincent.guittot@linaro.org>     cc: ben segall <bsegall@google.com>     cc: dietmar eggemann <dietmar.eggemann@arm.com>     cc: juri l,0,0,1
193,193,1758,    add createdat filed to volume. display when volume is inspected.          closes #32663 by adding createdat field when volume is created.     displaying createdat value when volume is inspected     adding tests to verfiy the new field is correctly populated          signed-off-by: marianna <mtesselh@gmail.com>          moving createdat tests from the cli          moving the tes,0,1,0
194,194,492,"    [spark-20156][core][sql][streaming][mllib] java string tolowercase ""turkish locale bug"" causes spark problems          ## what changes were proposed in this pull request?          add locale.root to internal calls to string `tolowercase`  `touppercase`  to avoid inadvertent locale-sensitive variation in behavior (aka the ""turkish locale problem"").          the change looks larg",1,1,0
195,195,1563,    pack-objects: move in_pack_pos out of struct object_entry          this field is only need for pack-bitmap  which is an optional     feature. move it to a separate array that is only allocated when     pack-bitmap is used (like objects[]  it is not freed  since we need it     until the end of the process)          signed-off-by: nguyá»n thÃ¡i ngá»c duy <pclouds@gmail.com>     sign,0,0,1
196,196,323,    removed unused #include <linux/version.h>'s          this patch lets the files using linux/version.h match the files that     #include it.          signed-off-by: adrian bunk <bunk@kernel.org>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,1,0,1
197,197,1192,    media: staging: atomisp: remove driver          the atomisp driver has a long list of todo items and little has been done     to address these lately while more has been added. the driver is also not     functional. in other words  the driver would not be getting out of staging     in the foreseeable future. at the same time it consumes developer     resources in order to maint,0,0,1
198,198,1542,    perf  x86: add a key to simplify template lookup in pentium-4 pmu          currently  we use opcode(event and event-selector) + emask to     look up template in p4_templates.          but cache events (l1-dcache-load-misses  llc-load-misses  etc)     use the same event(p4_replay_event) to do the counting  ie  they     have the same opcode and emask. so we can not use current lo,0,1,1
199,199,1015,    crypto: inside-secure - fix the invalidation step during cra_exit          when exiting a transformation  the cra_exit() helper is called in each     driver providing one. the inside secure safexcel driver has one  which     is responsible of freeing some areas and of sending one invalidation     request to the crypto engine  to invalidate the context that was used     during t,1,0,0
200,200,1867,    brcmfmac: support save&restore firmware feature          save & restore is an advanced power saving feature      supported only on selected devices.     sr operation is almost completely transparent to the driver.     support for it is hardware and firmware dependent.          reviewed-by: hante meuleman <meuleman@broadcom.com>     reviewed-by: arend van spriel <arend@broadcom.,0,1,1
201,201,1205,    add missing header files ,0,1,0
202,202,763,    update shape function for broadcastto  and add a unit test for it.          piperorigin-revid: 233772267 ,0,1,0
203,203,1135,    made {@inheritdoc} annotations consistent across the board ,0,0,1
204,204,1607,    add a bitwise module with bitwise_and  bitwise_or  bitwise_xor  and invert functions.          piperorigin-revid: 159264147 ,0,1,0
205,205,361,    fixed #12991 -- added unittest2 support. thanks to paulm for the draft patch  and to luke  karen  justin  alex  Åukasz rekucki  and chuck harmston for their help testing and reviewing the final patch.          git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37 ,1,1,0
206,206,1995,    implemented suggested fixes ,1,0,0
207,207,1475,    fixed #19686 -- added html5 number input type          thanks simon charette for his help on the patch. refs #16630. ,1,0,0
208,208,1631,    alsa: module_param: make bool parameters really bool          module_param(bool) used to counter-intuitively take an int.  in     fddd5201 (mid-2009) we allowed bool or int/unsigned int using a messy     trick.          it's time to remove the int/unsigned int option.  for this version     it'll simply give a warning  but it'll break next kernel version.          signed-off-by:,0,1,0
209,209,1322,    hot fix ,1,0,0
210,210,982,    udf: use get_bh()          make udf use get_bh() instead of directly accessing b_count and use     brelse() instead of udf_release_data() which does just brelse()...          signed-off-by: jan kara <jack@suse.cz>     acked-by: christoph hellwig <hch@infradead.org>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torvalds <torvalds@linux-fou,0,0,1
211,211,1467,    collapse o.e.index.mapper packages. #19921          i also reduced the visibility of a couple classes and renamed/consolidated some     test classes for consistency  eg. removing the `simple` prefix or using the     `<type>fieldmappertests` convention for testing field mappers. ,0,0,1
212,212,1978,    drm/amd/display: fix memory leak in post_update_surfaces          signed-off-by: harry wentland <harry.wentland@amd.com>     acked-by: harry wentland <harry.wentland@amd.com>     reviewed-by: tony cheng <tony.cheng@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,0,0
213,213,544,    added the cli component ,0,1,0
214,214,193,    fixed bug #67399 (putenv with empty variable may lead to crash) ,1,0,0
215,215,942,    removed old scalac code in sources and various ...          removed old scalac code in sources and various other obsolete elements. ,0,0,1
216,216,779,    cleanup of gemm_thunk file.          remove redundant second non-threadsafe cache  clean up the interface.     fixes a few bugs:           - stream->allocatetemporaryarray mallocs a region on a gpu which only        gets released when stream->blockhostuntildone() is called.        instead manually allocates a scratch region and deallocates it        once it is no longer require,1,0,1
217,217,62,    fix spec ,1,0,0
218,218,1628,    git-notes: fix printing of multi-line notes          the line length was read from the same position every time      causing mangled output when printing notes with multiple lines.          also  adding new-line manually for each line ensures that we     get a new-line between commits  matching git-log for commits     without notes.          signed-off-by: tor arne vestbÃ¸ <tave,1,0,0
219,219,1147,    replace negotiation with a new method that can extract info          alter how runtime.serializeinfo is represented to simplify negotiation     and reduce the need to allocate during negotiation. simplify the dynamic     client's logic around negotiating type. add more tests for media type     handling where necessary. ,0,1,1
220,220,1765,    fuse: improve aio directio write performance for size extending writes          while sending the blocking directio in fuse  the write request is broken     into sub-requests  each of default size 128k and all the requests are sent     in non-blocking background mode if async_dio mode is supported by libfuse.     the process which issue the write wait for the completion of all ,0,0,1
221,221,701,    add missing newline at eof in *.cs ,1,0,0
222,222,782,    added missing phpinfo entry (russian support) ,1,0,0
223,223,765,    continuing to refactor ,0,0,1
224,224,42,    drm/radeon: add dpm uvd handling for tn asics (v2)          v2: fix typo noticed by dan carpenter          signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,1,0
225,225,754,    feature: generic theme component bbcode wrapper (#7400)          usage:          ```     [wrap=name foo=bar]     hello world     [/wrap]     ``` ,0,1,0
226,226,1357,    refactor actionmailer to not use hide_actions ,0,0,1
227,227,1804,    use data folder for win32 and linux portable mode          fixes #53108 ,1,0,0
228,228,519,    beginning of rewrite apply merge-logic using visitor pattern.          major changes:     - don't generate a patch  instead generate the merged object so it can be used with put     - separate tree parsing logic to collate items in a list from the delete / merge / replace / add logic when merging     - use openapi for merge strategy metadata so it works with extensions and vers,0,0,1
229,229,1660,    clean up no-unused-vars lint errors ,0,0,1
230,230,851,    add xcontent shuffling to some more tests          this adds some random shuffling of xcontent to some more test cases.          relates to #5831 ,0,1,0
231,231,210,"    move implementations into impls/ dir          - reorder readme to have implementation list after ""learning tool""       bullet.          - this also moves tests/ and libs/ into impls. it would be preferrable       to have these directories at the top level.  however  this causes       difficulties with the wasm implementations which need pre-open       directories and have troub",0,0,1
232,232,775,    import the swift-compiler-crashes test suite.          add all compiler crash tests to the validation-test/compiler_crashers     subdirectory. add a run: line to each test case according to the current     behavior of the swift compiler.          swift svn r23418 ,0,1,0
233,233,1554,"    writeback: fix break condition          commit dcf6a79dda5cc2a2bec183e50d829030c0972aaa (""write-back: fix     nr_to_write counter"") fixed nr_to_write counter  but didn't set the break     condition properly.          if nr_to_write == 0 after being decremented it will loop one more time     before setting done = 1 and breaking the loop.          [akpm@linux-foundation.org: codi",1,0,0
234,234,1114,"    migrate tensorflow lite out of tensorflow/contrib          this change moves //tensorflow/contrib/lite to //tensorflow/lite in preparation     for tensorflow 2.0's deprecation of contrib/. if you refer to tf lite build     targets or headers  you will need to update them manually. if you use tf lite     from the tensorflow python package  ""tf.contrib.lite"" now points to ""tf.lit",0,0,1
235,235,1928,    add support for per-channel quantization for hybrid conv weights with asymmetric inputs          piperorigin-revid: 274834032     change-id: ice0b04ac42bfe5ef858f47b04a3502f60f06e464 ,0,1,0
236,236,589,    net: dsa: mv88e6xxx: move vtu operation accessors          move the helper functions to access the global 1 vtu operation register     to a new global1_vtu.c file  and get rid of the old underscore prefix     naming convention. this file will be extended will all vtu/stu related     code.          signed-off-by: vivien didelot <vivien.didelot@savoirfairelinux.com>     reviewed-,0,0,1
237,237,1279,    fix folding ,1,0,0
238,238,1307,    pci/aer: add additional pcie aer error strings          add strings for all aer error bits defined in pcie r3.0.          [bhelgaas: changelog  drop designated initializer change]     signed-off-by: chen  gong <gong.chen@linux.intel.com>     signed-off-by: bjorn helgaas <bhelgaas@google.com> ,0,1,0
239,239,368,    change the top_hits to be a metric aggregation instead of a bucket aggregation (which can't have an sub aggs)          closes #6395     closes #6434 ,0,0,1
240,240,892,    drm/amd/display: refine disable vga          bad case won't follow normal sense  it will not enable vga1 as usual  but vga2 3 4 is on.          signed-off-by: clark zheng <clark.zheng@amd.com>     reviewed-by: tony cheng <tony.cheng@amd.com>     acked-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,0,1
241,241,1836,    [pep8] fix most remaining lint manually ,1,0,0
242,242,1407,    added a way to set logging information synced to remote host and more logging for error list. (#23614) ,0,1,0
243,243,502,    move application configuration to the application configuration object  remove railtie_name and engine_name and allow to set the configuration object. ,0,0,1
244,244,802,    first pass (not yet compiling) at removing all the array handling code from coded*stream.          prod code works  but some tests are broken. obviously those need fixing  then more tests      and review benchmarks. ,1,0,0
245,245,1690,    fix dirty tracking after rollback.          currently the rollback only restores primary key value  `new_record?`      `destroyed?`  and `frozen?`. since the `save` clears current dirty     attribute states  retrying save after rollback will causes no change     saved if partial writes is enabled (by default).          this makes `remember_transaction_record_state` remembers or,1,0,0
246,246,7,    partial rn sync          summary:     this cherry-picks one commit: https://github.com/facebook/react/commit/01fb68b9bf680ab8bbf96e86501e0fc540b3cc97          it fixes a bug in fast refresh.          reviewed by: threepointone          differential revision: d17140543          fbshipit-source-id: a7654152d1cc7c27e7c4024380349b44ac496b22 ,1,0,0
247,247,1264,    remove dead code related to error constants ,0,0,1
248,248,629,    fix typos in compiler and reflect          miscellania:            miscellania is a small island off the northernmost part       of the fremennik isles - runscape wiki               miscellanea:            a collection of miscellaneous objects or writings - merriam-webster ,1,0,0
249,249,904,    use the afero source fs where relevant          fixes #2319 ,1,0,0
250,250,57,    drm/i915: fix up semaphore_waits_for          there's an entire pile of issues in here:          - use the main ring_head register  not acthd. acthd points at the gtt       offset of the batch buffer when a batch is executed. semaphores are       always emitted to the main ring  so we always want to look at that.          - mask the obtained head pointer with the actual ring si,1,0,0
251,251,836,    use fbgemm's 3d group conv fast path (#29085)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/29085          pull request resolved: https://github.com/pytorch/fbgemm/pull/159          change dnnlowp operators to use fbgemm's new 3d groupwise convolution (d18192339)          this diff also fixes an issue when column offsets are fused into bia,1,0,0
252,252,1895,    refactor(core): allow developers to select static-query migration strategy (#29876)          currently there are two available migration strategies for the `static-query`     schematic. both have benefits and negatives which depend on what the     developer prefers. since we can't decide which migration strategy is the     best for a given project  the developer should be able ,0,0,1
253,253,2023,    fix cv::marker_triangle_up ,1,0,0
254,254,2016,    net: relax ip interface address determination on linux          linux allows to have a peer ip address on ip interface over ethernet     link encapsulation  though it only installs a static route with the peer     address as an on-link nexthop.          fixes #11338.          change-id: ie2583737e4c7cec39baabb89dd732463d3f10a61     reviewed-on: https://go-review.googlesource.co,1,0,0
255,255,553,    correct stylecop violations     - stylecop working again (handles c# 6.0 additions) though only locally for me     - disable some new rules:      - constfieldnamesmustbeginwithuppercaseletter      - instancereadonlyelementsmustappearbeforeinstancenonreadonlyelements      - staticreadonlyelementsmustappearbeforestaticnonreadonlyelements      - staticreadonlyfieldsmustbeginwithup,1,0,0
256,256,946,    [spark-15728][sql] rename aggregate operators: hashaggregate and sortaggregate          ## what changes were proposed in this pull request?     we currently have two physical aggregate operators: tungstenaggregate and sortbasedaggregate. these names don't make a lot of sense from an end-user point of view. this patch renames them hashaggregate and sortaggregate.          ## how,0,0,1
257,257,335,    replace primarypostallocated flag and use unassignedinfo     there is no need to maintain additional state as to if a primary was allocated post api creation on the index routing table  we hold all this information already in the unassignedinfo class.     closes #12374 ,0,0,1
258,258,1064,    bpf  sockmap: fix sock_hash_alloc and reject zero-sized keys          currently  it is possible to create a sock hash map with key size     of 0 and have the kernel return a fd back to user space. this is     invalid for hash maps (and kernel also hasn't been tested for zero     key size support in general at this point). thus  reject such     configuration.          fixes: 811,1,0,0
259,259,1926,    fix more deprecations:          - remove all `needs:` code ,1,0,0
260,260,584,"    fix: children of tabs[type=""editable-card""] cannot be falsy (#17965)          * tabs-editable-card-bugfix          if tabs type =""editable-card"" if children has falsy value  we will get error message so we should fix it in tabs.          error:https://codesandbox.io/s/lively-glade-jmg5s          * editable-card bugfix          * tabs bugfix          * tabs-editable-card bugfix ",1,0,0
261,261,1108,    [string] a new component for object-oriented strings management with an abstract unit system ,0,1,0
262,262,995,    mac80211: add ieee80211_iterate_active_interfaces_rtnl()          if it is needed to disconnect multiple virtual interfaces after     (wowlan-) suspend  the most obvious approach would be to iterate     all interfaces by calling ieee80211_iterate_active_interfaces()     and then call ieee80211_resume_disconnect() for each one. this     is what the iwlmvm driver does.          u,0,1,0
263,263,581,    small fixes in code generation for interface ca...          small fixes in code generation for interface calls. ,1,0,0
264,264,932,    net: mark read-only arrays as const          string literals are constant  and usually  we can also tag the array     of pointers const too  moving it to the .rodata section.          signed-off-by: jan engelhardt <jengelh@medozas.de>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
265,265,590,    target: use a passthrough flag instead of transport_types          it seems like we only care if a transport is passthrough or not. convert     transport_type to a flags field and replace transport_plugin_* with a     flag  transport_flag_passthrough.          signed-off-by: andy grover <agrover@redhat.com>     reviewed-by: ilias tsitsimpis <iliastsi@arrikto.com>     signed-off,1,0,0
266,266,1649,"    test: remove rundircmpout and cmpout actions          this cl removes the rundircmpout action completely     because it is not used anywhere.          the run case already looks for output files. rename the cmpout action     mentioned in tests to the run action and remove ""cmpout"" from run.go.          change-id: i835ceb70082927f8e9360e0ea0ba74f296363ab3     reviewed-on: https:",0,0,1
267,267,1098,    add the functions to make rangedataset and filterdataset ,1,0,0
268,268,458,    alsa: hda - remove superfluous inclusion of linux/pci.h          some codec drivers still have it since using pci_vendor_id_*.          signed-off-by: takashi iwai <tiwai@suse.de> ,0,0,1
269,269,523,"    rt2x00: fix a wrong parameter for __test_and_clear_bit() in rt2x00rfkill_free().          when running modprobe rt73usb  and then rmmod rt73usb  and then     iwconfig  the wlan0 device does not disappear. when repeating this     process again  we get a kernel oops errors and ""bug: unable to handle     kernel paging request..."" message in the kernel log.          the reason for ",1,0,0
270,270,1037,    enable frozen string in apps/services/**/*.rb          for directories application_settings --> labels.          partially addresses #47424. ,0,0,1
271,271,1961,    2.x: add most relevant ~100 operators' reactive-streams tck tests (#4538) ,0,1,0
272,272,1577,    net: don't error when marshalling nil ip addresses          see https://code.google.com/p/go/issues/detail?id=6339#c3          fixes #6339          r=golang-dev  rsc     cc=golang-dev     https://golang.org/cl/13553044 ,1,0,0
273,273,1292,    gettokenatposition: default includejsdoccomment to true (#25015)          * gettokenatposition: default includejsdoccomment to true          * update api (#24966)          * flip meaning of parameter          * update api (#24966)          * remove all `ignorejsdoccomment` uses (fixes #25162) ,1,0,0
274,274,1385,    net/mlx5_core: flow counters infrastructure          if a counter has the aging flag set when created  it is added to a list     of counters that will be queried periodically from a workqueue.  query     result and last use timestamp are cached.     add/del counter must be very efficient since thousands of such     operations might be issued in a second.     there is only a sin,0,1,1
275,275,1913,    fix #29737 in the right way with performance in mind ,1,0,0
276,276,1919,        simplify the emission of various diagnostics emitted by the different dialects (affine/standard/etc.) by using the new stream interface instead of twine.          --          piperorigin-revid: 246842016 ,0,0,1
277,277,89,    use [[noreturn]] instead of c10_noreturn or caffe_noreturn (#30917)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/30917          this is a c++14 feature  we can use this now.     ghstack-source-id: 95255753          test plan: waitforsandcastle          differential revision: d18869637          fbshipit-source-id: dd02036b9faeaffa64b2d2d30,1,0,0
278,278,2036,    add 'renamefile' command to services (#23573)          * add 'renamefile' command to services          * renamefile -> geteditsforfilerename          * support `<reference path>` directives ,0,1,0
279,279,824,    drm/amdgpu: split the vm entity into direct and delayed          for page fault handling we need to use a direct update which can't be     blocked by ongoing user cs.          signed-off-by: christian kÃ¶nig <christian.koenig@amd.com>     reviewed-by: felix kuehling <felix.kuehling@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,0,0
280,280,488,    [scsi] qla2xxx: added aer support for isp82xx.          signed-off-by: giridhar malavali <giridhar.malavali@qlogic.com>     signed-off-by: james bottomley <james.bottomley@suse.de> ,0,1,0
281,281,2019,    hwmon: fix unchecked return status  smsc chips          hwmon: fix unchecked return status  smsc chips          fix up 2 more hwmon drivers so that they no longer ignore return     status from device_create_file().          signed-off-by: jean delvare <khali@linux-fr.org>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,1,0,0
282,282,134,    iw_cxgb4: reverse the ord/ird in the established upcall          the established event should have the peer's ord/ird so     swap the values in the event before the upcall.          signed-off-by: hariprasad shenai <hariprasad@chelsio.com>     signed-off-by: doug ledford <dledford@redhat.com> ,0,0,1
283,283,282,    refactor printer arguments          fixes #21260 ,1,0,1
284,284,1299,    got repeatables working flawlessly and improved the achievement popup by a great deal ,0,0,1
285,285,2034,    tty: ircomm  add tty_port          and use close/open_wait from there.          signed-off-by: jiri slaby <jslaby@suse.cz>     cc: samuel ortiz <samuel@sortiz.org>     cc: netdev@vger.kernel.org     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,1,0
286,286,1820,    more randomly failing specs fixes. ,1,0,0
287,287,45,    node: improve getactivehandles performance          improve performance of process._getactivehandles by sending handles in     batches to js to be set on the passed array. add test to check proper     active handles are returned.          alter implementation of getactiverequests to match getactivehandles'     implementation.          pr-url: https://github.com/nodejs/node/pull,0,0,1
288,288,1497,    gpio/of: fix a typo of comment message          signed-off-by: dong aisheng <dong.aisheng@linaro.org>     signed-off-by: grant likely <grant.likely@secretlab.ca> ,0,0,1
289,289,1448,    sync up with elasticsearch-parent changes:     * removes lots of duplicate pom logic     * removes duplicate forbidden api logic     * fixes new forbidden api violations          original commit: elastic/x-pack-elasticsearch@1fc5c6f79e2dfe9ddff07e8f0614772e8b9be732 ,1,0,1
290,290,1479,    use yarn to manage dependencies  cleanup unused bootstrap libs (#6436) ,0,0,1
291,291,1949,    nfsd: encode stat->mtime for getattr instead of inode->i_mtime          the values of stat->mtime and inode->i_mtime may differ for overlayfs     and stat->mtime is the correct value to use when encoding getattr.     this is also consistent with the fact that other attr times are also     encoded from stat values.          both callers of lease_get_mtime() already have the valu,0,0,1
292,292,496,    add pylint check for w0611 unused-import in ci_sanity.sh and fix existing pylint errors.          piperorigin-revid: 184790548 ,1,0,0
293,293,1374,    fix(ivy): only restore registered modules if user compiles modules with testbed (#32944)          there are a couple scenarios that are problematic and need special     handling:          1. a user has a custom implementation of lazy-loaded modules  sets some     provider overrides  then compiles the module so it can be loaded. in a     follow-up test  the user sets different o,1,0,0
294,294,1379,    more apis on the index level store to help clean unused work shards when needed ,0,1,1
295,295,212,    use createelement instead of html generation          behind a feature flag. this is a relatively simple change; adopting this strategy universally would mean that we could clean up a lot of code but this doesn't attempt to restructure more than necessary. ,0,0,1
296,296,1403,    modified tests to use better phpunit methods ,0,0,1
297,297,2009,"    ide: remove unused code          remove some code which has been made obsolete and hasn't worked properly     before anyway.  part of the infrastructure may be reintroduced in a     follow up patch to implement a working command aborting facility.          signed-off-by: elias oltmanns <eo@nebensachen.de>     cc: ""alan cox"" <alan@lxorguk.ukuu.org.uk>     cc: ""randy dunlap"" <ran",0,0,1
298,298,474,    drivers: hv: vmbus: use get_cpu() to get the current cpu          replace calls for smp_processor_id() to get_cpu() to get the cpu id of     the current cpu. in these instances  there is no correctness issue with     regards to preemption  we just need the current cpu id.          signed-off-by: k. y. srinivasan <kys@microsoft.com>     signed-off-by: greg kroah-hartman <gregkh@,0,0,1
299,299,1150,    [media] dvb: don't pass a dvbv3 parameter for search() fops          just like the other dvb algorithms  drivers should use the dvbv5     way to retrieve parameters: via the cache struct.          actually  several drivers were partially using the dvbv3 struct     and partially using the dvbv5 way  with is confusing and may     lead into troubles.          signed-off-by: mauro ,0,0,1
300,300,1686,    fix checkstyle ternary issues          fix checkstyle issues with ternary expressions following the     spring-javaformat upgrade.          see gh-13932 ,1,0,0
301,301,1630,    [patch] mm: introduce remap_vmalloc_range()          add remap_vmalloc_range  vmalloc_user  and vmalloc_32_user so that drivers     can have a nice interface for remapping vmalloc memory.          signed-off-by: nick piggin <npiggin@suse.de>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ,0,1,0
302,302,839,    deps: downgrade v8 to 3.14.5          v8 3.15 and newer have stability and performance issues. roll back to     a known-good version. ,0,0,1
303,303,294,    update some of the functions in ocl module to the latest version ,0,0,1
304,304,164,    [spark-22487][sql][hive] remove the unused hive_execution_version property          ## what changes were proposed in this pull request?          at the beginning https://github.com/apache/spark/pull/2843 added `spark.sql.hive.version` to reveal underlying hive version for jdbc connections. for some time afterwards  it was used as a version identifier for the execution hive clie,0,0,1
305,305,1195,    inet: add rcu protection to inet->opt          we lack proper synchronization to manipulate inet->opt ip_options          problem is ip_make_skb() calls ip_setup_cork() and     ip_setup_cork() possibly makes a copy of ipc->opt (struct ip_options)      without any protection against another thread manipulating inet->opt.          another thread can change inet->opt pointer and f,0,1,0
306,306,141,    remove unused code from vendor ,0,0,1
307,307,1414,    replace actionbindingcontext with controllercontext          this change introduces controllercontext for inside of controllers  and     controller-specific extensibility points. controllercontext carries with     it the model binding infrastructure needed to do all of the things that     controllers need to do. ,0,1,0
308,308,1211,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/signalr/tree/d0bcdf3dd92afba858fca2871535faf4594c81de ,0,0,1
309,309,327,    add failing tests for coroutines          there are a few different issues:          * updates result in unnecessary duplicate placements because it can't find the current fiber for continuations.     * when run together  coroutine update and unmounting tests appear to lock down in an infinite loop. they don't freeze in isolation.          i don't have a solution for this but j,1,1,0
310,310,578,    removed unused demo screens ,0,0,1
311,311,997,    merged branch jfcixmedia/2.1 (pr #5838)          this pr was squashed before being merged into the master branch (closes #5838).          commits     -------          201f3e6 [form] fixed cannot unset string offsets in csrfvalidationlistener          discussion     ----------          [form] fixed cannot unset string offsets in csrfvalidationlistener          bug fix: yes     f,1,0,0
312,312,1683,    [net]: dont use strlen() but the result from a prior sprintf()          small patch to save an unecessary call to strlen() : sprintf() gave us     the length  just trust it.          signed-off-by: eric dumazet <dada1@cosmosbay.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
313,313,107,    add supported archive format for --mesos-sandbox-overlay ,0,1,0
314,314,649,    fix super/this capture for extends null ,1,0,0
315,315,61,    [mips] pmc msp71xx core platform          patch to add core platform support for the pmc-sierra msp71xx devices.          signed-off-by: marc st-jean <marc_st-jean@pmc-sierra.com>     signed-off-by: ralf baechle <ralf@linux-mips.org> ,0,1,0
316,316,175,    fix golint failures - /pkg/kubelet/images ,1,0,0
317,317,435,    added support for unsigned long long int values. ,0,1,0
318,318,1513,    hwmon: remove use of __devinit          config_hotplug is going away as an option so __devinit is no longer     needed.          signed-off-by: bill pemberton <wfp5p@virginia.edu>     cc: hans de goede <hdegoede@redhat.com>     cc: jean delvare <khali@linux-fr.org>     cc: alistair john strachan <alistair@devzero.co.uk>     cc: fenghua yu <fenghua.yu@intel.com>     cc: juerg ha,0,0,1
319,319,1975,    use the new cleanup api to avoid dead blocks for optional-related testing.               swift svn r27045 ,0,0,1
320,320,1349,    avoid exception when using sqldate (#7565)          * avoid exception when using sqldate          fix #7522.          * add form support for java.sql.timestamp ,1,1,0
321,321,1291,    apply the default operator on analyzed wildcard in query_string builder:      * tokens in the same position are grouped into a synonymquery..      * the default operator is applied on tokens in different positions.      * the wildcard is applied to the terms in the last position only.     fixes #2183 ,1,0,0
322,322,439,    sfc: save old mac address in case sriov_mac_address_changed fails          otherwise the pf and vf can disagree on the vf's mac address and     this leads to strange behaviour  up to and including kernel panics.          signed-off-by: shradha shah <sshah@solarflare.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
323,323,810,    changed variable name form ***time to ***duration to keep things consistent. ,0,0,1
324,324,582,    finagle-base-http: add samesite attribute to cookie          summary: problem          finagle's cookies do not support the samesite attribute.          solution          allow the attribute to be added via the cookie constructor.          differential revision: https://phabricator.twitter.biz/d157942 ,0,1,0
325,325,1833,    decouple xcontentbuilder from bytesreference (elastic/x-pack-elasticsearch#4119)          * decouple xcontentbuilder from bytesreference          this commit handles the removal of all mentions of bytesreference from     xcontentbuilder. this is needed so that we can completely decouple the xcontent     code and move it into its own dependency.          this is the x-pack side ,0,0,1
326,326,1477,    pkt-line: add packet_write_fmt_gently()          packet_write_fmt() would die in case of a write error even though for     some callers an error would be acceptable. add packet_write_fmt_gently()     which writes a formatted pkt-line like packet_write_fmt() but does not     die in case of an error. the function is used in a subsequent patch.          signed-off-by: lars schneid,1,1,0
327,327,1870,    update documentation and code to use _action callbacks ,0,1,0
328,328,750,    complete the style update to the rest of open\src directory               background:               as discussed in the dev team all hands all code under the github dotnet foundation is using a single process for contribution  api review  infrastructure and coding style. the idea is to present a unified view to our customer and give them a single story for contributing to any p,0,0,1
329,329,315,    pci: add pci_msix_table/pba defines          these are already defined in pcilib's pci/header.h but not in kernel's     linux/pci_regs.h.  copy them to avoid using magic numbers.          signed-off-by: hidetoshi seto <seto.hidetoshi@jp.fujitsu.com>     signed-off-by: jesse barnes <jbarnes@virtuousgeek.org> ,0,1,0
330,330,1710,    fix: extract links in post processor          when oneboxes are not cached or are refreshed they can introduce new     links  these links must be extracted otherwise you can not follow them ,1,0,0
331,331,359,    2.x: first step switching to the reduced-allocation architecture (#4030) ,0,0,1
332,332,1545,    [net] drivers/net: statistics cleanup #1 -- save memory and shrink code          we now have struct net_device_stats embedded in struct net_device      and the default ->get_stats() hook does the obvious thing for us.          run through drivers/net/* and remove the driver-local storage of     statistics  and driver-local ->get_stats() hook where applicable.          this was ,0,0,1
333,333,1857,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/signalr/tree/c852bdcc332ffb998ec6a5b226e35d5e74d24009 ,0,0,1
334,334,596,    tests: reorganize tests so that they actually use the target platform          most tests were using %swift or similar substitutions  which did not     include the target triple and sdk.  the driver was defaulting to the     host os.  thus  we could not run the tests when the standard library was     not built for os x.          swift svn r24504 ,1,0,1
335,335,1040,    windows: fix window size getter bug ,1,0,0
336,336,1294,    deprecated &f  .f  requires.          added existential types. ,0,1,0
337,337,585,    hexagon: add page-fault support.          signed-off-by: richard kuo <rkuo@codeaurora.org>     signed-off-by: linas vepstas <linas@codeaurora.org>     acked-by: arnd bergmann <arnd@arndb.de>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,0,1,0
338,338,1876,    add some webapi/v3.           * [users](https://developer.github.com/v3/users/) get-a-single-user      * [issues/comments](https://developer.github.com/v3/issues/comments/) list-comments-on-an-issue  create-a-comment      * [pull requests](https://developer.github.com/v3/pulls/) list-pull-requests  get-a-single-pull-request  list-commits-on-a-pull-request      * [repositories](,0,1,0
339,339,1536,    scsi: dma-mapping: always provide dma_get_cache_alignment          provide the dummy version of dma_get_cache_alignment that always returns     1 even if config_has_dma is not set  so that drivers and subsystems can     use it without ifdefs.          cc: stable@vger.kernel.org     signed-off-by: christoph hellwig <hch@lst.de>     signed-off-by: martin k. petersen <martin.peter,1,0,0
340,340,446,    updated 3rd party libs: clapack 3.1.1.1 => 3.2.1  zlib 1.2.3 => 1.2.5  libpng 1.2.x => 1.4.3  libtiff 3.7.x => 3.9.4. fixed many 64-bit related vs2010 warnings ,1,0,0
341,341,1106,    implemented sinh and cosh (#10427)          * implemented sinh and cosh #7531          * removed eigen::half from cosh and sinh definitions          refer to issue #7531 and pull request #7628          * fixed the gradient for sinh in math_grad_test.cc ,1,1,0
342,342,374,    reduce ddatashardcoordinator memory usage during unreachability (#25444)          * stash getshardhome requests in a set  to keep only one per sender     * regions repeatedly send getshardhome requests when they don't receive a response        keeping only one of them is better     * other existing tests cover this implicitly ,0,0,1
343,343,641,    make auto-date disabled by default          fixes #2244     closes #2260 ,1,0,0
344,344,1481,    drm/radeon/kms: rewrite dp handling          - reorganize the functions based on use     - clean up function naming     - rework link training to better match what we use internally     - add initial support for dp 1.2 (no mst yet)          signed-off-by: alex deucher <alexdeucher@gmail.com>     signed-off-by: dave airlie <airlied@redhat.com> ,0,1,1
345,345,655,    net: dsa: bcm_sf2: call setup during switch resume          there is no reason to open code what the switch setup function does  in     fact  because we just issued a switch reset  we would make all the     register get their default values  including for instance  having unused     port be enabled again and wasting power and leading to an inappropriate     switch core clock be,0,0,1
346,346,793,"    miscellaneous fixes from code review.          also replaced sparkconf.getorelse with just a ""get"" that takes a default     value  and added getint  getlong  etc to make code that uses this     simpler later on. ",1,0,1
347,347,490,    benchmark: fix and extend assert benchmarks          the benchmarks had the strict and non strict labels switched.     this is fixed and the benchmarks were extended to check more     possible input types and function calls.          pr-url: https://github.com/nodejs/node/pull/14147     refs: https://github.com/nodejs/node/pull/13973     reviewed-by: refael ackermann <refack@gm,1,0,0
348,348,1537,    fix a good swath of fixmes ,1,0,0
349,349,1022,    add counts of currently executing get operations ,0,1,0
350,350,2000,    fix folder casing (#4144)          fix folder casing ,1,0,0
351,351,848,    undesign client validation          this change removes a layer of abstraction. these validators now just do     what they do now without creating a bunch of intermediate objects.          modelclientvalidationrule has been removed  and client validations     manipulate the attributes collection of a tag directly. ,0,0,1
352,352,1875,    removed unnecessary projects (#4586) (#4612) ,0,0,1
353,353,1902,    deps: downgrade openssl to v1.0.0f          several people have reported issues with iis and resin servers (or maybe     ssl terminators sitting in front of those servers) that are fixed by     downgrading openssl. the aesni performance improvements were nice but     stability is more important. downgrade openssl from 1.0.1e to 1.0.0f.          fixes #5360 (and others). ,1,0,0
354,354,830,    staging: sep: add new pci identifier          [this is picked out of the differences between the upstream driver and      the staging driver. i'm resolving the differences as a series of updates -ac]          signed-off-by: alan cox <alan@linux.intel.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,1,0
355,355,1456,    drm: tegra: clean out old gem prototypes          there is no gem.c anymore  those functions are implemented by the     drm_cma_helpers now.          signed-off-by: lucas stach <dev@lynxeye.de>     signed-off-by: dave airlie <airlied@redhat.com> ,0,0,1
356,356,1771,    complete rewrite of the `fastlane init` onboarding flow (#11386)          * [wip] complete rewrite of the `fastlane init` onboarding flow          * add confirmation with enter          * add information about code signing          * refactor setup code into multiple classes and make it extendable          * add initial login flow + description of why we need the credentials   ,0,1,1
357,357,1227,    removed country-specific localflavor tests.     they now live in separate django-contrib-xx packages. ,0,0,1
358,358,1303,    perf callchain: reference count maps          if dso__load_kcore frees all of the existing maps  but one has already     been attached to a callchain cursor node  then we can get a sigsegv in     any function that happens to try to use this invalid cursor.  use the     existing map refcount mechanism to forestall cleanup of a map until the     cursor iterates past the node.    ,0,0,1
359,359,1158,    gc: be pickier about slice  chan  array  and map sizes          fixes #589.          r=ken2     cc=golang-dev     https://golang.org/cl/1032044 ,1,0,0
360,360,405,    add void return type to setup and teardown methods ,0,1,0
361,361,1450,    usb: option: add d-link dwm-152/c1 and dwm-156/c1          adding support for d-link dwm-152/c1 and dwm-156/c1 devices.          dwm-152/c1:     t:  bus=01 lev=01 prnt=01 port=00 cnt=01 dev#=  6 spd=480 mxch= 0     d:  ver= 2.00 cls=00(>ifc ) sub=00 prot=00 mxps=64 #cfgs=  1     p:  vendor=07d1 prodid=3e01 rev= 0.00     s:  product=usb configuration     s:  serialnumber=1234567,0,1,0
362,362,828,    azure repository: move to named configurations as we do for s3 repository          we should have the same behavior for azure repositories as we have for s3 (see #22762).          instead of:          ```yml     cloud:         azure:             storage:                 my_account1:                     account: your_azure_storage_account1                     key: your_azure_sto,0,1,0
363,363,1472,    mips: make the default mips dma implementation optional          octeon and loonson64 already don't use it at all  and we're going to     migrate more plaforms away from it.          signed-off-by: christoph hellwig <hch@lst.de>     patchwork: https://patchwork.linux-mips.org/patch/19536/     signed-off-by: paul burton <paul.burton@mips.com>     cc: florian fainelli <f.fainelli,0,0,1
364,364,1203,    testing refactor (denoland/deno_std#240)               original: https://github.com/denoland/deno_std/commit/e1d5c00279132aa639030c6c6d9b4e308bd4775e ,0,0,1
365,365,1881,    many tensorflow/core build clean ups.     change: 112523833 ,0,0,1
366,366,1225,"    - switch ""&x""  ""++x"" and ""x+=1"" onto the new style mutability diagnostics        which tell you what the problem is  not just that you have one.     - enhance diagnostics to be more specific about function calls producing       rvalues.                    swift svn r28939 ",0,0,1
367,367,952,    acpi-video-detect: video: make video_detect code part of the video module          this is a preparation patch for the backlight interface selection logic     cleanup  there are 2 reasons to not always build the video_detect code     into the kernel:          1) in order for the video_detect.c to also deal with / select native     backlight interfaces on win8 systems  instead o,0,0,1
368,368,1991,    ability to run unit tests in react-android-github via gradle          reviewed by: mkonicek          differential revision: d2699804          fb-gh-sync-id: 7b31287407bacf2e8e3de6ee1c723a11bb2a0f27 ,0,1,0
369,369,840,    added get and set for extra pvapi property: cv_cap_prop_framestarttriggermode ,0,1,0
370,370,855,    fix message destroy problem  close #8201 ,1,0,0
371,371,355,    fix typo in previous test update ,1,0,0
372,372,148,    working pybind version of mpi process group and abort() pybind (#10606)          summary:     this will make pybind version of mpi pg work. the issue is the scope of the tensor list won't be available for the mpi worker thread. so we pass the vector by value instead.          also added recv_anysource pybind to make it work. the front-end api will wrap one level up with an int ,1,1,0
373,373,33,"    f2fs: fix remount problem of option io_bits          currently we show mount option ""io_bits=%u"" as ""io_size=%ukb""      it will cause option parsing problem(unrecognized mount option)     in remount.          signed-off-by: chengguang xu <cgxu519@gmx.com>     reviewed-by: chao yu <yuchao0@huawei.com>     signed-off-by: jaegeuk kim <jaegeuk@kernel.org> ",1,0,0
374,374,1175,    added aggregation support to the percolate api.     closes #4245 ,1,0,0
375,375,1946,    fix race condition in cli tests: diff was not acquiring a container lock          docker-dco-1.1-signed-off-by: erik hollensbe <github@hollensbe.org> (github: erikh) ,1,0,0
376,376,1614,    added back /application/* files (removed in previous commit accidently). corrected formatting/indenting in cubrid driver classes. added myself as the driver author. applied the mysql fix  previously accepted in pull request #29  to cubrid driver. ,1,0,1
377,377,459,    openvswitch: add erspan tunnel support.          add erspan netlink interface for ovs.          signed-off-by: william tu <u9012063@gmail.com>     cc: pravin b shelar <pshelar@ovn.org>     signed-off-by: david s. miller <davem@davemloft.net> ,0,1,0
378,378,587,    powerpc/eeh: introduce eeh_ops::err_inject          the patch introduces eeh_ops::err_inject()  which allows to inject     specified errors to indicated pe for testing purpose. the functionality     isn't support on pseries platform. on powernv  the functionality     relies on opal api opal_pci_err_inject().          signed-off-by: mike qiu <qiudayu@linux.vnet.ibm.com>     sign,0,1,0
379,379,1265,    arm: shmobile: r8a7778: add sdhi clock support for dt          signed-off-by: kuninori morimoto <kuninori.morimoto.gx@renesas.com>     signed-off-by: simon horman <horms+renesas@verge.net.au> ,0,1,0
380,380,526,    arm: imx: use is_enabled() instead of checking for built-in or module          the is_enabled() macro checks if a kconfig symbol has been enabled either     built-in or as a module  use that macro instead of open coding the same.          using the macro makes the code more readable by helping abstract away some     of the kconfig built-in and module enable details.          si,0,0,1
381,381,1184,    ethoc: write number of tx buffers in init_ring          this moves the write of the tx_bd_num to init_ring together with the     rest of the code setting up the transmission buffers.          signed-off-by: jonas bonn <jonas@southpole.se>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
382,382,1923,    transform: changes to support sdk v0.2.0 (#20426)          and update vendor ,0,1,0
383,383,35,"    drm/i915/cnl: fix lspcon support.          when lspcon support was extended to cnl     one part was missed on lspcon_init.          so  instead of adding check per platform on lspcon_init     let's use has_lspcon that is already there for that     purpose.          fixes: ff15947e0f02 (""drm/i915/cnl: lspcon support is gen9+"")     cc: shashank sharma <shashank.sharma@intel.com> ",1,0,0
384,384,975,    tracing: lock event_mutex before synth_event_mutex          synthetic event is using synth_event_mutex for protecting     synth_event_list  and event_trigger_write() path acquires     locks as below order.          event_trigger_write(event_mutex)       ->trigger_process_regex(trigger_cmd_mutex)         ->event_hist_trigger_func(synth_event_mutex)          on the other hand  sy,1,0,0
385,385,738,    feat: move ngzone to stream/observable-based callback api          breaking changes:     - deprecates these methods in ngzone: overrideonturnstart  overrideonturndone  overrideoneventdone  overrideonerrorhandler     - introduces new api in ngzone that may shadow other api used by existing applications. ,0,1,1
386,386,1699,    bring titlebarplus up to date          * merge npm scripts: added configuration option to change default click action #49282          * fix #50560          * fix getmac test (#48804)          * cleaning up some typos in vscode.d.ts and vscode.proposed.d.ts (#50533)          * yarn.lock changes          * grid - log serialized state if restoring failed          * fixes #50382: a,1,1,1
387,387,1597,    refactor(all): update to one (part 3) (#18874) ,0,0,1
388,388,528,    fixed the bug in keras where the callback attributes are not correctly checked.          piperorigin-revid: 224598769 ,1,0,0
389,389,286,    optimize s.c.m.hashset#filterinplace     add scala.collection.mutable.hashsetproperties          add property tests for s.c.m.hashset ,0,1,1
390,390,448,    [xla] add hlo verifier that checks hlo instruction's parent computation.     change: 151494158 ,0,1,0
391,391,907,    fix broken markdown in actions' details (#12348)          * fix deprecation and details content     * fix incorrect details method declaration for the create_app_online action     * split long detail into multiple lines     * join broken sentences or paragraphs into fewer lines     * split some actions' details into multiple lines     * extract markdown code snippets and lists ,1,0,1
392,392,1340,    removed support for syncing apps without migrations per deprecation timeline.          kept support for creating models without migrations when running tests     (especially for django's test suite). ,0,0,1
393,393,330,    add functionparameterwithellipsis test case ,0,1,0
394,394,1783,    2.x: add efficient concatwith(single|maybe|completable) overloads (#5845)          * 2.x: add efficient concatwith(single|maybe|completable) overloads          * correct the concatwith(completable) tck file name          * increase coverage          * change local variable names. ,0,1,1
395,395,665,    deps: upgrade to v8 5.0.71.52          pick up the latest set of patch level updates from the v8 5.0 branch.     https://github.com/v8/v8/compare/5.0.71.47...5.0.71.52          fixes: https://github.com/nodejs/node/issues/6158     pr-url: https://github.com/nodejs/node/pull/6928     reviewed-by: ali ijaz sheikh <ofrobots@google.com>     reviewed-by: ben noordhuis <info@bnoordhu,1,0,0
396,396,1871,    some work on classpaths.          at https://lampsvn.epfl.ch/trac/scala/wiki/classpath modulo some minor     details which remain to be investigated. it is not entirely integrated      and should not involve any behavioral changes. the patch also contains a     number of small improvements targetting widely duplicated code.          pathresolver offers a main method. if run wit,1,0,1
397,397,1747,    [patch] libata: use ata_flag_pio_polling for pdc_adma          pdc_adma was overlooked and broken by the irq-pio patch:     only hsm_st_last interrupts should be delivered to this lldd.          adding ata_flag_pio_polling to pdc_adma fixes the problem (temporarily)      before we convert the irq handler of pdc_adma to handle all interrupts.          signed-off-by: albert lee <,1,1,0
398,398,1326,    refs #28066 -- fixed nondeterministic ordering test failure in sessions_tests.          thanks tim graham for the review. ,1,0,0
399,399,1595,    web - run smoke tests using playwright (#89918)          * playwright - initial version          * browser - use existing page and not create new context          * macos: document how to remove the security flag          * smoke test - allow to run against server build with --build option          * do not rely on args          * fix path for windows          * smoke test - sm,1,0,1
400,400,1229,    sql: remove instanceof checks for field retrieval (elastic/x-pack-elasticsearch#3402)          * sql: remove instanceof checks for field retrieval          this removes the `instanceof` checks iterating through the columns determining     what fields need to be retrieved from the es document. it adds an interface     `fieldextraction` that collects the fields needed in a builde,0,1,1
401,401,1634,    make root's +extensionregistry generation smarter.          at generation time  walk the file's dependencies to see what really contains     extensions so we can generate more minimal code that only links together the     roots that provided extensions. gets a bunch of otherwise noop code out of     the call flow when the roots are +initialized. ,0,0,1
402,402,1986,    fabric: debug pretty-printing is now debug only feature          summary: that should save us some app size kilobytes.          reviewed by: mdvacca          differential revision: d10081499          fbshipit-source-id: 2b950768c609b412f9be332c22b6b1e96657e5ea ,0,0,1
403,403,1317,    [securitybundle] added some cleanup ,0,0,1
404,404,73,    add locale ca_es (catalan) (#4929)          * add locale ca_es (catalan)          * add locale ca_es (catalan). modify global locale in local-provider. ,0,1,0
405,405,1125,    bpf: support attaching tracing bpf program to other bpf programs          allow fentry/fexit bpf programs to attach to other bpf programs of any type     including their subprograms. this feature allows snooping on input and output     packets in xdp  tc programs including their return values. in order to do that     the verifier needs to track types not only of vmlinux  but ty,0,1,0
406,406,392,    include cleanup: update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h          percpu.h is included by sched.h and module.h and thus ends up being     included when building most .c files.  percpu.h includes slab.h which     in turn includes gfp.h making everything defined by the two files     universally available and complicating in,0,0,1
407,407,172,    optimize immutablelist set sortedset builders.  in particular  uniquify     immutableset/sortedset contents in-place  and make it so that if an     immutableset/sortedset is initialized to the correct size and has     all unique elements  then no copying is done at all.          from louis: http://codereview.appspot.com/6210074/     -------------     created by moe: http://code,0,0,1
408,408,877,    mtvie: add support for vevo videos (related #913) ,0,1,0
409,409,434,    e1000: make eeprom read/write scheduler friendly          code was responsible for ~150ms scheduler latencies.          signed-off-by: joern engel <joern@logfs.org>     signed-off-by: spencer baugh <sbaugh@catern.com>     tested-by: aaron brown <aaron.f.brown@intel.com>     signed-off-by: jeff kirsher <jeffrey.t.kirsher@intel.com> ,0,0,1
410,410,1968,    [arm] remove memzero()          as suggested by andrew morton  remove memzero() - it's not supported     on other architectures so use of it is a potential build breaking bug.     since the compiler optimizes memset(x 0 n) to __memzero() perfectly     well  we don't miss out on the underlying benefits of memzero().          signed-off-by: russell king <rmk+kernel@arm.linux.org.,0,0,1
411,411,2012,"    arch/tile: core support for tilera 32-bit chips.          this change is the core kernel support for tilepro and tile64 chips.     no driver support (except the console driver) is included yet.          this includes the relevant linux headers in asm/; the low-level     low-level ""tile architecture"" headers in arch/  which are     shared with the hypervisor  etc.  and are build",0,1,0
412,412,499,    checkpatch: categorize some long line length checks          many lines of code extend beyond the maximum line length.  some of these     are possibly justified by use type.          for instance:          structure definitions where comments are added per member like:     struct foo {             type member;            /* some long description */          and lines that don't,0,0,1
413,413,1399,    [qt] use fixed pitch font for the rpc console          also:     * preserve white space     * make fixed font as large as default font ,0,0,1
414,414,1549,    rename trtrs to triangular_solve (#18213)          summary:     changelog:     - renames `trtrs` to `triangular_solve` to remain consistent with `cholesky_solve` and `solve`.     - rename all tests  fix callsites     - create a tentative alias for `triangular_solve` under the name `trtrs`  and add a deprecation warning to not promote usage.     - move `isnan` to _torch_docs.py ,1,1,1
415,415,709,    fix imports in all guava packages.          -------------     created by moe: https://github.com/google/moe     moe_migrated_revid=133190481 ,1,0,0
416,416,343,    browser: implement pdf renderer as webui ,0,1,0
417,417,1478,    char: tpm: add missing error check for devm_kzalloc          currently these driver are missing a check on the return value of devm_kzalloc      which would cause a null pointer dereference in a oom situation.          this patch adds a missing check for tpm_i2c_atmel.c and tpm_i2c_nuvoton.c          cc: stable@vger.kernel.org     signed-off-by: kiran padwal <kiran.padwal@smart,1,1,0
418,418,1182,    deps: upgrade v8 to 5.0.71.32          * pick up the branch head for v8 5.0 stable [1]     * edit v8 gitignore to allow trace_event copy     * update v8 dep trace_event as per deps/v8/deps [2]          [1] https://chromium.googlesource.com/v8/v8.git/+/3c67831     [2] https://chromium.googlesource.com/chromium/src/base/trace_event/common/+/4b09207e447ae5bd34643b4c6321bee7b76d35f,0,0,1
419,419,668,    fix spdx (#4327) ,1,0,0
420,420,1140,    cleanup clusterservice dependencies and detached from guice (#18941)          this change removes some unnecessary dependencies from clusterservice     and cleans up clustername creation. clusterservice is now not created     by guice anymore. ,0,0,1
421,421,559,    emit the scalainlineinfo attribute under genasm          the goal of this commit is to allow the new inliner (in genbcode      coming soon) to inline methods generated by the genasm backend of     2.11.6.          the scalainlineinfo attribute is added to every classfile generated     by genasm. it contains metadata about the class and its methods that     will be used by the n,0,1,0
422,422,861,    changed to eshoponcontainers and added basic netstandard libraries for models and sqldata/repositories code ,0,1,0
423,423,270,    add optional 'directoryexists' method to hosts to reduce amount of disk probings that are known to fail ,0,1,1
424,424,1782,"    drm/i915: don't leak global_timeline          we need to clean up the global_timeline in i915_gem_load_cleanup.          v2: don't forget about the struct_mutex  and also warn_on if we have any     remaining timelines before purging the global_timeline.          v3: it might be a good idea to first remove the global_timeline...duh!          fixes: 73cb97010d4f (""drm/i915: combi",1,0,1
425,425,314,    polish `objectprovider` names          consistently use the simple name for objectprovider parameter and     field names. for example:            `objectprovider<something> something`          rather than            `objectprovider<something> somethingprovider` ,0,0,1
426,426,921,    implemented jdbcmigrationpersistence.     replace last slick table usage.     more file renaming for unified connector naming scheme. ,0,1,1
427,427,267,    usb: chipidea: split the driver code into units          split the driver into the following parts:       * core  -- resources  register access  capabilities  etc;       * udc   -- device controller functionality;       * debug -- logging events.          signed-off-by: alexander shishkin <alexander.shishkin@linux.intel.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfo,0,0,1
428,428,954,    added preliminary exception handling code gener...          added preliminary exception handling code generation. ,0,1,0
429,429,237,    port ca1813 (avoid unsealed attributes) to system.runtime.analyzers.     change the fixer to use the documenteditor and remove the c#\vb specific fixers. ,0,0,1
430,430,634,    add syntaxtrrinfo based filter for vb ,0,1,0
431,431,1650,    net/mlx5_core: fix an error code          we return success if mlx5e_alloc_sq_db() fails but we should return an     error code.          fixes: f62b8bb8f2d3 ('net/mlx5: extend mlx5_core to support connectx-4 ethernet functionality')     signed-off-by: dan carpenter <dan.carpenter@oracle.com>     acked-by: or gerlitz <ogerlitz@mellanox.com>     signed-off-by: david s. miller <d,1,0,0
432,432,97,    mm: simplify memory_isolation && compaction || cma into contig_alloc          this condition allows to define alloc_contig_range  so simplify it into a     more accurate naming.          link: http://lkml.kernel.org/r/20190327063626.18421-4-alex@ghiti.fr     signed-off-by: alexandre ghiti <alex@ghiti.fr>     suggested-by: vlastimil babka <vbabka@suse.cz>     acked-by: vlastimil,0,0,1
433,433,1518,    kubeadm: fix a couple of problems related to initdata/joindata          fix a couple of problems related to data used by the phases runners     of `init` and `join`.          1) make `newinitdata()` and `newjoindata()` return pointers.          methods of the data objects returned by these functions should     be able to modify fields in the data objects - e.g.     `func (d ini,1,0,0
434,434,899,    src/pkg/[a-m]*: gofix -r error -force=error          r=golang-dev  iant     cc=golang-dev     https://golang.org/cl/5322051 ,1,0,0
435,435,1915,    add parentheses for all method calls (#11474)          * add parentheses for all method calls          using rubocop          * fix code style          * after merge updates          * fix tests ,1,0,1
436,436,692,    clk: sunxi: make factors clock mux mask configurable          some of the factors-style clocks on the a80 have different widths     for the mux values in the registers.          add a .muxmask field to clk_factors_config to make it configurable.     passing a bitmask instead of a width parameter will allow reuse     in case we support table-based muxes in the future.          s,0,1,1
437,437,192,    fixed a few problems detected by xcode 4.2.1 ,1,0,0
438,438,1905,    jit auto sutff - before attaching - and some code improves ,0,0,1
439,439,1543,    sched/core: fix task and run queue sched_info::run_delay inconsistencies          mike meyer reported the following bug:          > during evaluation of some performance data  it was discovered thread     > and run queue run_delay accounting data was inconsistent with the other     > accounting data that was collected.  further investigation found under     > certain circumstan,1,0,0
440,440,912,    fixed headers/comments/svn props  made some pro...          fixed headers/comments/svn props  made some progress with serializable     classes ,1,0,0
441,441,21,    fix: update types for typescript nullability support in examples ,1,0,0
442,442,1384,    staging: rt2870: remove dead qos_dls_support code          signed-off-by: bartlomiej zolnierkiewicz <bzolnier@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,0,0,1
443,443,284,    ide: add 'init_default' and 'restore' arguments to ide_unregister()          * add 'init_default' (flag for calling init_hwif_default()) and 'restore'       (flag for calling ide_hwif_restore()) arguments to ide_unregister().          * update ide_unregister() users to set 'init_default' and 'restore' flags.          * no need to set 'init_default' flag in ide_register_hw() if ,0,1,1
444,444,265,    fixed (filter->template)optionselected test          - small misunderstanding on my part  fixed the api in the filtersrv back     - renames to match my renames     - init script has to be called or fundefined things happen ,1,0,0
445,445,971,    net: provide compat support for siocgetmifcnt_in6 and siocgetsgcnt_in6.          signed-off-by: david s. miller <davem@davemloft.net> ,0,1,0
446,446,820,    conflicts variable name ,1,0,0
447,447,1019,    deps: upgrade openssl sources to 1.1.0h          this updates all sources in deps/openssl/openssl with openssl-1.1.0h.          fixes: https://github.com/nodejs/node/issues/4270     pr-url: https://github.com/nodejs/node/pull/19794     reviewed-by: james m snell <jasnell@gmail.com>     reviewed-by: rod vagg <rod@vagg.org>     reviewed-by: michael dawson <michael_dawson@ca.ibm.c,1,0,0
448,448,632,    move master actions to accept a lister  improve cluster service state execution     - master actions many times end up being executed on the cluster service  so there is no need to block them on the management thread pool to wait for a response  this remove the load on the management thread pool  and also simplifies the code implementing it     - cluster service state update ex,0,0,1
449,449,611,    perf(core): use `array.push` / `array.pop` instead of `splice` if possible ,0,0,1
450,450,705,    fix syntax highlight taking too long          use timeout to switch to plain rendering ,1,0,0
451,451,1716,    [reflection] hoist computation of metadata/value for opaque existential to the reader.          this will allow re-use of this code in remoteast (and  transitively      in lldb).          <rdar://problem/41546568> ,0,0,1
452,452,283,    finagle: remove use of runwith annotation in tests          problem / solution          the `runwith` annotation is no longer necessary for     running tests in sbt or pants. let's remove it for     all finagle tests.          differential revision: https://phabricator.twitter.biz/d357096 ,0,0,1
453,453,762,    first step in moving the compiler code base to the .net foundation coding style.          background:          as discussed in the dev team all hands all code under the github dotnet foundation is using a single process for contribution  api review  infrastructure and coding style. the idea is to present a unified view to our customer and give them a single story for contributi,0,1,1
454,454,1204,    btrfs: fix fallocate regression          seems that when btrfs_fallocate was converted to use the new enospc stuff we     dropped passing the mode to the function that actually does the preallocation.     this breaks anybody who wants to use falloc_fl_keep_size.  thanks           signed-off-by: josef bacik <josef@redhat.com>     signed-off-by: chris mason <chris.mason@oracle.co,1,0,0
455,455,171,    [emmet] support all the features (#8155)          * [emmet] support all the features          * fix tslint errors          * [emmet] fix problem with css `url()` without quotes          * [emmet] do not save files without a name          * [emmet] clarifying the method name          * [emmet] add promise error handler          * [emmet] correct support for paths          * fix ,1,1,1
456,456,920,    adding skflow to tensorflow/contrib ,0,1,0
457,457,13,    update from facebook (#8887)          * add opencl + fpga context          adds an opencl context inside caffe2/fb which can be used for fpga access          * [caffe2] force tensor inference checks to be triggered during testing          we've started to rely on tensorinference functions more for different analysis.  this diff ensures that the tensorinference function's result,0,1,0
458,458,1973,    fixed bug #61025 (__invoke() visibility not honored) ,1,0,0
459,459,470,    - fixed bug #34304 (date() doesn't have a modifier for iso week day). ,1,0,0
460,460,1653,    add support for compiling on aix          closes #1900 ,0,1,0
461,461,1036,    configuration of artery materializer and dispatcher          * also increased the parallelism-max to 4 for default-remote-dispatcher ,0,0,1
462,462,1934,    [form  frameworkbundle] added csrf tokens reset on kernel::shutdown() to preven tokens stacking in tests ,0,1,0
463,463,543,    add a dentry op to allow processes to be held during pathwalk transit          add a dentry op (d_manage) to permit a filesystem to hold a process and make it     sleep when it tries to transit away from one of that filesystem's directories     during a pathwalk.  the operation is keyed off a new dentry flag     (dcache_manage_transit).          the filesystem is allowed to be ,0,1,0
464,464,1509,    rename checkpointable -> trackable and autocheckpointable -> autotrackable          no api changes in this cl. just more refactoring for a future api change.          piperorigin-revid: 234242335 ,0,1,1
465,465,1438,    fix build          r=rsc     https://golang.org/cl/159044 ,1,0,0
466,466,1855,    [alsa] hda-codec - a new model for fujitsu s7020          modules: hda codec driver          added a new model 'fujitsu' to alc260 config for fujitsu s7020.          signed-off-by: takashi iwai <tiwai@suse.de> ,0,1,0
467,467,972,    added new git_commit action with tests & docs ,0,1,0
468,468,473,    powerpc: add support for setting sprn_tidr          we need the sprn_tidr to be set for use with fast thread-wakeup (core-     to-core wakeup) and also with capi.          each thread in a process needs to have a unique id within the process.     but for now  we assign globally unique thread ids to all threads in     the system.          signed-off-by: sukadev bhattiprolu <suka,0,1,0
469,469,686,    integration with the testconductor          - removed old failureinjector from testconductor     - fixed tests to work with the new remoting     - plugged throttlertransportadapter into testconductor ,1,0,0
470,470,2027,"    revendor golang.org/x/sys to remove golang.org/x/sys/unix          this fix tries to fix the issue raised in #24168 where     golang.org/x/sys causes s390x build failure.          this fix revendor golang.org/x/sys to removed the import     of ""golang.org/x/sys/unix"".          note: the last commit removes the reference to     ""golang.org/x/sys/unix"".          this fix fixes #2",1,0,0
471,471,1293,    dbg: added getbridgebp function ,0,1,0
472,472,888,    adding unk to vocab | changing default params          summary: unk needs tobe indexed in the vocabulary for validation to work. default args now result in training loss decreasing.          reviewed by: urikz          differential revision: d4703393          fbshipit-source-id: e4d6ad100daf8392f8ba1e502f9ecf39bb8ce24a ,0,0,1
473,473,1485,    removing all of the 'type' tags from the nodes. simply using constructor.name instead. ,0,0,1
474,474,178,    staging: comedi: ni_at_a2150: fix checkpatch warning          fix checkpatch.pl warning 'line over 80 characters'     remove extra space after /*          signed-off-by: anson jacob <ansonjacob.aj@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
475,475,1137,    following up on things that -xlint told me  som...          following up on things that -xlint told me  sometimes because mr. linty     was being sensible and other times just to shut him up so we can hear     better in the future.          - made xml.equality public because it occurs in public method signatures     - made some actor classes with inaccessible-unoverridable meth,0,0,1
476,476,1077,    mtd: nand: subpage write support for hardware based ecc schemes          this patch adds support for subpage (partial-page) writes when using     hardware based ecc schemes.     advantages:     (1) reduces storage overhead when using file-systems like ubifs  which     store leb header at page-size granularity.     (2) allows independent subpage writes  thereby increasing nand s,0,1,1
477,477,688,    merged commit includes the following changes:     191649512  by zhichao lu:              introduce two parameters in ssd.proto - freeze_batchnorm  inplace_batchnorm_update - and set up slim arg_scopes in ssd_meta_arch.py such that applies it to all batchnorm ops in the predict() method.              this centralizes the control of freezing and doing inplace batchnorm updates.  ,0,0,1
478,478,1695,    fixed #20660 -- do not try to delete an unset fieldfile          thanks stanislas.guerra at gmail.com for the report and     baptiste mispelon for the review. ,1,0,0
479,479,1248,    mfd: max8998: add support for device tree          this patch adds device tree support to max8998 driver.          signed-off-by: tomasz figa <t.figa@samsung.com>     acked-by: mark brown <broonie@linaro.org>     signed-off-by: samuel ortiz <sameo@linux.intel.com> ,0,1,0
480,480,259,    send header to c++ process on job open (elastic/elasticsearch#603)          this avoids the problem of the c++ process getting confused by control     messages that are sent before any data messages have been sent          fixes elastic/elasticsearch#593          original commit: elastic/x-pack-elasticsearch@9aed3f0b8294c0e786635880a808961478f6e337 ,1,0,0
481,481,112,    debug: drop support for variable substition for program and runtime in package.json          fixes #31675 ,1,0,0
482,482,1525,    fixes #4490 and #4467. ,1,0,0
483,483,2003,    add ability to share licenses between teachers          set up boilerplate for sharelicensesmodal          add main modal ui          [fixup] tweak button styles          add joiners to prepaid schema          fetch real prepaid data and map it          fix up endpoint interactions          add sweet list transitions and error handling          fix reopening modal  add prepaid ,1,1,0
484,484,1009,    drivers: net: xgene: fix error deconstruction path          since register_netdev() call in xgene_enet_probe() was moved down to     the end  it doesn't properly handle errors that may occur  by     deconstructing everything that was setup before the error occurred.          signed-off-by: iyappan subramanian <isubramanian@apm.com>     signed-off-by: david s. miller <davem@dave,1,0,0
485,485,220,    updating the music store application with the latest code.          changes include     (1) inclusion of all views (with non compiling code commented out)     (2) inclusion of all models with data annotations     (3) images & setting up of static files     (4) mvc application setup and scripts to run the application     (5) scripts to clean up the temporary files and capture lk,0,1,1
486,486,956,    rest high-level client: add support for split and shrink index api (#28425)          relates to #27205 ,0,1,0
487,487,1282,    [powerpc] cell: abstract spu management routines          this adds a platform specific spu management abstraction and the coresponding     routines to support the ibm cell blade.  it also removes the hypervisor only     resources that were included in struct spu.          three new platform specific routines are introduced  spu_enumerate_spus()      spu_create_spu() and spu_de,0,1,0
488,488,893,    staging: fsl-dpaa2/ethsw: add ethtool support          add driver information  link details and hardware statistics to be     reported via ethtool -s.          signed-off-by: razvan stefanescu <razvan.stefanescu@nxp.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,1,0
489,489,994,    [s390] smp: remove volatile type quilifier from __cpu_logical_map          remove pointless qualifier.          signed-off-by: heiko carstens <heiko.carstens@de.ibm.com>     signed-off-by: martin schwidefsky <schwidefsky@de.ibm.com> ,0,0,1
490,490,894,    make `files.eol` overridable. fixes #49418. fixes #34876 ,1,0,0
491,491,285,"    add git-archive          git-archive is a command to make tar and zip archives of a git tree.     it helps prevent a proliferation of git-{format}-tree commands.          instead of directly calling git-{tar zip}-tree command  it defines     a very simple api  that archiver should implement and register in     ""git-archive.c"". this api is made up by 2 functions whose prototype ",0,1,0
492,492,2008,"    [spark-10023] [ml] [pyspark] unified decisiontreeparams checkpointinterval between scala and python api.          ""checkpointinterval"" is member of decisiontreeparams in scala api which is inconsistency with python api  we should unified them.     ```     member of decisiontreeparams <-> scala api     shared param for all ml transformer/estimator <-> python api     ```     prop",0,0,1
493,493,213,    [scaladoc] improve visual design and layout of ...          [scaladoc] improve visual design and layout of scaladoc  using     contributions from heather miller. no review. ,0,0,1
494,494,697,    add classes in top menu for teachers and students only ,0,1,0
495,495,1570,    allow shrinking of indices from a previous major (#28076)          lucene does not allow adding lucene 6 files to a lucene 7 index. this commit ensures that we carry over the lucene version to the newly created lucene index.          closes #28061 ,1,1,0
496,496,821,    preserve webview scroll position (#26426)          * preserve webview scroll position          fixes #22995          **bug**     if you switch away from an editor that users a webview  the scroll position is currently not preserved. this effects our release notes and the markdown preview. the root cause is that the webview is disposed of when the view is hidden.          **fix*,1,0,0
497,497,885,    rollback changeset 1407857 to fix the build break. (changeset 1407952) ,1,0,0
498,498,1086,    alsa: ca0106: make snd_pcm_hardware const          make these const as they are only used during a copy operation.     done using coccinelle.          signed-off-by: bhumika goyal <bhumirks@gmail.com>     signed-off-by: takashi iwai <tiwai@suse.de> ,0,0,1
499,499,431,    add unified attribute for completion for encoding parameter. (#7732)          provide a tab completion attribute (argumentencodingcompletionsattribute) for an encoding parameter.     this pr should fix the duplicated code warning in codefactor ,1,1,0
500,500,1257,    siloptimizer: fix potential crashes with uses of replaceloadsequence()          this utility is generally a horrible idea but even worse the     callers were not doing anything to ensure the required     invariants actually held.          add a new canreplaceloadsequence() method and chek it in the     right places. ,1,0,0
501,501,1907,    add cloudfoundrydiscoverymvcendpoint          update cloud foundry support with a discovery endpoint that shows what     endpoints are available.          see gh-7108 ,0,1,0
502,502,313,    remove unused tensor-reference-recording feature from the executor.          this change also removes the `device::requiresrecordingaccessedtensors()` and `device::consumelistofaccessedtensors()` methods.          some device objects (historically  gpus with experimental multi-stream support) required the ability to record which tensors were used during kernel execution. this s,0,0,1
503,503,858,    [patch] fix cfq hash lookups          if somebody does a hash lookup for cfq_queue while ioprio of an async queue     is elevated  they shouldn't end up stuck with lowered ioprio when we go back.     fix is to use ->org_ioprio{ class} in hash lookups.          signed-off-by: al viro <viro@zeniv.linux.org.uk> ,1,0,0
504,504,302,    fix up this pattern var react = require('react-native');          summary:first i searched for special cases that destructor proptypes:          ```     (?s)react\s*=\s*require\('react\-native'\).*(children|proptypes)[^\{\}]*\}\s*=\s*react;     ```          i split them up manually.          then i replaced the react = require('react-native') + destructuring pattern...         ,1,0,0
505,505,612,    fix js-prototype-assignment on declarations ,1,0,0
506,506,15,"    re-apply ""ast: early exit from subst() if the type is concrete""          the underlying issue (pun intended) with recursive properties of     typealiases not getting set should now be fixed. ",1,0,0
507,507,580,    cri: add linuxuser to linuxcontainerconfig          signed-off-by: antonio murdaca <runcom@redhat.com> ,0,1,0
508,508,179,    feature: add liked and bookmarked classes to topic list item rows ,0,1,0
509,509,1363,    fix: allow user quotes in html digest emails ,1,0,0
510,510,766,    feature: new site setting for additional allowed filetypes for staff (#5364)          * feature: new site setting for additional allowed filetypes for staff          * problematic variable name          * feedback          * small issues          * fix indentation          * failing tests          * remove message bus and fix minor issues          * missed this message bus ,1,1,0
511,511,357,    on test completion  kill the asp.net process tree (otherwise orphan processes are left behind) ,0,0,1
512,512,1732,    net: rfkill: gpio: remove unused and obsolete platform parameters          after upgrading to descriptor based gpios  the gpio numbers     are not used anymore. the power_clk_name and the platform     specific setup and close hooks are not used by anybody  and     we should not encourage use of such things  so removing them.          acked-by: alexandre courbot <acourbot@nvidia,0,0,1
513,513,984,    better shape function for fixed width histogram op.          piperorigin-revid: 173446796 ,0,0,1
514,514,1522,    mac80211: minstrel_ht: add basic support for vht rates <= 3ss@80mhz          when the new config_mac80211_rc_minstrel_vht is not set (default 'n')      there is no behavioral change including in sampling and mcs_group_rates     remains 8.     otherwise mcs_group_rates is 10  and a module parameter *vht_only*     (default 'true')  restricts the rates selection to vht when vht is,0,1,0
515,515,1977,    drm/i915: use time based guilty context banning          currently  we accumulate each time a context hangs the gpu  offset     against the number of requests it submits  and if that score exceeds a     certain threshold  we ban that context from submitting any more requests     (cancelling any work in flight). in contrast  we use a simple timer on     the file  that if we see ,0,0,1
516,516,675,    usb: remove use of __devexit          config_hotplug is going away as an option so __devexit is no     longer needed.          signed-off-by: bill pemberton <wfp5p@virginia.edu>     cc: peter korsgaard <jacmet@sunsite.dk>     cc: alexander shishkin <alexander.shishkin@linux.intel.com>     acked-by: felipe balbi <balbi@ti.com>     cc: li yang <leoli@freescale.com>     cc: alan s,0,0,1
517,517,586,    asus-laptop: add bluetooth keys found on m9v          reported by andrey f. ilchuk          signed-off-by: corentin chary <corentincj@iksaif.net> ,1,0,0
518,518,2025,    do not launch javagateways on workers (spark-674).          the problem was that the gateway was being initialized whenever the     pyspark.context module was loaded.  the fix uses lazy initialization     that occurs only when sparkcontext instances are actually constructed.          i also made the gateway and jvm variables private.          this change results in ~3-4x perfor,1,0,0
519,519,879,    lcd: add platform_lcd driver          add a platform_lcd driver to allow boards with simple lcd power controls     to register themselves easily.          [akpm@linux-foundation.org: build fix]     signed-off-by: ben dooks <ben-linux@fluff.org>     cc: richard purdie <rpurdie@rpsys.net>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torval,1,0,0
520,520,1343,    added isprofiling() to reactdebugtool and isrunning() to perftools ,0,1,0
521,521,1551,    remove the unused nsimageview imagescale and alignment override ,0,0,1
522,522,26,    drm/i915/gt: convert timeline tracking to spinlock          convert the active_list manipulation of timelines to use spinlocks so     that we can perform the updates from underneath a quick interrupt     callback  if need be.          signed-off-by: chris wilson <chris@chris-wilson.co.uk>     reviewed-by: matthew auld <matthew.auld@intel.com>     link: https://patchwork.freedes,0,1,1
523,523,303,    fix: add topic deleted check to email/sender (#9166)          it already had a deleted post check and log reason  add a topic one too to avoid errors ,1,0,0
524,524,1784,    [scsi] lpfc 8.2.3 : miscellaneous small fixes - part 1          miscellaneous small fixes - part 1     - fix typo kmzlloc -> kzalloc     - fix discovery ndlp use after free panic     - fix link event causing flood of 0108 messages     - relieve some mbox congestion on link up with 100 vports     - fix broken vport parameters     - prevent lock recursion in logo_reglogin_issue  ,1,0,0
525,525,43,    fix creating literal enum values ,1,0,0
526,526,300,    [ml] allow model_memory_limit to be reduced (elastic/x-pack-elasticsearch#3998)          up to now a job update that reduces the model memory limit     was not allowed. however  there could definitely be cases     where reducing the limit is necessary and reasonable.          this commit makes it possible to decrease the limit as long     as it does not go below the current mem,0,0,1
527,527,685,    uids: merge multiple error paths in alloc_uid() into one          there are already 4 error paths in alloc_uid() that do incremental rollbacks.     i think it's time to merge them.  this costs us 8 lines of code :)          maybe it would be better to merge this patch with the previous one  but i     remember that some time ago i sent a similar patch (fixing the error path and ,0,0,1
528,528,511,    add test to column alias in `exists?` sql.          this behavior was added in be4ecdcc87984e9421ff5d5c90d33f475e0fbc01.          closes #1139.          fixes #2553  #1141  #1623 and #2062. ,0,1,0
529,529,476,    cmd/link: remove global bso variable          bso is already a member on ld.link. use that instead of     the global.          updates #16818          change-id: icfc0f6cb1ff551e8129253fb6b5e0d6a94479f51     reviewed-on: https://go-review.googlesource.com/27470     run-trybot: michael matloob <matloob@golang.org>     reviewed-by: brad fitzpatrick <bradfitz@golang.org>     trybo,0,0,1
530,530,155,"    (lotsa files affected) rc file format changed; see below          the rc file used to be a bunch of variables  each one requiring to be     declared before being used.  while this was nice and all  it was a     little cumbersome to add a new flag or option.          if you disregard the ""catch typos"" aspect of having to predeclare     variables  it's a lot more useful to have a",0,0,1
531,531,935,    kvm: mmu: remove pt_access in mmu_set_spte          it is only used in debug code  so drop it          reviewed-by: gleb natapov <gleb@redhat.com>     signed-off-by: xiao guangrong <xiaoguangrong@linux.vnet.ibm.com>     signed-off-by: marcelo tosatti <mtosatti@redhat.com> ,0,0,1
532,532,909,    add jsx codefix if available (#32281)          * add jsx codefix if available          * update react jsx.          * update diagnostic code. ,0,1,0
533,533,867,"    revert ""nfsv4: remove incorrect check in can_open_delegated()""          this reverts commit 4e379d36c050b0117b5d10048be63a44f5036115.          this commit opens up a race between the recovery code and the open code.          reported-by: olga kornievskaia <aglo@umich.edu>     cc: stable@vger.kernel # v4.0+     signed-off-by: trond myklebust <trond.myklebust@primarydata.com> ",1,0,0
534,534,1238,    use the pagination helper in the api ,0,0,1
535,535,857,    drm/amd/powerplay: add function to set thermal range          add the function to set the correct min and max thermal value for smu11          signed-off-by: likun gao <likun.gao@amd.com>     acked-by: alex deucher <alexander.deucher@amd.com>     reviewed-by: huang rui <ray.huang@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,1,0
536,536,274,    remove longtuple          this commit removes an abstraction that was introduced when introducing     the primary context. as this abstraction is used in exactly one place      we simply make that abstraction local to its usage so that we do not     accumulate yet another general abstraction with exactly one usage.          relates #25402 ,0,0,1
537,537,145,"    feature 2.6 (#4429)          * new layout component (#4087)          * change anchor type          * new layout          * component update && add snap          * revert ""new layout component"" (#4131)          * add layout (#4169)          * add layout          * update          * fix snapshot          * improve layout component          1. update demo code     2. drop `positio",1,1,1
538,538,902,    compat_ioctl: don't pass fd around when not needed          signed-off-by: al viro <viro@zeniv.linux.org.uk> ,0,0,1
539,539,739,"    feat(router): add ""paramsinheritancestrategy"" router configuration option          previously  the router would merge path and matrix params  as well as     data/resolve  with special rules (only merging down when the route has     an empty path  or is component-less). this change adds an extra option     ""paramsinheritancestrategy"" which  when set to 'always'  makes child     ",0,1,0
540,540,1828,    [spark-8759][sql] add default eval to binary and unary expression according to default behavior of nullable          we have `nullsafecodegen` to provide default code generation for binary and unary expression  and we can do the same thing for `eval`.          author: wenchen fan <cloud0fan@outlook.com>          closes #7157 from cloud-fan/refactor and squashes the following co,0,1,0
541,541,1702,    drm/amdgpu: add framework for hw specific priority settings v9          add an initial framework for changing the hw priorities of rings. the     framework allows requesting priority changes for the lifetime of an     amdgpu_job. after the job completes the priority will decay to the next     lowest priority for which a request is still valid.          a new ring function set_p,0,1,0
542,542,1213,    arm64: compat: vdso: use legacy syscalls as fallback          the generic vdso implementation uses the y2038 safe clock_gettime64() and     clock_getres_time64() syscalls as fallback for 32bit vdso. this breaks     seccomp setups because these syscalls might be not (yet) allowed.          implement the 32bit variants which use the legacy syscalls and select the     variant in t,0,0,1
543,543,980,    restore split between require-time and runtime load path mungery. simplifies vendor requires. ,0,0,1
544,544,2002,    fix: confirm email token for user created via social login ,1,0,0
545,545,342,    style(imports): add spaces in imports ,0,0,1
546,546,1651,    change how error messages are shown          instead of throwing the syntax errors with their source file location and needing to then catch them and call a `prettyerrormessage` function in order to get the formatted error message  now syntax errors know how to pretty-print themselves (their `tostring` method gets overridden).          an intermediate `catch` & re-`throw` is ne,0,0,1
547,547,817,    mfh: reset tz environment variable. some tests assume that it's not set. ,1,0,0
548,548,1713,    enable vsthrd100 (avoid async void methods) and fix violations ,1,0,0
549,549,1401,    fix some api user is invalid            issue.username -> issue.openedusername       issuecomment.username -> issuecomment.commentedusername ,1,0,0
550,550,441,    x86: make intel_64.c the same as intel.c          no change in functionality intended - this only adds the 32-bit side.          signed-off-by: yinghai lu <yhlu.kernel@gmail.com>     signed-off-by: ingo molnar <mingo@elte.hu> ,0,1,0
551,551,1347,    [react_native] js files from d1994196:     [react_native] textinput fix android viewconfig    mixins: [nativemethodsmixin  timermixin]  ,1,0,0
552,552,1162,    test: fix pummel/test-net-connect-memleak          a loop that generates a long array is resulting in a rangeerror. moving     to array.prototype.fill() along with the ** operator instead of using a     loop fixes the issue.          pr-url: https://github.com/nodejs/node/pull/21658     reviewed-by: anna henningsen <anna@addaleax.net>     reviewed-by: luigi pinca <luigipinca@gm,1,0,0
553,553,569,    env.gcc: remove raise          this raise happened in no other env methods  and isn't really necessary     since fails_with guards against this method actually being called unless     gcc-4.2 is actually installed. ,0,0,1
554,554,666,    add refactor of extract type (#30562)          * add basically implement          * add rename location and add testcase          * collection type arguments          * disallow infer type          * add support for typedef convert          * refactor info to make type safe          * disallow type pred          * avoid unnecessary branch          * disallow type query         ,0,1,1
555,555,1990,    nfc: change all helper functions in `tuple_ops` not to require `llvm::module` argument  as it can be derived from the already provided `llvm::irbuilder`.     this makes functions easier to code and the calls less verbose  and additionally enables making calls from helper classes where `llvm::module*` might not be available.     piperorigin-revid: 238523747 ,0,0,1
556,556,90,    java 11 migrate remaining p (#1122)          * moves partial-response to java 11          * moves pipeline to java 11          * moves poison-pill to java 11          * moves priority-queue to java 11          * moves private-class-data to java 11          * moves producer-consumer to java 11          * moves promise to java 11          * moves property to java 11          * mo,0,1,1
557,557,968,    updating csharpcodevisitor to generate implicit expressions on a single     line          fixing 151 ,1,0,0
558,558,81,"    remove lenient url parameter parsing          today when parsing a request  elasticsearch silently ignores incorrect     (including parameters with typos) or unused parameters. this is bad as     it leads to requests having unintended behavior (e.g.  if a user hits     the _analyze api and misspell the ""tokenizer"" then elasticsearch will     just use the standard analyzer  comp",1,0,0
559,559,1356,    fixing default header resolution on messages ,1,0,0
560,560,915,    clean up gui directory ,0,0,1
561,561,1813,    perf(raf): use rafframes instead of fastdom ,0,0,1
562,562,524,    [spark-19953][ml] random forest models use parent uid when being fit          ## what changes were proposed in this pull request?          the ml `randomforestclassificationmodel` and `randomforestregressionmodel` were not using the estimator parent uid when being fit.  this change fixes that so the models can be properly be identified with their parents.          ## how was th,1,0,0
563,563,1023,    don't mutate `where_values`          this is to help facilitate future refactorings  as the internal     representation is changed. i'm planning on having `where_values` return     an array that's computed on call  which means that mutation will have no     affect. this is the only remaining place that was mutating (tested by     replacing the method with calling `dup`) ,0,0,1
564,564,1636,"    cmd/compile: bulk rename          this change does a bulk rename of several identifiers in the compiler.     see #27167 and https://docs.google.com/document/d/19_exiyld9mrfeajkifesmu1_rghuxb9sa0b5zv7byvi/     for context and for discussion of these particular renames.          commands run to generate this change:          gorename -from '""cmd/compile/internal/gc"".oproc' -to og",0,0,1
565,565,1359,    added tests for testing if actions are actions and if deprecated ,0,1,0
566,566,1827,    drm/nouveau/mmu: define user interfaces to mmu memory allocation          signed-off-by: ben skeggs <bskeggs@redhat.com> ,0,1,0
567,567,1406,    drm/nouveau/core/client: allow creation of subclients          we want a supervisor client of nvkm (such as the drm) to be able to     allow sharing of resources (such as memory objects) between clients.          to allow this  the supervisor creates all its clients as children of     itself  and will use an upcoming ioctl to permit sharing.          currently it's not possible,0,1,0
568,568,346,    [netns][ipv6]: make ipv6_sysctl_register to return a value.          this patch makes the function ipv6_sysctl_register to return a     value. the af_inet6 init function is now able to handle an error and     catch it from the initialization of the sysctl.          signed-off-by: daniel lezcano <dlezcano@fr.ibm.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,1,1
569,569,1937,    optimize property sources pattern matching          create a propertynamepatternsmatcher strategy interface that     propertysourcespropertyvalues can use to determine when a property     can be used.          propertiesconfigurationfactory uses defaultpropertynamepatternsmatcher     which is heavily optimized for frequent calls.          fixes gh-1823 ,0,0,1
570,570,1678,"    avoid using a column named ""date"" in tests          oracle can have problems with such columns. fixed #17932 again.     thanks to vinay sajip for the report. ",1,0,0
571,571,866,"    add a rangespecificdiagnosticconsumer          if a top-level diagnostic is in a particular source range  the     rangespecificdiagnosticconsumer will funnel it and any attached notes     to a particular ""sub-consumer"" designated for that range (intended to     be used with whole files). if it's not in a range designated for any     sub-consumer  the diagnostic is passed to all",0,1,0
572,572,1555,    signal/sh: use force_sig_fault where appropriate          filling in struct siginfo before calling force_sig_info a tedious and     error prone process  where once in a great while the wrong fields     are filled out  and siginfo has been inconsistently cleared.          simplify this process by using the helper force_sig_fault.  which     takes as a parameters all of the infor,0,0,1
573,573,1167,    name and move things to better organize finddeclarations. ,0,0,1
574,574,1154,"    tools: move eslint from tools to tools/node_modules          this is required because we need to add the babel-eslint dependency     and it has to be able to resolve ""eslint"".     babel-eslint is required to support future es features such as async     iterators and import.meta.          refs: https://github.com/nodejs/node/pull/17755     pr-url: https://github.com/nodejs/node/",0,0,1
575,575,591,    query cache: support shard level query response caching          the query cache allow to cache the (binary serialized) response of the shard level query phase execution based on the actual request as the key. the cache is fully coherent with the semantics of nrt  with a refresh (that actually ended up refreshing) causing previous cached entries on the relevant shard to be inva,0,0,1
576,576,557,    [ml] refactor common utils out of ml plugin to xpack.core (#39976)          * [ml] refactor common utils out of ml plugin to xpack.core          * implementing get filters with abstract transport          * removing added rest param          * adjusting how defaults can be supplied ,0,0,1
577,577,1228,    removing most of the symbol to proc usage in active record          this will hopefully make active record run a bit more faster. ,0,0,1
578,578,706,    [alsa] remove sound/driver.h          this header file exists only for some hacks to adapt alsa-driver     tree.  it's useless for building in the kernel.  let's move a few     lines in it to sound/core.h and remove it.     with this patch  sound/driver.h isn't removed but has just a single     compile warning to include it.  this should be really killed in     future.         ,0,0,1
579,579,1160,    fix lobby hook js ,1,0,0
580,580,1500,    soc: mediatek: add scpsys power domain driver for mediatek mt7623a soc          add scpsys power domain driver for mt7623a soc. the mt7623a's power     domains are the subset of mt7623 soc's ones. as mt7623 soc has full     features whereas mt7623a is being designed just for router applications.     thus  mt7623a doesn't include those power domains multimedia function     belon,0,1,0
581,581,1002,    [sil] nfc: repack misc pointertoaddressinst bits ,0,0,1
582,582,882,    add at::one_hot (#15208)          summary: closes: https://github.com/pytorch/pytorch/issues/15060          differential revision: d13528014          pulled by: ezyang          fbshipit-source-id: 5a18689a4c5638d92f9390c91517f741e5396293 ,0,1,0
583,583,1999,    watchdog: use pr_<fmt> and pr_<level>          use the current logging styles.          make sure all output has a prefix.     add missing newlines.     remove now unnecessary pfx  name  and miscellaneous other #defines.     coalesce formats.          signed-off-by: joe perches <joe@perches.com>     signed-off-by: wim van sebroeck <wim@iguana.be> ,0,0,1
584,584,608,    arm: s5pc100: use common functions for gpiolib implementation          gpiolib helpers from plat-samsung already have functions for accessing     4bit gpio banks. this patch removes the duplicated functions from     plat-s5pc1xx/gpiolib.c.          signed-off-by: marek szyprowski <m.szyprowski@samsung.com>     signed-off-by: kyungmin park <kyungmin.park@samsung.com>     signed-,0,0,1
585,585,69,    sparc64: fix size check in huge_pte_alloc          signed-off-by: nitin gupta <nitin.m.gupta@oracle.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
586,586,253,    reorganize source code from aspnet/dataprotection into a subfolder          prior to reorg  this source existed at https://github.com/aspnet/dataprotection/tree/9c7731f1fab12009d6060c748e93f542f3b1f7b5 ,0,0,1
587,587,1109,    tensorflow: implement the rest of the state_ops c++ shape functions      add some more common shape functions in data_flow_ops.cc     change: 129049063 ,0,1,0
588,588,8,    ide: add codecompleteinitsinpostfixexpr to completion cache key          this fixes a source of non-determinism. the ide/complete_constructor     test would sometimes fail depending on the order in which prior tests     ran  since those prior tests might populate the code completion cache. ,1,0,0
589,589,1208,    bufio:             * avoid large copies             * newbufread  newbufwrite never fail             * add bufreadwrite          io:             * add io.close          http  google/net/rpc:             * add  use http.conn.hijack          r=r     delta=416  (202 added  123 deleted  91 changed)     ocl=24153     cl=24238 ,0,1,1
590,590,1873,    fix: autoprefixer is now working (#16351)          the autoprefixer not working broke the phantomjs backend png rendering          fixes #16345 ,1,0,0
591,591,794,    [patch] ppc highmem fix          i've noticed that the calculations for seg_size and nr_segs in     __dma_sync_page_highmem() (arch/ppc/kernel/dma-mapping.c) are wrong.  the     incorrect calculations can result in either an oops or a panic when running     fsck depending on the size of the partition.          the problem with the seg_size calculation is that it can result in a,1,0,0
592,592,1752,    [react-interactions] fix memory leak in event responder system (#17421) ,1,0,0
593,593,809,    fix some tests to prevent jmx registration issues ,1,0,0
594,594,140,    [arm] 3231/1: mx1ads board support cleanup          patch from sascha hauer          - remove unnecessary mappings     - rename mx1ads_device to cs89x0_device  because       that's what it is     - fix io/irq resource for cs89x0 device          signed-off-by: sascha hauer <s.hauer@pengutronix.de>     signed-off-by: russell king <rmk+kernel@arm.linux.org.uk> ,0,0,1
595,595,1286,    fixed swift interop issue that prevented returning a nil nsurl for a download task          fix for #3104 and #3043 ,1,0,0
596,596,1123,    [split] fix tracing with stack server/clients          problem          how and where finagle initializes a its tracing infrastructure is     unlcear and difficult to reason about. each codec is charged with     decoding trace info  pushing the tracer  tracing send/recv events  and     service name annotations. this caused issues where traces were recorded     before a tracer w,1,0,0
597,597,68,    asoc: sun4i-codec: add fm playback volume  fm left  fm right  fm playback switch          add fm playback volume for allwinner a10 and allwinner a20.     add fm left  fm right  fm playback switch for allwinner a10 and     allwinner a20.          signed-off-by: danny milosavljevic <dannym@scratchpost.org>     reviewed-by: chen-yu tsai <wens@csie.org>     signed-off-by: mark brow,0,1,0
598,598,310,    cmd/go: add env -w and env -u to set and unset default env vars          setting environment variables for go command configuration     is too difficult and system-specific. this cl adds go env -w      to change the default settings more easily  in a portable way.     it also adds go env -u  to unset those changes.          see https://golang.org/design/30411-env for details.  ,0,1,1
599,599,780,    removed pointless memory allocation checks. ,0,0,1
600,600,1532,"    arm: mxc: clean up imx-dma device registration          the patch follows the implementation of gpio-mxc device registration     to break the concentrated imx-dma device registration into soc     specific setup function.  then we can avoid the churn of ""#ifdef""     and the cpu_is_mx checking on such a long list  which makes no sense      considering more soc supports need to be",0,0,1
601,601,563,    ethernet/qlogic: use core min/max mtu checking          qede: min_mtu 46  max_mtu 9600     - put define for max in qede.h          qlcnic: min_mtu 68  max_mtu 9600          cc: netdev@vger.kernel.org     cc dept-gelinuxnicdev@qlogic.com     cc: yuval mintz <yuval.mintz@qlogic.com>     cc: ariel elior <ariel.elior@qlogic.com>     signed-off-by: jarod wilson <jarod@redhat.com>   ,0,0,1
602,602,829,    default to unicast discovery  with default host list of 127.0.0.1  [::1]     fix unicast discovery to work when a host has multiple addresses.     ban dangerous methods in java.net with forbidden apis.     fix ipv6 bugs and formatting of network addresses everywhere.          closes #12999     closes #12993          squashed commit of the following:          commit 6c1aa001d091,1,0,0
603,603,1010,    [client] remove unnecessary intermediate interfaces          client  clusteradminclient and indicesadminclient had corresponding     intermediate `internal` interfaces that are unnecessary and cause     a lot of casting. this commit removes the intermediate interfaces     and uses the super interfaces directly.          this commit also adds releaseable to `node` and `client` i,0,0,1
604,604,1612,    rename the primary key index when renaming a table in pg          also checked to make sure this does not affect foreign key constraints.     (it doesn't).          fixes #12856     closes #14088 ,1,0,0
605,605,462,    asoc: dapm: allow dapm registers to be 31 bit          supports larger register maps  not using unsigned ints for the full 32     bit as we rely on checking for negative registers.          signed-off-by: mark brown <broonie@opensource.wolfsonmicro.com>     acked-by: liam girdwood <lrg@ti.com> ,0,1,0
606,606,619,    remove unnecessary ls code. ,0,0,1
607,607,206,    cxgb4: distinguish between 1-lane kr/kx and 4-lane kr/kx/kx4 ports          and fix the supported flags ethtool reports for the two cases.          signed-off-by: dimitris michailidis <dm@chelsio.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
608,608,1242,    down integrate to github (#6414)          * down integrate to github          * fix broken tests ,1,0,0
609,609,1718,    [scsi] mptbase: fix use-after-free's          ioc->name is used in the printk's after ioc has been freed.  free     after prinks to fix this.          this patch fixes two use-after-free's introduced by     commit e78d5b8f1e73ab82f3fd041d05824cfee7d83a2c and spotted by the     coverity checker.          signed-off-by: adrian bunk <bunk@kernel.org>     signed-off-by: james botto,1,0,0
610,610,1181,    add polyfill for testcase::createmock() ,0,1,0
611,611,1809,    +str #15218 add mapfuture operator ,0,1,0
612,612,845,    mm: memcg: only check for pageswapcache when uncharging anon          only anon pages that are uncharged at the time of the last page table     mapping vanishing may be in swapcache.          when shmem pages  file pages  swap-freed anon pages  or just migrated     pages are uncharged  they are known for sure to be not in swapcache.          signed-off-by: johannes weiner <hann,0,0,1
613,613,961,    mac80211: rework locking for txq scheduling / airtime fairness          holding the lock around the entire duration of tx scheduling can create     some nasty lock contention  especially when processing airtime information     from the tx status or the rx path.     improve locking by only holding the active_txq_lock for lookups / scheduling     list modifications.          sign,0,0,1
614,614,1305,    refactor: remove some facades (#12335) ,0,0,1
615,615,726,    drm/i915: use uncached writes in pwrite          it's around 20% faster.          tested-by: chris wilson <chris@chris-wilson.co.uk>     reviewed-by: chris wilson <chris@chris-wilson.co.uk>     signed-off-by: daniel vetter <daniel.vetter@ffwll.ch> ,0,0,1
616,616,28,    teach --histogram to diff          port jgit's histogramdiff algorithm over to c. rough numbers (todo) show     that it is faster than its --patience cousin  as well as the default     meyers algorithm.          the implementation has been reworked to use structs and pointers      instead of bitmasks  thus doing away with jgit's 2^28 line limit.          we also use xdiff's def,0,1,1
617,617,32,    silgen: remaining fixes for @callee_guaranteed closures and enable it          - fix block to func reabstraction thunks block argument handling     - forward cast ownership     - fix applypartiallyappliedsupermethod ownership for @callee_guaranteed closures     - avoid a copy in buildblocktofuncthunkbody     - update tests for callee_guaranteed closures          sr-5441     rda,1,0,0
618,618,757,    fix typos.  improve text_helper documentation.          [ci skip] ,1,0,0
619,619,1008,"    port pr#6860 lexically check calling super before this          update baselines          add baselines          update baseline          port pr #6860 lexically check calling super before this     check using ""super"" before ""this"" lexically instead of using the     nodecheckflags          remove ""type-checking"" way of checking if super is used before this.     instead check us",0,1,1
620,620,1891,    transport agnostic kestrel refactoring (#1551)          - add transport interfaces     - create separate core and libuv projects          #828 ,0,1,0
621,621,75,    some improvements (#846)          * #833: do not require sudo on travisci          * #n/a: add python dev releases to travisci pipeline          inspired by brett cannon's advise [1].              1: https://snarky.ca/how-to-use-your-project-travis-to-help-test-python-itself/          * #837: try and kill proc and its children          * #n/a: show shell information on `thefuck,0,1,1
622,622,999,    sema: don't introduce errortype when an associated type is witnessed by an objective-c generic parameter          in general it's fine to emit a diagnostic but leave the conformance     valid here  we're not going to go on to emit code  and an errortype     here causes other diagnostics to be not be emitted in a test due     to minor validation order perturbations. ,0,0,1
623,623,1523,    util: fixes type in argument type validation error          pr-url: https://github.com/nodejs/node/pull/25103     reviewed-by: luigi pinca <luigipinca@gmail.com>     reviewed-by: anna henningsen <anna@addaleax.net> ,1,0,0
624,624,1308,"    common: fix golint errors          common/errors/errors.go:21:1: comment on exported var featurenotavailableerr should be of the form ""featurenotavailableerr ...""     common/errors/errors.go:23:5: error var featurenotavailableerr should have name of the form errfoo     common/maps/scratch.go:76:1: comment on exported method scratch.delete should be of the form ""delete ...""     ",1,0,0
625,625,1723,    miscellaneous cleanup  mostly fighting with feature warnings ,0,0,1
626,626,1955,    backend and ssl! (#6220)          * ssl_backend begin of the encryptation of backend!          * ssl_backend changing opentsdb!          * ssl_backend fix http message with json!          * ssl_backend http api done!          * ssl_fix_format preparing to connect with proxy!          * ssl_backend wip ssl send/receive !          * ssl_backend working with proxy          * ssl_b,1,0,1
627,627,1996,    3.x: refactor to io.reactivex.rxjava3.** (#6621)          * 3.x: refactor to io.reactivex.rxjava3.**          * fix javadoc cleanup gradle          * javadoc gradle again          * fix package location in text ,1,0,1
628,628,623,    fixed endian bug in dawg reader  added word bigram correction           git-svn-id: https://tesseract-ocr.googlecode.com/svn/trunk@649 d0cd1f9f-072b-0410-8dd7-cf729c803f20 ,1,0,0
629,629,271,    net: more accurate ip address validation and ipv6 dotted notation.          * added isip method to make use of inet_pton to cares_wrap.cc     * modified net.isip() to make use of new c++ isip method.     * added new tests to test-net-isip.js. ,0,1,1
630,630,1540,    enable optional lvalues.          this causes a regression in error reporting where there are potential fixes: <rdar://problem/17741575> other than that  everything works.          swift svn r20230 ,1,1,0
631,631,277,    fix illuminate\contracts null arguments in docblocks ,1,0,0
632,632,181,    fix(parser): detect and report interpolation in expressions          fixes #3645          closes #3750 ,1,0,0
633,633,948,    usb: serial: remove usb_serial_probe call in all drivers          this is now set by the usb-serial core  no need for the driver to     individually set it.          thanks to alan stern for the idea to get rid of it.          cc: william greathouse <wgreathouse@smva.com>     cc: matthias bruestle and harald welte <support@reiner-sct.com>     cc: lonnie mendez <dignome@gmail.co,0,0,1
634,634,1679,    feat(language-service): provide completion for $event variable (#34566)          this commit adds a completion for the `$event` variable in bound event     expressions.          this is the first in a series of prs to support completions for     properties on `$event` variables (https://github.com/angular/vscode-ng-language-service/issues/531).          pr close #34566 ,0,1,0
635,635,1992,    fixed streaming testsuite bugs ,1,0,0
636,636,2022,    features/step_definitions: use $stderr instead of stderr          fixes https://github.com/jekyll/jekyll/commit/c273d91df13227f04908198ff91df01cf7c2d284#commitcomment-15251676 ,1,0,0
637,637,180,    security: remove ssl settings fallback (#36846)          this commit removes the fallback for ssl settings. while this may be     seen as a non user friendly change  the intention behind this change     is to simplify the reasoning needed to understand what is actually     being used for a given ssl configuration. each configuration now needs     to be explicitly specified as t,0,0,1
638,638,1397,    input: implement new force feedback interface          implement a new force feedback interface  in which all non-driver-specific     operations are separated to a common module. this includes handling effect     type validations  locking  etc.          the effects are now file descriptor specific instead of the previous strange     half-process half-fd specific behaviour. the ,0,1,0
639,639,231,    [build system: build-script] remove the dumb assertnotraises test method which does less than nothing as it produces right-ward drift without any meaningful semantic benefit. ,0,0,1
640,640,689,    improve bug report wiki page text.          fixes homebrew/homebrew#12674. ,1,0,0
641,641,1944,    fix imports ,1,0,0
642,642,100,    convert danglingonly to filters for `docker image prune`          this fix convert danglingonly in imagespruneconfig to filters      so that it is possible to maintain api compatibility in the future.          several integration tests have been added to cover changes.          this fix is related to 28497.          a follow up to this pr will be done once this pr is merged.   ,1,0,0
643,643,1132,    [type checker] introduce directional path consistency algorithm          dpc algorithm tries to solve individual sub-expressions and combine     resolved types as a way to reduce pre-existing osr domains. solving     is done bottom-up so each consecutive sub-expression tightens     possible solution domain even further. ,0,1,0
644,644,770,    blk-mq: add ->init_request and ->exit_request methods          the current blk_mq_init_commands/blk_mq_free_commands interface has a     two problems:           1) because only the constructor is passed to blk_mq_init_commands there         is no easy way to clean up when a comman initialization failed.  the         current code simply leaks the allocations done in the construc,1,1,0
645,645,1731,    remove duplicated function ,0,0,1
646,646,1859,    regenerated functionn  abstractfunctionn  etc.          to properly specialize on primitive types (scala.int  instead of     scala.runtime.int). now closures should be indeed specialized. no     review. ,0,0,1
647,647,1511,    performance bug  in hash table splitter fixed  ...          performance bug in hash table splitter fixed  where size map was not     used and all the elements were counted instead.          performance tests now pass.          no review ,1,0,1
648,648,575,    [spark-15552][sql] remove unnecessary private[sql] methods in sparksession          ## what changes were proposed in this pull request?     sparksession has a list of unnecessary private[sql] methods. these methods cause some trouble because private[sql] doesn't apply in java. in the cases that they are easy to remove  we can simply remove them. this patch does that.          a,0,0,1
649,649,1557,    add option to hide context menu for textinput #17335          summary:     <!--     thank you for sending the pr! we appreciate you spending the time to work on these changes.          help us understand your motivation by explaining why you decided to make this change.          you can learn more about contributing to react native here: http://facebook.github.io/react-native/d,0,1,0
650,650,1400,"    [sk_buff]: introduce skb_reset_mac_header(skb)          for the common  open coded 'skb->mac.raw = skb->data' operation  so that we can     later turn skb->mac.raw into a offset  reducing the size of struct sk_buff in     64bit land while possibly keeping it as a pointer on 32bit.          this one touches just the most simple case  next will handle the slightly more     ""compl",0,1,0
651,651,818,    organize imports with new settings          see gh-4234 ,0,1,0
652,652,1202,    fix inconsistent return points. ,1,0,0
653,653,1565,    alsa: firewire-lib: add a quirk of packet without valid eoh in cip format          in iec 61883-1  when two quadlets cip header is used  the most significant     bit in second cip header stands. however  packets from units with motu     protocol version 3 have a quirk without this flag. current packet streaming     layer handles this as protocol error.          this commit adds,0,1,0
654,654,513,    refactor gitlab:import:repos task to remove direct disk access ,0,0,1
655,655,1775,    fix terminal workspace shell/args ,1,0,0
656,656,1616,    [xfs] add a debug flag for allocations which are known to be larger than     one page.          sgi-pv: 955302     sgi-modid: xfs-linux-melb:xfs-kern:26800a          signed-off-by: nathan scott <nathans@sgi.com>     signed-off-by: tim shimmin <tes@sgi.com> ,0,1,0
657,657,6,    remove all unused imports and fix crlf (#31207)          the x-pack opening and the recent other refactorings left a lot of     unused imports in the codebase. this commit removes them all. ,1,0,0
658,658,1078,    fixed cs ,1,0,0
659,659,704,    cs fixes  refs #2750 ,1,0,0
660,660,1046,    fix gif disappear when return from background          summary:     gif image will disappear after press the home button and return back.     set `removedoncompletion` to be`false` will fix  all `caanimation` disappear like stopping after going into the background.     closes https://github.com/facebook/react-native/pull/7612          differential revision: d3481403          fb,1,0,0
661,661,791,    drop outdated definitions from internal.hpp          this also fixes few clang build errors ,1,0,1
662,662,1422,    remote-svn  vcs-svn: enable fetching to private refs          the reference to update by the fast-import stream is hard-coded.  when     fetching from a remote the remote-helper shall update refs in a     private namespace  i.e. a private subdir of refs/.  this namespace is     defined by the 'refspec' capability  that the remote-helper advertises     as a reply to the 'capabil,0,0,1
663,663,1441,    - seriously optimize and clean php_parse_gpc_data()     - added gpc_globals directive to turn global definitions of gpc variables on/off     (untested) ,0,1,1
664,664,969,    [alsa] semaphore -> mutex (pci part)          semaphore to mutex conversion.          the conversion was generated via scripts  and the result was validated     automatically via a script as well.          signed-off-by: ingo molnar <mingo@elte.hu>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: takashi iwai <tiwai@suse.de> ,1,0,1
665,665,541,    suppress error for bad implementations of comparable          relnotes=n/a          -------------     created by moe: https://github.com/google/moe     moe_migrated_revid=236248361 ,1,0,0
666,666,1429,"    net: sched: act_pedit: fix possible memory leak in tcf_pedit_init()          'keys_ex' is malloced by tcf_pedit_keys_ex_parse() in tcf_pedit_init()     but not all of the error handle path free it  this may cause memory     leak. this patch fix it.          fixes: 71d0ed7079df (""net/act_pedit: support using offset relative to the conventional network headers"")     signed-off-by",1,0,0
667,667,1153,    usb: convert drivers/net/* to use module_usb_driver()          this converts the drivers in drivers/net/* to use the     module_usb_driver() macro which makes the code smaller and a bit     simpler.          added bonus is that it removes some unneeded kernel log messages about     drivers loading and/or unloading.          cc: wolfgang grandegger <wg@grandegger.com>     cc: sa,0,0,1
668,668,1811,    [spark-13221] [sql] fixing groupingsets when aggregate functions containing groupby columns          using groupingsets will generate a wrong result when aggregate functions containing groupby columns.          this pr is to fix it. since the code changes are very small. maybe we also can merge it to 1.6          for example  the following query returns a wrong result:     ```s,1,0,0
669,669,1173,    staging/lustre/ldlm: make ldlm_add_ast_work_item() static          now that ldlm_flock code no longer uses it.          signed-off-by: oleg drokin <green@linuxhacker.ru>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
670,670,1889,    tag: add repository argument to deref_tag          add a repository argument to allow the callers of deref_tag     to be more specific about which repository to act on. this is a small     mechanical change; it doesn't change the implementation to handle     repositories other than the_repository yet.          as with the previous commits  use a macro to catch callers passing a,0,1,0
671,671,938,    add inversed accessor to association class ,0,1,0
672,672,1898,    add table printer for cluster ,0,1,0
673,673,1180,    +htc  htp: small improvement to `httpmessage::withdefaultheaders` ,0,0,1
674,674,410,    rename core module to server (#28180)          this is related to #27933. it renames the core module to server. this is     the first step towards introducing an elasticsearch-core jar. ,0,1,1
675,675,466,    cmd/gc: restore stack frame debugging          dump frames of functions.     add function name and var width to output.          change-id: ida06b8def96178fa550ca90836eb4a2509b9e13f     reviewed-on: https://go-review.googlesource.com/3870     reviewed-by: russ cox <rsc@golang.org> ,0,1,0
676,676,1778,    lib/rand: break out random functions into separate package          the intention for this package is to provide a combination of the     security of crypto/rand and the convenience of math/rand. it should be     the first choice of random data unless ultimate performance is required     and the usage is provably irrelevant from a security standpoint.          github-pull-reque,0,0,1
677,677,880,    introduce integer set attribute          - add integersetattr to attributes; add parsing and other support for it       (builder  etc.).          piperorigin-revid: 218804579 ,0,1,0
678,678,386,    i40e: properly delete vf mac filters          the virtual channel interface was using incorrect semantics to remove     mac addresses  which would leave incorrect filters active when using     vlans. to correct this  add a new function that unconditionally removes     mac addresses from all vlans  and call this function when the vf     requests a mac filter removal.          ch,1,1,0
679,679,1748,    spi: omap2-mcspi: restore context always in runtime_resume          we can have the soc enter off mode also during idle  not just     during suspend. currently we are handling the cs restore properly     for unused cs only for resume and not for runtime resume.          let's just move all the context related restore to runtime_resume().          signed-off-by: tony lindgren <t,0,0,1
680,680,1314,    fix pairing of awaiting users ,1,0,0
681,681,1538,"    [split] redis codec parses case-insensitive commands currently when using the redis codec in a server  it throws a clienterror for any incoming commands that aren't all uppercase -- for example ""get"" is ok but ""get"" is not.  some redis clients  including the ruby [redis-rb](https://github.com/redis/redis-rb) client  send commands in lowercase. github-pull-request: https://githu",1,0,0
682,682,395,    branch 174861804 (#14326)          * add importgraphdeftest.testmultipleimport to importer_test.py          this tests the name deduping behavior of import_graph_def. this     behavior is actually defined by the op creation logic  not     import_graph_def  but i added a test here since the c++ importgraphdef     function must emulate it (and presumably we'd like to maintain the,0,1,0
683,683,614,    update headers from 2018 to 2019 once for all. (#26165)          * add copyrightheader support for sbt-boilerplate plugin.     * add copyrightheader support for `*.proto` files.     * add regex match for both `â` and `-` for copyrightheader.     * add copyrightheader support for sbt build files.     * update copyright from 2018 to 2019. ,0,1,0
684,684,933,    add support for cluster state diffs          adds support for calculating and sending diffs instead of full cluster state of the most frequently changing elements - cluster state  meta data and routing table.          closes #6295 ,0,1,0
685,685,135,    fix fishnet version validation ,1,0,0
686,686,792,    moved projectsystem from src\visualstudio\projectsystem -> src\projectsystem.          this is to better indicate that it's its own thing  separate to the visual studio integration of     roslyn. ,0,0,1
687,687,788,    refactor usage of namedexpression (#49693)          to recap  attributes form the properties of a derived table.     each logicalplan has attributes as output since each one can be part of a     query and as such its result are sent to its consumer.     this change essentially removes the name id comparison so any changes     applied to existing expressions should work as long ,0,0,1
688,688,1197,"    for all of //java/com/google/common/... and //javatests/com/google/common/...     -sort imports     -remove unused imports          g4 edit java/com/google/common/... javatests/com/google/common/...          g4 change          /home/build/[]/tools/java/remove_unused_imports.py --fix -c 27791544          g4 list -s 27791544  | sed ""s%//depot/[]/%%"" | xargs     /home/build/[]/too",1,0,1
689,689,94,    pager: set less=frsx also on windows          previously  this environment variable was set in the pager_preexec     callback  which is conditionally-compiled only on unix  because it is not      and cannot be  called on windows.          with this patch the env member of struct child_process is used to set     the environment variable  which also works on windows.          not,0,1,0
690,690,1492,    [fixes #4876] contentresult forcing chunked encoding ,1,0,0
691,691,1693,    [lexer] micro optimization for gettokenat()          lex() invokes leximpl(). it doesn't need to lex next token. ,0,0,1
692,692,841,    deprecate unused download strategies          download the unused  private download strategies. these are a better fit     for being declared in the formulae and/or taps that use them rather than     in homebrew/brew where they are unused by homebrew maintainers or     official taps/formulae. ,0,0,1
693,693,1764,    added methods iscompact and iscontiguous to bytestring          * the ability to check whether a bytestring is compact / contiguous       can be very useful when optimizing user code ,0,1,0
694,694,951,    fix python 3 syntax errors (en masse) ,1,0,0
695,695,226,    fix npe when `values` is omitted on percentile_ranks agg (#26046)          an array of values is required because there is no default (or     reasonable way to set a default).  but validation for values     only happens if it is actually set.  if the values param is omitted     entirely than the agg builder will npe. ,1,0,0
696,696,1816,    added means to lookup torrent infohashes to test the dht engine. ,0,1,0
697,697,1246,    feat(core): add `begin` and `end` renderer methods to track change detection ,0,1,0
698,698,610,    refactor(ivy): move instructions (#29646)          - moves all publicly exported instructions to their own files     - refactors namespace instructions to set state in `state.ts`     - no longer exports * from `instructions.ts`.     - `instructions.ts` renamed to `shared.ts` (old `shared.ts` contents folded in to `instructions.ts`)     - updates `all.ts` to re-export from publi,0,0,1
699,699,29,    reorganize source code in preparation to move into aspnet/aspnetcore          prior to reorganization  this source code was found in https://github.com/aspnet/dotnettools/tree/eba014d534ef34ea88ce6c3879b92743b825a7fe ,0,1,0
700,700,684,"    acpi / glue: add acpi_platform_notify() function          instead of relying on the ""platform_notify"" callback hook      introducing separate notification function     acpi_platform_notify() and calling that directly from     drivers core when device entries are added and removed.          signed-off-by: heikki krogerus <heikki.krogerus@linux.intel.com>     acked-by: linus wall",0,1,0
701,701,1241,"    revert ""ata: ahci-platform: add reset control support""          this reverts commit f0f56716fc3e5d547fd7811eb218a30ed0695605.          according to thierry's view      https://www.spinics.net/lists/linux-ide/msg55357.html     some hardware-specific drivers already use their own resets      and the common reset might make a path to occur double controls of resets.          for n",0,1,0
702,702,1083,    repairs the tests after the refactoring spree ,1,0,0
703,703,555,    adding theme.isdefault  fix editorselectionhighlightcolor ,1,0,0
704,704,556,    batman-adv: use common jenkins hash implementation          an unoptimized version of the jenkins one-at-a-time hash function is used     and partially copied all over the code wherever an hashtable is used.     instead the optimized version shared between the whole kernel should be     used to reduce code duplication and use better optimized code.          only the dat code mu,0,0,1
705,705,1449,    iommu/amd: implement iommuv2 tlb flushing routines          the functions added with this patch allow to manage the     iommu and the device tlbs for all devices in an iommuv2     domain.          signed-off-by: joerg roedel <joerg.roedel@amd.com> ,0,1,0
706,706,672,    fix typo          closes gh-3610 ,1,0,0
707,707,1585,    x86  kvm  vmx: don't set load_ia32_efer when host and guest match          there's nothing to switch if the host and guest values are the same.     i am unable to find evidence that this makes any difference     whatsoever.          signed-off-by: andy lutomirski <luto@amacapital.net>     [i could see a difference on nehalem.  from 5 runs:           userspace exit  guest!=host ,0,0,1
708,708,530,    regmap: regmap-irq/gpio-max77620: add level-irq support          add level active irq support to regmap-irq irqchip. change breaks     existing regmap-irq type setting. convert the existing drivers which     use regmap-irq with trigger type setting (gpio-max77620) to work     with this new approach. so we do not magically support level-active     irqs on gpio-max77620 - but add,0,1,0
709,709,27,    fix #4171 and a number of other transaction bugs ,1,0,0
710,710,1249,"    twl4030_charger: add software controlled linear charging mode.          add a 'continuous' option for usb charging which enables     the ""linear"" charging mode of the twl4030.          linear charging does a good job with not-so-reliable power sources.     auto mode does not work well as it switches off when voltage drops     momentarily.  care must be taken not to over-charge.",0,1,0
711,711,1904,    update carthage action for new-resolver option (#11191)          * update carthage action for new-resolver option          * fixed trailing comma          * set option type to boolean and added test          * trailing comma ,1,1,0
712,712,467,    [media] pwc: enable power-management by default on tested models          signed-off-by: hans de goede <hdegoede@redhat.com>     signed-off-by: mauro carvalho chehab <mchehab@redhat.com> ,0,0,1
713,713,1744,    make necessary changes after rebase  and add a test ,0,1,0
714,714,328,    :bug: fix input.password cannot get input element (#18441)          close #18412 ,1,0,0
715,715,409,    [tf:xla] remove re-initializations of literals          it's an antipattern to have:          auto x = literal::createfromshape(my_shape);     x->populate();          as that results in initialization followed by reinitialization. can be replaced     with:          auto x = makeunique<literal>(my_shape);     x->populate();          suggested-by: kay zhu <kayzhu@google.com>     ,0,0,1
716,716,1696,    re-arranging portable testutilities part 1          the testutilities project should be our portable unit test helper.  this is part one of rearranging our sources to reflect that reality.  i'm separating it out because it involves a significant code move that     will make the actual rework part harder to review. ,0,0,1
717,717,905,    address some more review feedback and fix one more break. ,1,0,0
718,718,657,    convert naming styles to a grid-based ui          this change also introduces specification and style management (deleting and editing).          also  fixes #14358 ,1,1,0
719,719,674,    fixed -scan ,1,0,0
720,720,707,    restore functionality to puppeteer url + fix tests ,1,0,0
721,721,1936,    crypto: inside-secure - added support for authenc hmac-sha1/des-cbc          this patch adds support for the authenc(hmac(sha1) cbc(des)) aead          changes since v1:     - rebased on top of des changes made to cryptodev/master          signed-off-by: pascal van leeuwen <pvanleeuwen@verimatrix.com>     signed-off-by: herbert xu <herbert@gondor.apana.org.au> ,0,1,1
722,722,1521,    sql: switch attribute resolution to oo (elastic/x-pack-elasticsearch#3433)          switch attribute resolution from tree matching to oo. adds     `processordefinition#resolveattributes` which subclasess implement to     rewrite themselves against a query. `attributeinput`s use this to     replace themselves with `referenceinput`s.          original commit: elastic/x-pack-elast,0,1,0
723,723,1128,    [gsb] filter out conformance constraints derived from concrete conformance.          when an otherwise abstract conformance constraint is derived from a     concrete conformance  retain the abstract conformance by removing the     requirement source that involves the concrete conformance. this     eliminates our reliance on the concrete conformance  which is not     retained as,0,0,1
724,724,764,    pm / qos: add type to dev_pm_qos_add_ancestor_request() arguments          rework dev_pm_qos_add_ancestor_request() so that device pm qos type     is passed to it as the third argument and make it support the     dev_pm_qos_latency_tolerance device pm qos type (in addition to     dev_pm_qos_resume_latency).          that will allow the drivers of devices without latency toleran,0,0,1
725,725,345,    issue 24594: integration with sbt-headers and initial header population ,1,0,0
726,726,1007,    incorporates kubernetes namespace into cluster's flow ,0,1,0
727,727,1224,    feature: delegate all open discussions to issue          when a merge request can only be merged when all discussions are     resolved. this feature allows to easily delegate those discussions to a     new issue  while marking them as resolved in the merge request.          the user is presented with a new issue  prepared with mentions of all     unresolved discussions  includi,0,1,1
728,728,498,    iwlagn: remove bootstrap code          only 4965 had a bootstrap microcode image  so     the agn driver can completely ignore that and     we can remove some code from it.          signed-off-by: johannes berg <johannes.berg@intel.com>     signed-off-by: wey-yi guy <wey-yi.w.guy@intel.com>     signed-off-by: john w. linville <linville@tuxdriver.com> ,0,0,1
729,729,56,    usb: serial: option: add support for simcom sim7500/sim7600 rndis mode          added ids for simcom sim7500/sim7600 series cellular module in rndis     mode. reserved the interface for adb.          t:  bus=03 lev=01 prnt=01 port=00 cnt=01 dev#=  7 spd=480 mxch= 0     d:  ver= 2.00 cls=00(>ifc ) sub=00 prot=00 mxps=64 #cfgs=  1     p:  vendor=1e0e prodid=9011 rev=03.18     s: ,0,1,0
730,730,444,    +str #15905 add capability to merge and connect flow graphs          * import edges of another flow graph to the builder     * connect undefined sink with undefined source  which may originate       from different flow graphs     * illustrate how this low level api can be used in a high level api       (lego bricks) ,0,1,0
731,731,1262,    [relnotes] allow symbolic tensors to be fed to models (with tf backend) (#10087)          * allow symbolic tensors to be fed to models (with tf backend)          * skip tensor feeding tests when tf>=1.8 not available. ,0,1,0
732,732,783,    crypto: make receiver name consistent          fixes go lint warning.          change-id: i63950e7c70bf431e88a04f32befd50be9beacadf     reviewed-on: https://go-review.googlesource.com/108815     reviewed-by: brad fitzpatrick <bradfitz@golang.org>     run-trybot: brad fitzpatrick <bradfitz@golang.org>     trybot-result: gobot gobot <gobot@golang.org> ,0,0,1
733,733,1253,    polish          closes gh-9827 ,0,0,1
734,734,371,    clk: stm32: fix out-by-one error path in the index lookup          if stm32f4_rcc_lookup() is called with primary == 0 and secondary == 192     then it will read beyond the end of the table array due to an out-by-one     error in the range check.          in addition to the fixing the inequality we also modify the r.h.s. to     make it even more explicit that we are comparing a,1,0,0
735,735,1892,    ipv6: shrink struct ipv6_mc_socklist          remove two holes on 64bit arches  to bring the size     to one cache line exactly.          signed-off-by: eric dumazet <edumazet@google.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
736,736,1745,    removed dead memory mangagement code          git-svn-id: https://tesseract-ocr.googlecode.com/svn/trunk@647 d0cd1f9f-072b-0410-8dd7-cf729c803f20 ,0,0,1
737,737,1578,    [patch] paravirt: add mmu virtualization to paravirt_ops          add the three bare tlb accessor functions to paravirt-ops.  most amusingly      flush_tlb is redefined on smp  so i can't call the paravirt op flush_tlb.     instead  i chose to indicate the actual flush type  kernel (global) vs. user     (non-global).  global in this sense means using the global bit in the page ,0,1,1
738,738,1278,    [type checker] eliminate most uses of partialgenerictypetoarchetyperesolver.          partialgenerictypetoarchetyperesolver is (eventually) going     away. isolate it's use to those places where we still rely on its odd     behavior. ,0,0,1
739,739,316,    fix(db) store connection in request-aware context          calling `db:connect()` used to store the connection in as an instance     attribute in `self`  therefore in a worker singleton (`kong.db`)  which     would produce `bad request` errors when used at runtime (i.e.     non-migration contexts).          this error presents itself when within the `plugins:select_by_cache_key,1,0,0
740,740,1911,"    objtool: rename some variables and functions          rename some list heads to distinguish them from hash node heads  which     are added later in the patch series.          also rename the get_*() functions to add_*()  which is more descriptive:     they ""add"" data to the objtool_file struct.          also rename rodata_rela and text_rela to be clearer:     - text_rela refers",0,0,1
741,741,571,    painless: move some lookup logic to painlesslookup (#32565)          renames existing methods in painlesslookup. adds lookuppainlessclass      lookuppainlessmethod  and lookuppainlessfield to painlesslookup. this consolidates     the logic necessary to look these things up into a single place and begins the clean up of     some of the nodes that were looking each of these thing,0,1,1
742,742,1334,    parisc/uapi: add definition of tioc[sg]rs485          commit: e676253b19b2d269cccf67fdb1592120a0cd0676 (serial/8250: add     support for rs485 ioctls)  adds support for rs485 ioctls for 825_core on     all the archs. unfortunaltely the definition of tiocsrs485 and     tiocgrs485 was missing on the ioctls.h file          signed-off-by: ricardo ribalda delgado <ricardo.ribalda@gm,1,1,0
743,743,1754,    [qt] new status bar unit display control and related changes.          - new status bar control shows the current unit of display.       when clicked (left or right button) it shows a context menu       that allows the user to switch the current unit of display (btc  mbtc  ubtc)     - recent requests and transaction table headers are now updated when       unit of display is ch,0,1,0
744,744,691,    [split] finagle-core: add basic scaladocs for all filters and services          rb_id=275101 ,0,1,0
745,745,1105,    add indexresponse to update and create alert responses.          this commit adds the indexresponse if available to the update and create     alert response objects.          original commit: elastic/x-pack-elasticsearch@5fed850c61329a65e9024451fe407c87a564db22 ,0,1,0
746,746,157,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/mvc/tree/a6199bbfbab05583f987bae322fb04566841aaea ,0,0,1
747,747,468,    drm/i915: move flags describing vma mappings into the vma          if these flags are on the object level it will be more difficult to allow     for multiple vmas per object.          v2: simplification and cleanup after code review comments (chris wilson).          signed-off-by: tvrtko ursulin <tvrtko.ursulin@intel.com>     cc: chris wilson <chris@chris-wilson.co.uk>     revi,0,0,1
748,748,842,    fix asl header in source files to reflect s/elasticsearch/elasticsearch          this commit also removes the license to shay banon in favor of soley     elasticsearch. thanks shay for this awesome product you took it far!          closes #4636 ,1,0,0
749,749,389,    refactor extensions and utilities in workspaces layer into shared projects          extracts out the changes to core workspace changes from https://github.com/dotnet/roslyn/pull/41363. ,0,0,1
750,750,939,    [spark-5817] [sql] fix bug of udtf with column names          it's a bug while do query like:     ```sql     select d from (select explode(array(1 1)) d from src limit 1) t     ```     and it will throws exception like:     ```     org.apache.spark.sql.analysisexception: cannot resolve 'd' given input columns _c0; line 1 pos 7     at org.apache.spark.sql.catalyst.analysis.packa,1,0,0
751,751,1802,    [media] v4l: add support for integer menu controls with standard menu items          the patch modifies the helper function v4l2_ctrl_new_std_menu     to accept integer menu controls with standard menu items.          signed-off-by: sylwester nawrocki <s.nawrocki@samsung.com>     signed-off-by: arun kumar k <arun.kk@samsung.com>     acked-by: hans verkuil <hans.verkuil@cisco.co,0,1,0
752,752,1709,    [bs-167] fixed yamlprocessor to not create a key for an array          [fixes #51968679] yamlpropertiesfactorybean creates unbindable keys     (the tostring() of the whole map for instance) ,1,0,0
753,753,1785,    [scsi] bfa: make changes to fcxp resource management.          - made changes to split fcxp resources as request and response resources.     - the split will reduce the contention for fcxp resources in an open zone       config.          signed-off-by: krishna gudipati <kgudipat@brocade.com>     signed-off-by: james bottomley <jbottomley@parallels.com> ,0,0,1
754,754,1272,    addressing some assignment issues. ,1,0,0
755,755,1435,    [mtd] [nor] cfi_cmdset_0002.c: fix 'cfi_amdstd_erase_varsize' to be static          make cfi_amdstd_erase_varsize static  as declared at the top     of the file to ensure sparse does not print a warning for an     undeclared function  as so:          drivers/mtd/chips/cfi_cmdset_0002.c:1612:5: warning: symbol 'cfi_amdstd_erase_varsize' was not declared. should it be static?    ,1,0,0
756,756,1763,    stmmac: use one memset() to reset tdes01          use one memset() to reset all tdes01 fields instead     of one by one to reduce number of instructions.          signed-off-by: giuseppe cavallaro <peppe.cavallaro@st.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
757,757,1048,    tty: serial: 8250: fix type field in format string          the dev_dbg statement should print the value of uart.port.mapbase instead     of its address. besides that  uart.port.irq and uart.port.iotype are all     unsigned types  so using %u is more appropriate.          signed-off-by: hao lee <haolee.swjtu@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundati,1,0,0
758,758,211,    block: split out request-only flags into a new namespace          a lot of the req_* flags are only used on struct requests  and only of     use to the block layer and a few drivers that dig into struct request     internals.          this patch adds a new req_flags_t rq_flags field to struct request for     them  and thus dramatically shrinks the number of common requests.  it,0,0,1
759,759,1289,    test: remove unused catch bindings          pr-url: https://github.com/nodejs/node/pull/24079     reviewed-by: sam roberts <vieuxtech@gmail.com>     reviewed-by: wyatt preul <wpreul@gmail.com> ,0,0,1
760,760,1890,    m68k: remove the dead pci code          this patch removes the no longer used m68k pci code.          signed-off-by: adrian bunk <bunk@kernel.org>     signed-off-by: geert uytterhoeven <geert@linux-m68k.org>     signed-off-by: linus torvalds <torvalds@linux-foundation.org> ,0,0,1
761,761,365,"    ide: add ->cable_detect method to ide_hwif_t          * add ->cable_detect method to ide_hwif_t.          * call the new method in ide_init_port() if:       - the host supports udma modes > udma2 ('hwif->ultra_mask & 78')       - dma initialization was successful (if hwif->dma_base is not set         ide_init_port() sets hwif->ultra_mask to zero)       - ""idex=ata66"" is not use",0,1,1
762,762,1571,    opencl: remove unused function getnumdevicewithemptyscore          this fixes compiler warnings.          signed-off-by: stefan weil <sw@weilnetz.de> ,0,0,1
763,763,1430,    block: integrity checkpatch cleanups          > 80 char lines and that sort of thing.          signed-off-by: jens axboe <jens.axboe@oracle.com> ,0,0,1
764,764,215,    feat(compiler): integrate compiler with view engine - main integration tests work (#14284)          part of #14013          pr close #14284 ,0,1,0
765,765,203,    silgen: uncurry function applications.          reference and call uncurried function applications when appropriate to the call site  following the same logic implemented in callemission/calleesource in irgen. add classmethodinst and supermethodinst instructions to represent method and super dispatch. change how closures and closureinst are represented in sil so that closures a,0,1,1
766,766,450,    preempt: make preempt_active generic          no point in having this bit defined by architecture.          signed-off-by: thomas gleixner <tglx@linutronix.de>     acked-by: peter zijlstra <peterz@infradead.org>     link: http://lkml.kernel.org/r/20130917183629.090698799@linutronix.de ,0,0,1
767,767,1722,    exp/locale/collate: changed api of builder to be more convenient     for dealing with cldr files:     - add now taxes a list of indexes of colelems that are variables. checking and       handling is now done by the builder.  variabletop is now also properly generated       using the build method.     - introduced separate builder  called tailoring  for creating tailorings of ro,0,1,1
768,768,849,    backend plugins: provide proper plugin config to plugins (#21985)          properly provides plugin configs to backend plugins.     uses v0.16.0 of grafana-plugin-sdk-go-          ref #21512     ref #19667 ,1,0,0
769,769,592,    fix failing test. ,1,0,0
770,770,1076,    powerpc: add an in memory udbg console          this patch adds a new udbg early debug console which utilises     statically defined input and output buffers stored within the kernel     bss. it is primarily designed to assist with bring up of new hardware     which may not have a working console but which has a method of     reading/writing kernel memory.          this version,0,1,0
771,771,25,    [stdlib] remove non-obvious conditional hashable conformances          this removes hashable conformance for types that do not already implement equatable:          - collectionofone     - anycollection     - dictionaryliteral ,0,0,1
772,772,1733,    [propertyinfo] added support for extract type from default value ,0,1,0
773,773,420,    tensor tracer: adding full-tensor summary writing capability to tensor tracer.          piperorigin-revid: 262667826 ,0,1,0
774,774,1164,    improve bridge flow types (#352)          * updated local fork of react-window     * updated fow 97 -> 103     * lint ignore npm dist     * improved bridge flow types ,0,0,1
775,775,1945,    various improvements to sip 18 diagnostics. made scala library and compiler feature clean. ,0,0,1
776,776,918,    chore: fix linting after shell rename ,1,0,0
777,777,1719,    asoc: rsnd: tidyup debug print position on rsnd_dma_attach()          it can't output corrent dma name *before* rsnd_mod_init().     it goes to *after* rsnd_mod_init() by this patch          signed-off-by: kuninori morimoto <kuninori.morimoto.gx@renesas.com>     signed-off-by: mark brown <broonie@kernel.org> ,1,0,0
778,778,1111,    usb: cdc-wdm: implement ioctl_wdm_max_command          userspace applications need to know the maximum supported message     size.          the cdc-wdm driver translates between a character device stream     and a message based protocol.  each message is transported as a     usb control message with no further encapsulation or syncronization.     each read or write on the chara,0,1,0
779,779,1130,    deletes trailing whitespaces (over text files only find * -type f -exec sed 's/[ \t]*$//' -i {} \;) ,0,0,1
780,780,278,    use nameof() instead of hard coded strings ,0,0,1
781,781,774,    remove debugger support          bebugger doesn't work with ruby 2.2 so we don't need to support it     anymore ,0,0,1
782,782,693,    refactored other phpunit method calls to work with namespaced phpunit 6 ,0,0,1
783,783,74,"    [patch] ext3 resize: fix double unlock_super()          from: andrew morton <akpm@osdl.org>          spotted by jan capek <jca@sysgo.com>          cc: ""stephen c. tweedie"" <sct@redhat.com>     cc: andreas dilger <adilger@clusterfs.com>     cc: jan capek <jca@sysgo.com>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ",1,0,0
784,784,1613,    add deployment to federation clientset ,0,1,0
785,785,1122,    crypto: add outputlength option to crypto.createhash          this change adds an outputlength option to crypto.createhash which     allows users to produce variable-length hash values using xof hash     functons.          fixes: https://github.com/nodejs/node/issues/28757     pr-url: https://github.com/nodejs/node/pull/28805     reviewed-by: anna henningsen <anna@addaleax.net>,1,1,0
786,786,1419,    update go-etcd client library version and add ugorji codec to dependencies ,0,1,0
787,787,332,    drm/nouveau/imem: improve management of instance memory          signed-off-by: ben skeggs <bskeggs@redhat.com> ,0,0,1
788,788,759,    watcher: adhere to new licensing requirements          * basic license equlas disabling     * trial/gold/platinum: everything is allowed     * on expiry: actions of watches do not execute  put/get on watches is disabled          closes elastic/elasticsearch#688          original commit: elastic/x-pack-elasticsearch@7017c62136abedd92fe7c8745f8a1d72194cfd55 ,0,1,0
789,789,1956,    ext4: clean up s_dirt handling          we don't need to set s_dirt in most of the ext4 code when journaling     is enabled.  in ext3/4 some of the summary statistics for # of free     inodes  blocks  and directories are calculated from the per-block     group statistics when the file system is mounted or unmounted.  as a     result the superblock doesn't have to be updated  ei,0,0,1
790,790,1012,    dtc: mark various internal functions static          signed-off-by: josh triplett <josh@joshtriplett.org> ,0,0,1
791,791,472,    net/mlx4: prepare vlan macros for 802.1ad hardware accelerated support          to add hardware accelerated support in 802.1ad vlan  replace     current vlan macros to cvlan.     replace:     mlx4_wqe_ctrl_ins_vlan     mlx4_cqe_vlan_present_mask     with:     mlx4_wqe_ctrl_ins_cvlan     mlx4_cqe_cvlan_present_mask          signed-off-by: hadar hen zion <hadarh@mellanox.com>    ,0,1,1
792,792,1003,    drm/nvd0/disp: move hda codec setup to core          signed-off-by: ben skeggs <bskeggs@redhat.com> ,0,0,1
793,793,621,    drm/nouveau: fix leak of gart mm node          signed-off-by: ben skeggs <bskeggs@redhat.com> ,1,0,0
794,794,1325,    feature: new site setting show_inactive_accounts ,0,1,0
795,795,789,    bump prettier version (#15532)          * fix prettier version to 1.16.4 ,1,0,0
796,796,940,    feat(db) move consumers from kong.dao to kong.db using dao wrapper (#3437)          * feat(db) add utilities for interaction between new and old dao          * on the old dao side (`kong.dao`)  this adds some utilities that are       needed later for relationships between old-dao and new-dao entities        once consumers are moved into the new dao.     * on the new dao side (`,0,1,0
797,797,1632,    tools: update icu to 65.1          update the version of the bundled icu (deps/icu-small) to icu version     65.2.          fixes: https://github.com/nodejs/node/issues/30211     fixes: https://github.com/nodejs/node/issues/29540          pr-url: https://github.com/nodejs/node/pull/30232     reviewed-by: steven r loomis <srloomis@us.ibm.com>     reviewed-by: michael dawson <mic,1,0,0
798,798,934,    key bindings; more tweaks and fixes.          miscellaneous fixes and tweaks  including:          - reinstate key logging.     - fix count handling in line with expected behaviour in #2024.     - remove `nocount` option; we don't need it.     - simplify logic in various places.          fixes #2024. ,1,0,1
799,799,1840,    fix unittesting our `.xaml` classes (#4105)          ## summary of the pull request          new year  new unittests.          this pr introduces a new project  `testhostapp`. this project is largely taken from the taef samples  and allows us to easily construct a helper executable and `resources.pri` for running terminalapp unittests.          ## references          ## pr chec,1,1,0
800,800,1698,    added iterationmode switch  consolidate some tests  cleanup ,0,1,1
801,801,1350,    kubelet: implement getpodcontainerid for new runtime api ,0,1,0
802,802,55,    [scsi] zfcp: whitespace cleanup          cleanup the whitepace from the entire zfcp driver to prevent     to have those changes in future feature or function patches.          signed-off-by: swen schillig <swen@vnet.ibm.com>     signed-off-by: james bottomley <james.bottomley@steeleye.com> ,0,0,1
803,803,414,    fix ivar names and add reader methods ,1,1,0
804,804,577,    fixed contribution #650 in mutable.map.getorels...          fixed contribution #650 in mutable.map.getorelseupdate ,1,0,0
805,805,1439,    updates from tuesday  march 3rd          - [reactnative] fix oss projects | spencer ahrens <sahrens@fb.com>     - [react-packager] check-in node_modules and update tests | amjad masad <amasad@fb.com>     - [react-packager] cleanup package.json | amjad masad <amasad@fb.com>     - [react-packager] implement bundle minification | amjad masad <amasad@fb.com>     - [react-packager] ,1,1,1
806,806,736,    [patch] usbatm: semaphore to mutex conversion          this is the usbatm part of the arjan  jes and ingo     mass semaphore to mutex conversion  reworked to apply on top     of the patches i just sent to you.  this time  with correct     attribution and signed-off lines.          signed-off-by: arjan van de ven <arjan@infradead.org>     signed-off-by: ingo molnar <mingo@elte.h,1,0,0
807,807,121,    replaces `tag: true` into `:tag` in the specs          replaces all the explicit include metadata syntax in the specs (tag:     true) into the implicit one (:tag).     added a cop to prevent future errors and handle autocorrection. ,0,1,1
808,808,822,    added tests. ,0,1,0
809,809,456,    retain undefined initializations (#36806)          * emit an export assignment even when the initializer is elided          * user a void 0; and elide assignments for enum/namespace-sourced exported variables          * haha  simplify greatly ,0,0,1
810,810,1042,    coresight: implementing 'cpu_id()' api          other than plainly parsing the device tree there is no way to     know which cpu a tracer is affined to.  as such adding an     interface to lookup the cpu field enclosed in the etm_drvdata     structure that was initialised at boot time.          signed-off-by: mathieu poirier <mathieu.poirier@linaro.org>     signed-off-by: greg ,0,1,0
811,811,1300,    perf evsel: rename perf_evsel__init() to evsel__init()          rename perf_evsel__init() to evsel__init()  so we don't have a name     clash when we add perf_evsel__init() in libperf.          signed-off-by: jiri olsa <jolsa@kernel.org>     cc: alexander shishkin <alexander.shishkin@linux.intel.com>     cc: alexey budankov <alexey.budankov@linux.intel.com>     cc: andi kleen <,0,1,1
812,812,758,    big refactoring thanks to proper jarjar built from source with asm 3.3 allowing to jarjar guice and others  includes package relocations ,0,0,1
813,813,1402,    added geoshape indexing and querying support ,0,1,0
814,814,471,    drm/nv30: apply modesetting to the correct slave encoder          signed-off-by: patrice mandin <patmandin@gmail.com>     reviewed-by: francisco jerez <currojerez@riseup.net>     signed-off-by: ben skeggs <bskeggs@redhat.com> ,1,0,0
815,815,1460,    make 0 as invalid value for `min_children` in `has_child` query (#41347)          * squashing multiple commits          * fixing #32949 updated default_min_children to be 1  this way in case min_children is not provided it will be set to 1 by default.          * fix childquerysearchit ,1,0,0
816,816,1546,    powerpc: avoid circular header inclusion in mmu-hash.h          when activating config_thread_info_in_task  linux/sched.h includes     asm/current.h. this generates a circular dependency. to avoid that      asm/processor.h shall not be included in mmu-hash.h.          in order to do that  this patch moves into a new header called     asm/task_size_64/32.h all the task_size rela,1,0,0
817,817,1670,    change formvalueproviderfactory to use getcontenttype for media type matching     fixes #68 ,1,0,0
818,818,1700,"    fix a type checker crash when the object type of a forcevalueexpr is an 'any'.          this allows us to remove the workaround generic overloads for ""print"" without sacrificing good diagnostics for its unavailable overloads. (rdar://problem/21499048  rdar://problem/21582758  rdar://problem/22126141)          swift svn r31169 ",1,0,0
819,819,1819,    perf report: merge al->filtered with hist_entry->filtered          i.e. don't drop al->filtered entries  create the hist_entries and use     its ->filtered bitmap  that is kept with the same semantics for its     bitmap  leaving the filtering to be done at the hist_entry level  i.e.     in the uis.          this will allow zooming in/out the filters.          signed-off-by: nam,0,0,1
820,820,131,    v4l/dvb (11723): link firmware to physical device          use the physical device rather than the i2c adapter as the reference     device when loading firmwares. this will prevent the sysfs name     collision with i2c-dev that has been reported many times.          i may have missed other drivers which need the same fix.          signed-off-by: jean delvare <khali@linux-fr.org,1,0,1
821,821,190,    implement checks for conditionally bridged types when performing a bridged conversion between array types. (rdar://problem/16540403)          swift svn r17660 ,0,1,0
822,822,2021,    adding a more robust and extendable cache plugin ,0,1,1
823,823,296,    rename nogradient -> notdifferentiable  to make it clear     about when it should be used.          keep the old name around for temporary backwards compatibility.     change: 132700646 ,0,0,1
824,824,832,    [frameworkbundle] implemented asset packages ,0,1,0
825,825,429,    rename jscallinvoker{ holder} to callinvoker{ holder}          summary:     ## motivation     the concept behind jscallinvoker doesn't necessarily have to apply only to the js thread. on android  we need to re-use this abstraction to allow execution of async method calls on the nativemodules thread.          reviewed by: petetheheat          differential revision: d17377313    ,0,0,1
826,826,331,    workbench grid layout behind flag (#63066)          * partially functioning grid view          * lots of toggling behavior and editor restore          * dimension changes          * restore layout and fix titlebar          * fix view dimensions on toggle/move          * increase timeout for debug config          * undo unnecessary changes to css          * put grid layout behin,1,0,1
827,827,635,"    scripts/spelling.txt: add ""followings"" pattern and fix typo instances          fix typos and add the following to the scripts/spelling.txt:            followings||following          while we are here  add a missing colon in the boilerplate in dt binding     documents.  the ""you soc"" in allwinner sunxi-pinctrl.txt was fixed as     well.          i reworded ""as the followings:"" t",1,0,0
828,828,1050,"    hardening against nulls for deserialization.          when one attempts to populate data structures via     deserialization  nulls tend to show up in unlikely or     ""impossible"" places. now there are a few fewer. ",0,0,1
829,829,1619,    [internal] remove operationrouting abstraction          this commit removes the unneeded operationrouting interface and flattens     the package structure inside cluster.routing ,0,0,1
830,830,604,    iwlwifi: mvm: use fast balance scan in case of dcm mode with p2p go          currently in case of dcm with p2p go where bss dtim interval < 220 msec     the fw fails to allocate events for the p2p go dtim due to long passive     scan events.          fix this by requesting all scans in this scenario to be fragmented with     fast balance scan time settings.  the only exception ,1,0,0
831,831,1556,    refactor(lifecycleevent): remove lifecycleevent          fixes #3924          breaking change          the `lifecycle` configuration for directive has been dropped.          before              // dart         @component({lifecycle: const [lifecycleevent.onchanges]  ...})         class mycomponent implements onchanges {           void onchanges() {...}         }              //,1,0,1
832,832,1236,    x86: move prefill_possible_map calling early          call it right after we are done with madt/mptable handling  instead of     doing that in setup_per_cpu_areas() later on...          this way for_possible_cpu() can be used early.          signed-off-by: yinghai lu <yhlu.kernel@gmail.com>     signed-off-by: ingo molnar <mingo@elte.hu> ,0,0,1
833,833,721,    debt: remove dead code ,0,0,1
834,834,1887,    refactor user delete endpoint  fix tests          suppress stripe error logs during testing ,0,0,1
835,835,307,    optionsmodel cleanup          - cleanup optionsmodel before adding new proxy options     - place socks version stuff below proxy port (ip  port  socks version)     - simplyfy some parts of the code (e.g. don't check ip and port  as this       is done in optionsdialog anyway  remove unneeded {} in switch/case)     - small cosmetic changes in the header for better readability ,0,0,1
836,836,811,    sky2: convert to new vlan model (v0.2)          this converts sky2 to new vlan offload flags control via ethtool.     it also allows for transmit offload of vlan tagged frames which     was not possible before.          signed-off-by: stephen hemminger <shemminger@vyatta.com>     reviewed-by: jesse gross <jesse@nicira.com>     signed-off-by: david s. miller <davem@davemloft.net,0,1,0
837,837,263,    locking/atomics: coccinelle/treewide: convert trivial access_once() patterns to read_once()/write_once()          please do not apply this to mainline directly  instead please re-run the     coccinelle script shown below and apply its output.          for several reasons  it is desirable to use {read write}_once() in     preference to access_once()  and new code is expected to ,0,0,1
838,838,1800,    uhci-hub: use usb_dt_hub          fix  using the  bare numbers to set the 'bhubcharacteristics' field of the hub     descriptor while the values are #define'd in <linux/usb/ch11.h>.          signed-off-by: sergei shtylyov <sergei.shtylyov@cogentembedded.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
839,839,1342,    spi: drop owner assignment from spi_drivers          an spi_driver does not need to set an owner  it will be populated by the     driver core.          signed-off-by: andrew f. davis <afd@ti.com>     acked-by: jonathan cameron <jic23@kernel.org>     signed-off-by: mark brown <broonie@kernel.org> ,0,0,1
840,840,1572,    scripted-diff: replace ccriticalsection with recursivemutex          -begin verify script-      # delete outdated alias for recursivemutex      sed -i -e '/ccriticalsection/d'                 ./src/sync.h      # replace use of outdated alias with recursivemutex      sed -i -e 's/ccriticalsection/recursivemutex/g' $(git grep -l ccriticalsection)     -end verify script- ,0,0,1
841,841,744,    jffs2: retry large buffer allocations          replace direct call to kmalloc for a potentially large  contiguous     buffer allocation with one to mtd_kmalloc_up_to which helps ensure the     operation can succeed under low-memory  highly- fragmented situations     albeit somewhat more slowly.          signed-off-by: grant erickson <marathon96@gmail.com>     signed-off-by: art,0,0,1
842,842,1067,    dockerinit: drop capabilities          drop capabilities in dockerinit instead of with lxc utils  since     libvirt-lxc doesn't support it.          this will also be needed for machine container mode  since dockerinit     needs cap_sys_admin to setup /dev/console correctly. ,0,0,1
843,843,1520,    ib/mlx5: add proper representors support          this commit adds full support for ib representor:          1) representors profile  we add two new profiles:        nic_rep_profile - this profile will be used to create an ib device that        represents the pf/uplink.        rep_profile - this profile will be used to create an ib device that        represents vfs. each vf wil,0,1,0
844,844,95,    sh: sprinkle __uses_jump_to_uncached          fix some callers of jump_to_uncached() and back_to_cached() that were     not annotated with __uses_jump_to_uncached.          signed-off-by: matt fleming <matt@console-pimps.org>     signed-off-by: paul mundt <lethal@linux-sh.org> ,1,0,0
845,845,837,    [scsi] libfc: fix fc_eh_host_reset          current fc_eh_host_reset leaves lport offline     permanently  due to flogi response getting     handled by logo response from last reset as both     had same exchange id.          so fix this by having end to end exches clean-up     using exchange abort along exches reset     done from fc_eh_host_reset. this would avoid     exchanges,1,0,0
846,846,1049,    use - as the prefix so we don't conflict with namespaces          the decision was made around:     https://gitlab.com/gitlab-org/gitlab-ce/issues/26407#note_30624641 ,1,0,1
847,847,1251,    fixed e221 pep8 warnings. ,0,0,1
848,848,1639,    added `bounds` payload to tray `clicked` event          used [shell_notifyicongetrect function](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378426) to get the bounds of the application's tray icon.     note: only works with windows 7 and later.          related to #1159  #1500. ,0,1,0
849,849,381,    remove case sensitive duplicate dir in vendor          signed-off-by: tonis tiigi <tonistiigi@gmail.com> ,0,0,1
850,850,1829,    bluetooth: add close() callback to l2cap_chan_ops          close() calls l2cap_sock_kill() on l2cap_sock.c          signed-off-by: gustavo f. padovan <padovan@profusion.mobi> ,0,1,0
851,851,1364,    added view component tag helper code generator. (#5195)          this addresses #1051. there is one more pull request that needs to be completed/merged (for `compositetaghelperdescriptorresolver` and friends). after that  runtime should work! ,0,1,0
852,852,615,    js static properties:fix multi-file references+merging ,1,0,0
853,853,1360,    mtd/jffs2: remove cvs keywords          once upon a time  the mtd repository was using cvs.          this patch therefore removes all usages of the no longer updated cvs     keywords from the mtd code.          this also includes code that printed them to the user.          signed-off-by: adrian bunk <bunk@kernel.org>     signed-off-by: david woodhouse <dwmw2@infradead.org> ,0,0,1
854,854,1821,    sql: move metrics tracking inside planexecutor (#38259)          move metrics in one place  from the transport layer inside the     planexecutor     remove unused class          close #38258 ,0,0,1
855,855,72,    two different indexes with the same nested object name causing arrayindexoutofboundsexception  closes #1575. ,1,0,0
856,856,535,    make much of the workspaces layer portable.          this change splits the workspaces layer into two parts  mirroring the portable/desktop split that the compilers did. the core parts of the workspaces layer (managing documents and projects  formatting  some refactoring  code fixes) is kept in the portable subset  with a few non-portable pieces remaining  notably msbuild suppo,0,0,1
857,857,1547,    warn when 'scalespagetofit' prop is used          summary:     @public          the `wkwebview` class doesn't expose a `scalespagetofit` property  unlike `uiwebview`. therefore  the `scalespagetofit` rn prop is be a bit tricky to implement with `wkwebview`.          for the time being  this diff adds warnings to `<webview/>` whenever `usewebkit={true}` and `scalespagetofit` is ,0,1,0
858,858,1244,    sparse irq_desc[] array: core kernel and x86 changes          impact: new feature          problem on distro kernels: irq_desc[nr_irqs] takes megabytes of ram with     nr_cpus set to large values. the goal is to be able to scale up to much     larger nr_irqs value without impacting the (important) common case.          to solve this  we generalize irq_desc[nr_irqs] to an (optio,0,1,1
859,859,407,    add stubs for various intl functions          closes gh-4819     - add stubs for idn functions     - add stubs for grapheme functions     - add stubs for spoofchecker     - add stubs for normalizer     - add stubs for resourcebundle     - fix arginfos     - add support for union return types     - fix arginfo for resourcebundle_create() ,1,1,0
860,860,1219,    closes si-6358. move accessor generation for lazy vals to typers.          until now lazy accessors were handled somehow special because their symbol was created in typers but the corresponding tree was only added in refchecks. this irregularity caused serious problems for value classes. also it now looks just better when lazy value is treated in a similar way as other fields. ,0,0,1
861,861,1080,    sql: implement null safe equality operator `<=>` (#35873)          this operator handles nulls in different way than the normal `=`.     if one of the operants is `null` and the other not it returns `false`.     if both operants are `null` it returns `true`. therefore in contrary to     `=`  which returns `null` if at least one of the operants is `null`  this one     never retu,0,0,1
862,862,1803,"    sql: introduce the columnar option for rest requests (#39287)          * add ""columnar"" option for rest requests (but be lenient for non-""plain""     modes) for json  yaml  smile and cbor formats.     * updated documentation ",0,1,1
863,863,1676,    [action] add force-with-lease to push_to_git_remote (#13098)          * adding support for --force-with-lease          * correcting whitespace error for force-with-lease          * replaced is_string:false with type:boolean and added tests ,1,1,0
864,864,2010,    add frozen_string_literal to spec/lib (part 1)          using the sed script from     https://gitlab.com/gitlab-org/gitlab-ce/issues/59758 ,0,1,0
865,865,1177,    remove obsolete stuff ,0,0,1
866,866,870,    log: add --show-linear-break to help see non-linear history          option explanation is in rev-list-options.txt. the interaction with -z     is left undecided.          signed-off-by: nguyá»n thÃ¡i ngá»c duy <pclouds@gmail.com>     signed-off-by: junio c hamano <gitster@pobox.com> ,1,0,0
867,867,1953,    fix some fixmes  see #3192          - remove some outdated ones (which were already fixed but not removed)     - make socket options fully configurable in nettytransport     - also apply socket options to outbound connections  not only the listen       socket     - remove timeout from taking the lock in repointableactorref  because we       cannot afford to lose system messages,1,1,1
868,868,1412,    ixgbevf: indicate removal state explicitly          add a bit  __ixgbevf_removing  to indicate that the module is being     removed. the __ixgbevf_down bit had been overloaded for this purpose      but that leads to trouble. a few places now check both __ixgbevf_down     and __ixgbevf_removing.          signed-off-by: mark rustad <mark.d.rustad@intel.com>     tested-by: phil sc,1,0,0
869,869,1601,    [spark-16294][sql] labelling support for the include_example jekyll plugin          ## what changes were proposed in this pull request?          this pr adds labelling support for the `include_example` jekyll plugin  so that we may split a single source file into multiple line blocks with different labels  and include them in multiple code snippets in the generated html page.  ,0,1,0
870,870,1421,    serveless implementation using aws compute engine and serverless framework ,0,1,0
871,871,1694,    uv: upgrade to v0.11.13          this commit changes src/tcp_wrap.cc and src/udp_wrap.cc just enough to     get by (i.e. to compile and function correctly.)          the new libuv api allows for more cleanup and deduplication but i'm     saving that for another day. ,0,0,1
872,872,99,    minor bug fix  missing const in method signature ,1,0,0
873,873,1245,    refactoring(query editors): broke out metric segment ,0,0,1
874,874,1362,    [minor][core] leverage modified utils.classforname to reduce scalastyle off for class.forname          ## what changes were proposed in this pull request?          this patch modifies utils.classforname to have optional parameters - initialize  nosparkclassloader - to let callers of class.forname with thread context classloader to use it instead. this helps to reduce scalastyle,0,0,1
875,875,1805,"    add ability to associate an id with tasks  (#27764)          adds support for capturing the x-opaque-id header from a rest request and storing it's value in the tasks that this request started. it works for all user-initiated tasks (not only search).          closes #23250          usage:     ```     $ curl -h ""x-opaque-id: imotov"" -h ""foo:bar"" ""localhost:9200/_tasks?pretty&gro",0,1,0
876,876,1940,    add sorting options for /users api (admin only)          signed-off-by: dmitriy zaporozhets <dmitriy.zaporozhets@gmail.com> ,0,1,0
877,877,645,    irq: replace loop with nr_irqs with for_each_irq_desc          there are a handful of loops that go from 0 to nr_irqs and use     get_irq_desc() on them. these would allocate all the irq_desc     entries  regardless of the need for them.          use the smarter for_each_irq_desc() iterator that will only iterate     over the present ones.          v2: make sure arch without ge,0,0,1
878,878,39,"    staging: rtl8723au: core: avoid bitwise arithmetic with forced endianness          this fixes bitwise arithmetic performed on the host on a variable     previously converted to little-endian  and subsequently converted     again to little-endian:       - issue_action_ba23a() called with ""status"" crafted in host byte order       - ""status"" converted to le       - bitwise arithme",1,0,0
879,879,507,    regmap: add mmio bus support          this is a basic memory-mapped-io bus for regmap. it has the following     features and limitations:          * registers themselves may be 8  16  32  or 64-bit. 64-bit is only       supported on 64-bit platforms.     * register offsets are limited to precisely 32-bit.     * io is performed using readl/writel  with no provision for using the,0,1,0
880,880,177,"    introduce `actiondispatch::routing::consoleformatter::base`          - create `base` and inherit `sheet` and `expanded` in order to     - prevent code duplication.       - remove trailing ""\n"" for components of `expanded`.       - there is no need for `expanded#header` to return `@buffer` so return `nil` instead.          - change `no_routes` message ""no routes were found for t",0,1,1
881,881,560,"    drm/syncobj: add a reset ioctl (v3)          this just resets the dma_fence to null so it looks like it's never been     signaled.  this will be useful once we add the new wait api for allowing     wait on ""submit and signal"" behavior.          v2:      - take an array of sync objects (dave airlie)     v3:      - throw -einval if pad != 0          signed-off-by: jason ekstrand ",0,1,0
882,882,784,"    fix typos concerning ""initiali[zs]e""          signed-off-by: uwe kleine-kÃ¶nig <u.kleine-koenig@pengutronix.de>     signed-off-by: jiri kosina <jkosina@suse.cz> ",1,0,0
883,883,419,    [s390] etr support.          this patch adds support for clock synchronization to an external time     reference (etr). the external time reference sends an oscillator     signal and a synchronization signal every 2^20 microseconds to keep     the tod clocks of all connected servers in sync. for availability     two etr units can be connected to a machine. if the clock deviates,0,1,0
884,884,1029,    create favicon overlay on the client          the initial reason for this change was that graphicsmagick does not     support writing to ico files. this fact lead to a chain of changes:          1. use png instead of ico (browser support is good enough)     2. render the overlays on the client using the canvas api. this way we        only need to store the original favion and g,0,1,1
885,885,768,    add elasticsearch-nio jar for base nio classes (#27801)          this is related to #27802. this commit adds a jar called     elasticsearch-nio that contains the base nio classes that will be used     for the tcp nio transport and eventually the http nio transport.          the jar does not depend on elasticsearch:core  so all references to core     have been removed. ,0,1,0
886,886,443,    drm/i915: expand subslice mask          currently  the subslice_mask runtime parameter is stored as an     array of subslices per slice. expand the subslice mask array to     better match what is presented to userspace through the     i915_query_topology_info ioctl. the index into this array is     then calculated:       slice * subslice stride + subslice index / 8          v2:,0,1,0
887,887,356,    1. added configuration option for 'preferred-nodes' for a clustered actor. the replica set is now tried to be satisfied by the nodes in the list of preferred nodes  if that is not possible  it is randomly selected among the rest.     2. added test for it.     3. fixed wrong java fault-tolerance docs     4. fixed race condition in maintenance of connections to new nodes         ,1,1,0
888,888,376,    add maple board and chessnut pieces  redesign theme selector ,0,1,0
889,889,224,    [spark-25132][sql] case-insensitive field resolution when reading from parquet          ## what changes were proposed in this pull request?     spark sql returns null for a column whose hive metastore schema and parquet schema are in different letter cases  regardless of spark.sql.casesensitive set to true or false. this pr aims to add case-insensitive field resolution for parq,0,1,0
890,890,901,    drm/amdgpu: separate amdgpu_rlc into a single file          separate the function and struct of rlc from the file of gfx.     abstract the function of amdgpu_gfx_rlc_fini.          signed-off-by: likun gao <likun.gao@amd.com>     acked-by: christian kÃ¶nig <christian.koenig@amd.com>     reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexan,0,0,1
891,891,520,    [store] move to on data.path per shard          this commit moves away from using stripe raid-0 simumlation across multiple     data paths towards using a single path per shard. multiple data paths are still     supported but shards and it's data is not striped across multiple paths / disks.     this will for instance prevent to loose all shards if a single disk is corrupted.  ,1,0,0
892,892,124,    add qint32 scalartype and qint32 data type (#19816)          summary:     pull request resolved: https://github.com/pytorch/pytorch/pull/19816          we need this for quantization for bias     add third argument of scalartype to `quantize_linear`          differential revision: d15094174          fbshipit-source-id: f19ec8f4716cf5fe0aa21b38d45af6d27c9ab377 ,0,1,0
893,893,1365,    avr32: use platform_driver_probe for pdc platform driver          the probe function of the pdc platform driver lives in the init section     and so a pdc device that is created after the init section is discarded     probably results in an oops.  even if this cannot happen  using     platform_driver_probe is cleaner.  (if this can happen and should be     supported the probe f,0,0,1
894,894,184,    add scheduler plugin execution duration metric.          address comments          sample metrics          use rand.intn and some cleanup ,0,1,1
895,895,603,    iio: adc: meson-saradc: fix the clock frequency on meson8 and meson8b          gx socs use a 1.2 mhz adc clock  while the older socs use a 1.14 mhz     clock.          a comment in the driver from amlogic's gpl kernel says that it's     running at 1.28 mhz. however  it's actually programming a divider of     20 + 1. with a xtal clock of 24 mhz this results in a frequency of    ,1,0,0
896,896,161,    accumulated work on fsc.          adds the following new options.            -ipv4 use ipv4 rather than ipv6 for the server socket absolute-cp make       -classpath elements absolute paths before sending to server max-idle       -set idle timeout in minutes for fsc (use 0 for no timeout)          my question marks are what are the right defaults for the first two.     former be,0,1,1
897,897,291,    net: fix /proc/net/ip_mr_cache display - v2          /proc/net/ip_mr_cache and /proc/net/ip6_mr_cache displays garbage when     showing unresolved mfc_cache entries.          [root@qemu tests]# cat /proc/net/ip_mr_cache     group    origin   iif     pkts    bytes    wrong oifs     014c00ef 010014ac 1         10    10050        0  2:1    3:1     024c00ef 010014ac 65535      514 ,1,0,0
898,898,318,    drm/radeon/kms: add initial colortiling support.          this adds new set/get tiling interfaces where the pitch     and macro/micro tiling enables can be set. along with     a flag to decide if this object should have a surface when mapped.          the only thing we need to allocate with a mapped surface should be     the frontbuffer. note rotate scanout shouldn't require on,0,1,0
899,899,1457,    golint fixes for daemon/ package           - some method names were changed to have a 'locking' suffix  as the      downcased versions already existed  and the existing functions simply      had locks around the already downcased version.      - deleting unused functions      - package comment      - magic numbers replaced by golang constants      - comments all over          s,1,0,1
900,900,979,"    splits microsoft.codeanalysis  microsoft.codeanalysis.csharp and microsoft.codeanalysis.visualbasic into portable and desktop assemblies.          existing core\source  csharp\source and visualbasic\source directories are renamed to core\portable  csharp\portable and visualbasic\portable.     new sibling desktop folders are added and non-portable source is moved there.     ""sys",0,0,1
901,901,1643,    code restructure to enhance readability ,0,0,1
902,902,289,    optimize performance of maps ,0,0,1
903,903,594,    feature: use virtual dom framework for faster post rendering ,0,1,0
904,904,123,    add counter and gauge services based on in-memory buffers          this seems pretty efficient (approx 12m write/s as opposed to 2m with     the defaultcounterservice). n.b. there is no need to change most of     the rest of the metrics stuff because metrics are write-often  read-     seldom  so we don't need high performance reads as much.          the spring integration confi,0,1,1
905,905,452,    pool `taghelperexecutioncontext`s within `taghelperscopemanager`.          - currently the `taghelperscopemanager` creates a new `taghelperexecutioncontext` per `taghelper` on a given page. with this change the max number of `taghelperexecutioncontext`s per page is the number of nested levels that exist.     - added two tests validating that specific pieces of `taghelperexecuti,0,1,0
906,906,1609,    hwmon: (jc42) change detection class          while the jc42-compatible chips are temperature sensors  i2c_class_spd     makes more sense because these chips always live on memory modules.          signed-off-by: jean delvare <khali@linux-fr.org>     cc: guenter roeck <guenter.roeck@ericsson.com> ,0,0,1
907,907,865,    [routing] fix trailing slash redirection when using redirectableurlmatcher ,1,0,0
908,908,1297,    runtime improvements to triangular solve.          piperorigin-revid: 204804841 ,0,0,1
909,909,1868,    refactor(ivy): remove `i18nconfigurelocalize` instruction (#31609)          this has been replaced by the `loadtranslations()` function in     `@angular/localize/run_time`.          pr close #31609 ,0,0,1
910,910,2011,    fix appending .rb to local formulae names          closes homebrew/homebrew#20926. ,1,0,0
911,911,1735,    fixed #2297  #2300; fixed several warnings ,1,0,0
912,912,800,    mtd: make mtd_partition.name const          this allows to drop a few casts.          signed-off-by: geert uytterhoeven <geert@linux-m68k.org>     signed-off-by: brian norris <computersforpeace@gmail.com> ,0,0,1
913,913,218,    s390/sclp: move uninitialized data to data section          the early sclp code may be called before the bss section is     cleared. therefore move all variables to the data section.          signed-off-by: heiko carstens <heiko.carstens@de.ibm.com>     signed-off-by: martin schwidefsky <schwidefsky@de.ibm.com> ,0,0,1
914,914,1358,    verify allocationids in replication actions (#20320)          replicated operation consist of a routing action (the original)  which is in charge of sending the operation to the primary shard  a primary action which executes the operation on the resolved primary and replica actions which performs the operation on a specific replica. this commit adds the targeted shard's allocat,0,1,0
915,915,1476,    move image pull throttling logic to kubelet/images          this allows runtimes in different packages (dockertools  rkt  kuberuntime) to     share the same logic. before this change  only dockertools support this     feature. now all three packages support image pull throttling. ,0,1,0
916,916,945,    pci: introduce platform_pci_power_manageable function          introduce function pointer platform_pci_power_manageable to be used     by the platform-related code to point to a function allowing us to     check if given device is power manageable by the platform.          introduce acpi_pci_power_manageable() playing that role for acpi.          signed-off-by: rafael j. wysock,0,1,0
917,917,1252,    finagle-mux: propagates `ignorable` status over the network          problem          when a backuprequestfilter raises on a dispatch that has already been sent over     the wire  mux sends a tdiscarded message so that the remote peer knows that the     work is no longer needed.  when the server receives the message  it interrupts     the dispatch on its end.  however  it loses,0,0,1
918,918,536,    added port of spa app to vnext as musicstore.spa     - front-end store (catalog) and login with validation working     - admin pages not working yet ,0,1,0
919,919,711,    refactor(compiler): introduce directive wrappers to generate less code          - for now only wraps the `@input` properties and calls       to `ngoninit`  `ngdocheck` and `ngonchanges` of directives.     - also groups eval sources by ngmodule.          part of #11683 ,0,1,1
920,920,341,    add missing imports ,1,0,0
921,921,351,    acpica: update internal namespace node/handle interfaces          this change deletes the unnecessary acpi_ns_convert_entry_to_handle     interface and renames the acpi_ns_map_handle_to_node interface to     acpi_ns_validate_handle.  acpica bz 798.          http://www.acpica.org/bugzilla/show_bug.cgi?id=798          signed-off-by: bob moore <robert.moore@intel.com>     signed-o,0,0,1
922,922,755,    fs: consolidate dentry kill sequence          the tricky locking for disposing of a dentry is duplicated 3 times in the     dcache (dput  pruning a dentry from the lru  and pruning its ancestors).     consolidate them all into a single function dentry_kill.          signed-off-by: nick piggin <npiggin@kernel.dk> ,0,0,1
923,923,129,    metadata: associate custom attributes with correct rows in generic parameters metadata table. fixes #121. (changeset 1384436) ,1,0,0
924,924,1574,    refactoring monitor code  support prometheus (#1668)          * refactoring monitor code  support prometheus     * remove vendor ,0,0,1
925,925,843,"    deps: intl: check in ""small-icu"" 57.1          * this commit has ""small"" icu 57.1.     see other related commit for tools to generate this commit.          fixes: https://github.com/nodejs/node/issues/3476     pr-url: https://github.com/nodejs/node/pull/6088     reviewed-by: james m snell <jasnell@gmail.com> ",1,0,0
926,926,1393,    [xfs] silence gcc4 warnings.  the directory ones are wrong because of     information gcc could not find out (that a directory always has a ..     entry)  the others are outright gcc bugs.          sgi-pv: 943511     sgi-modid: xfs-linux:xfs-kern:200055a          signed-off-by: christoph hellwig <hch@sgi.com>     signed-off-by: nathan scott <nathans@sgi.com> ,1,0,0
927,927,217,    2.x: cleanup of style and other minor things  9/14-1 (#4552)          * 2.x: cleanup of style and other minor things  9/14-1          * disable the other checks ,0,0,1
928,928,288,"    drm/i915: replace ""_load"" with ""_probe"" consequently          use the ""_probe"" nomenclature not only in i915_driver_probe() helper     name but also in other related function / variable names for     consistency.  only the userspace exposed name of a related module     parameter is left untouched.          signed-off-by: janusz krzysztofik <janusz.krzysztofik@linux.intel.com>  ",0,0,1
929,929,1787,    add a hostfailurelistener to notify client code if a node got disconnected (#21709)          today there is no way to get notified if a node is disconnected. client code     must poll the transportclient constantly to detect that a node is not connected     anymore in order to react and add new nodes or notify altering etc. for instance     if a hostname  gets resolved to an ip,0,1,0
930,930,680,    fixed gpu::pyrup (now it matches cpu analog)     fixed several warnings ,1,0,0
931,931,752,    make modelbindingcontext.result non-nullable          this change simplifies a bunch of code and fits more in line with the     current design of model binding.          now  a model binder only has to do anything if it was successful.     'return' is enough to indicate failure. ,0,0,1
932,932,638,    fixed #21127 -- started deprecation toward requiring on_delete for foreignkey/onetoonefield ,1,0,0
933,933,432,    feat(ivy): add support of applicationref.bootstrapmodulefactory (#23811)          pr close #23811 ,0,1,0
934,934,326,    [net] tipc: fix whitespace errors.          signed-off-by: yoshifuji hideaki <yoshfuji@linux-ipv6.org>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
935,935,1223,    move x-pack-core to core package (elastic/x-pack-elasticsearch#3678)          this commit moves the source file in x-pack-core to a org.elasticsearch.xpack.core package. this is to prevent issues where we have compile-time success reaching through packages that will cross module boundaries at runtime (due to being in different classloaders). by moving these to a separate packag,0,0,1
936,936,1691,    [patch] pcmcia: embed dev_link_t into struct pcmcia_device          embed dev_link_t into struct pcmcia_device()  as they basically address the     same entity. the actual contents of dev_link_t will be cleaned up step by step.     this patch includes a bugfix from and signed-off-by andrew morton.          signed-off-by: dominik brodowski <linux@dominikbrodowski.net> ,0,0,1
937,937,4,    [spark-9372] [sql] filter nulls in join keys          this pr adds an optimization rule  `filternullsinjoinkey`  to add `filter` before join operators to filter out rows having null values for join keys.          this optimization is guarded by a new sql conf  `spark.sql.advancedoptimization`.          the code in this pr was authored by yhuai; i'm opening this pr to factor out,0,0,1
938,938,1590,    sql: improve painless script generated from `in` (#35055)          replace standard `||` and `==` painless operators with     new `in` method introduced in `internalsqlscriptutils`.     this allows the list of values to become a script variable     which is replaced each time with the list of  values provided     by the user.          move in to the same package as inpipe & inp,0,0,1
939,939,1659,    * rename php_compat.[ch] to flock_compat.[ch] and move it to ext/standard     * fix win32 compilation ,1,0,1
940,940,380,    d3.geo.area: improve handling of tiny polygons. ,0,0,1
941,941,1138,    vgaarbiter: rst-ifiy and polish kerneldoc          move the documentation into documentation/gpu  link it up and pull in     the kernel doc.          no actual text changes except that i did polish the kerneldoc a bit      especially for vga_client_register().          v2: remove some rst from vga-switcheroo.rst that i don't understand      but which seems to be the reason why ,0,0,1
942,942,1041,    stdlibunittest: add a facility to activate autorelease pools only on platforms that don't implement the return-autoreleased optimization          swift svn r29295 ,0,1,0
943,943,1903,    [patch] dvb: modified dvb_register_adapter() to avoid kmalloc/kfree          modified dvb_register_adapter() to avoid kmalloc/kfree.  drivers have to embed     struct dvb_adapter into their private data struct from now on.  (andreas     oberritter)          signed-off-by: johannes stezenbach <js@linuxtv.org>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: li,0,1,0
944,944,1285,    nfc: introduce new valueptr/valueref typedefs to simplify the transition to value being value-typed.          this is an initial step to refactoring the representation of opresult as proposed in: https://groups.google.com/a/tensorflow.org/g/mlir/c/xxzzkhqqf_0/m/v6bkb08wcgaj          this change will make it much simpler to incrementally transition all of the existing code to us,0,1,1
945,945,257,    do not init() the hud until it's needed.          this avoids initializing around 15 (almost all unused) huds on sites     like gmail and google inbox.          because the hud is small  there is not noticable flicker. ,0,0,1
946,946,1337,    tools: add babel-eslint          create tools/update-babel-eslint.sh script and execute it to do the     first installation of the package.     update tools/license-builder.sh and execute it to add babel-eslint's     license to our license file.          pr-url: https://github.com/nodejs/node/pull/17820     reviewed-by: matteo collina <matteo.collina@gmail.com>     reviewed-by:,0,1,0
947,947,539,    patch-ids: stop using a hand-rolled hashmap implementation          this change will use the hashmap from the hashmap.h to keep track of the     patch_ids that have been encountered instead of using an internal     implementation.  this simplifies the implementation of the patch ids.          signed-off-by: kevin willford <kcwillford@gmail.com>     signed-off-by: junio c hamano,0,0,1
948,948,127,    arm: kprobes: fix unreliable mrs instruction tests          for the instruction 'mrs rn  cpsr' the resulting value of rn can vary due to     external factors we can't control. so get the test code to mask out these     indeterminate bits.          signed-off-by: jon medhurst <tixy@linaro.org> ,1,0,0
949,949,898,    mx2: add dma support for mx2 and (eventually) mx1          this patch adds dma support for freescale i.mx27 socs. it is derived     from the i.mx1 port and should (though currently untested) still be     working for the i.mx1.          signed-off-by: sascha hauer <s.hauer@pengutronix.de> ,0,1,0
950,950,1480,    alsa: hda - don't call snd_hda_codec_configure in snd_hda_codec_new()          the codec setup call via snd_hda_codec_configure() isn't necessarily     called in snd_hda_codec_new().  for the later added feature  it's better     to change the code flow like:      - create all codec instances      - configure each codec          signed-off-by: takashi iwai <tiwai@suse.de> ,0,1,0
951,951,1254,    locking/barriers: convert users of lockless_dereference() to read_once()          read_once() now has an implicit smp_read_barrier_depends() call  so it     can be used instead of lockless_dereference() without any change in     semantics.          signed-off-by: will deacon <will.deacon@arm.com>     cc: linus torvalds <torvalds@linux-foundation.org>     cc: paul e. mckenney <p,0,0,1
952,952,1189,"    si-6840 fixes weird typing of quasiquote arguments          previously quasiquote arguments were type checked against any     which caused weird inference that made splicing of complex expressions     unusable:             val l1 = list(q""foo"")        val l2 = list(q""bar"")        q""f(..${l1 ++ l2})"" // argument type checked as any instead of list[tree]          this is fixed by",1,0,0
953,953,350,    perf: speed up migrate_to_s3 rake task by deleting optimized image record.          no point moving all optimized image files to tombstone when the store is     changing. also  `destroy_all` can easily blow memory since we are no     loading in batches. ,0,0,1
954,954,1971,    fixed #22938 -- allowed clearsessions to remove file-based sessions. ,1,0,0
955,955,1104,    rdma/cxgb4: sq flush fix          there is a race when moving a qp from rts->closing where a sq work     request could be posted after the fw receives the rdma_ri/fini wr.     the sq work request will never get processed  and should be completed     with flushed status.  function c4iw_flush_sq()  however was dropping     the oldest sq work request when in closing or idle states,1,0,0
956,956,362,    objective c second alpha drop          - style fixups in the code.     - map<> serialization fixes and more tests.     - autocreation of map<> fields (to match repeated fields).     - @@protoc_insertion_point(global_scope|imports).     - fixup proto2 syntax extension support.     - move all startup code to +initialize so it happen on class usage and not app startup.     - have ,1,0,1
957,957,1877,    clang format for all react native files          summary:     buckle up  this enables clang-format prettifier for all files in react native opensource repo.          changelog: [internal] clang-format codemod.          reviewed by: mdvacca          differential revision: d20331210          fbshipit-source-id: 8da0f94700be0c35bfd399e0c48f1706de04f5b1 ,0,0,1
958,958,1288,    dump_stack: implement arch-specific hardware description in task dumps          x86 and ia64 can acquire extra hardware identification information     from dmi and print it along with task dumps; however  the usage isn't     consistent.          * x86 show_regs() collects vendor  product and board strings and print       them out with pid  comm and utsname.  some of the informa,0,0,1
959,959,1129,    drm/i915: introduce intel_prepare_cursor_plane() (v2)          primary and sprite planes have already been refactored to include a     'prepare' step which handles all the commit-time operations that could     fail (i.e.  pinning buffers and such).  refactor the cursor commit in a     similar manner.          for simplicity and consistency with other plane types  we also switch,0,1,1
960,960,1221,    add `environment` tab to sparkui.          this adds a tab which displays system property and classpath information. this     can be useful in debugging various types of issues such as:          1. extra/incorrect hadoop jars being included in the classpath     2. spark launching with a different jre version than intended     3. spark system properties not being set to intended,0,1,0
961,961,412,    [gardening] remove redundant repetition of type names (dry): repeatedtypename foo = dyn_cast<repeatedtypename>(bar)          replace `nameoftype foo = dyn_cast<nameoftype>(bar)` with dry version `auto foo = dyn_cast<nameoftype>(bar)`.          the dry auto version is by far the dominant form already used in the repo  so this pr merely brings the exceptional cases (redundant rep,0,0,1
962,962,812,    inet: fix various use-after-free in defrags units          syzbot reported another issue caused by my recent patches. [1]          the issue here is that fqdir_exit() is initiating a work queue     and immediately returns. a bit later cleanup_net() was able     to free the mib (percpu data) and the whole struct net was freed      but we had active frag timers that fired and tri,1,0,1
963,963,998,    asoc: shuffle wm8753 device registration code          this patch should be pure code motion  separating that out from the     functional changes to move to new style device registration.          signed-off-by: mark brown <broonie@opensource.wolfsonmicro.com> ,0,0,1
964,964,970,    genirq: cleanup top of file comments          remove pointless references to the file name itself and condense the     information so it wastes less space.          signed-off-by: thomas gleixner <tglx@linutronix.de>     acked-by: marc zyngier <marc.zyngier@arm.com>     cc: kate stewart <kstewart@linuxfoundation.org>     cc: greg kroah-hartman <gregkh@linuxfoundation.org>     c,0,0,1
965,965,1708,    usb: allow initialization of broken keyspan serial adapters.          fixes the keyspan driver after the addition of additional     checking of driver requirements introduced in usb-serial.c     commit 063a2da8f01806906f7d7b1a1424b9afddebc443.  the initialization     of the keyspan usb_serial_driver structs were not initializing the     num_interrupt_out field and the additiona,1,0,0
966,966,1534,    staging: slicoss: simplify struct for statistics          merge several structures for statistics to one structure and remove     unnecessary union nesting.          signed-off-by: lino sanfilippo <linosanfilippo@gmx.de>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
967,967,1341,    rename ./validation_test/execution => execution_crashers to match the names of the compiler_crasher. ,0,0,1
968,968,537,    [patch] mm: incorrect vm_fault_oom returns from drivers          some drivers are returning oom when it is not in response to a memory     shortage.          signed-off-by: nick piggin <npiggin@suse.de>     cc: dave airlie <airlied@linux.ie>     cc: jaroslav kysela <perex@suse.cz>     cc: takashi iwai <tiwai@suse.de>     cc: greg kh <greg@kroah.com>     signed-off-by: andrew mo,1,0,0
969,969,1997,    usb: spear-ehci/ohci: use devm_*() routines          this patch frees spear ehci/ohci drivers from tension of freeing resources :)     devm_* derivatives of multiple routines are used while allocating resources      which would be freed automatically by kernel.          signed-off-by: viresh kumar <viresh.kumar@linaro.org>     signed-off-by: greg kroah-hartman <gregkh@linuxfoun,0,0,1
970,970,483,"    hid: add driver for ion icade          add a driver for the ion icade mini arcade cabinet [1]. the device generates a     key press and release for each joystick movement or button press or release.     for example  moving the stick to the left will generate the ""a"" key being     pressed and then released.          a list of all the combinations is available in the icade develo",0,1,0
971,971,1196,    fix for graphics_disabled build          git-svn-id: https://tesseract-ocr.googlecode.com/svn/trunk@686 d0cd1f9f-072b-0410-8dd7-cf729c803f20 ,1,0,0
972,972,1318,    adds cross-repository blob pushing behavior          tracks source repository information for each blob in the blobsum     service  which is then used to attempt to mount blobs from another     repository when pushing instead of having to re-push blobs to the same     registry.          signed-off-by: brian bland <brian.bland@docker.com> ,0,1,0
973,973,1409,    staging: comdi: ni_at_ao.c: fix coding style error          the line was too long  used braces on single line for loop body.          signed-off-by: allison randal <allison@parrot.org>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,1,0,0
974,974,1569,    drm/i915: keep user ggtt alive for a minimum of 250ms          do not allow runtime pm autosuspend to remove userspace ggtt mmaps too     quickly. for example  igt sets the autosuspend delay to 0  and so we     immediately attempt to perform runtime suspend upon releasing the     wakeref. unfortunately  that involves tearing down ggtt mmaps as they     require an active device.,0,0,1
975,975,1095,    rpc: gss: eliminate print_hexl()'s          dumping all this data to the logs is wasteful (even when debugging is turned     off)  and creates too much output to be useful when it's turned on.          fix a minor style bug or two while we're at it.          signed-off-by: j. bruce fields <bfields@citi.umich.edu>     signed-off-by: trond myklebust <trond.myklebust@netapp.com> ,1,0,0
976,976,1269,    silgen: support vtable thunks for 'modify' accessors          when checking if a vtable override is abi compatible with the     base class method  make sure to check yields too.          also  add support for coroutines to vtable thunks  using code     that i've copy and pasted and tweaked from witness thunks.          (it would be nice to combine witness thunks and vtable thun,0,1,1
977,977,1506,    feat(ivy): i18n - inline current locale at compile-time (#33314)          during compile-time translation inlining  the `$localize.locale`     expression will now be replaced with a string literal containing the     current locale of the translations.          pr close #33314 ,0,1,0
978,978,1662,    redesign active statement handling during debugging (#24428)          * active statement handling          * start active statement tracking on background thread          * ensure xapi is initialized before calling concord apis.          * fix up and add comments          * call uninitializethread in visualstudioactivestatementprovider          * fixes          * pr feedback   ,1,0,1
979,979,325,    si-7253: update comments and naming          rename isinterfacecall -> needsinterfacecall  which is more accurate since a     receiver can't literally be an interface call. ,0,0,1
980,980,731,    wlcore: force checking of io functions' return values          all io functions' return values should be propagated and handled. add a     __must_check annotation to verify that the return values are checked and     to avoid future mistakes.          signed-off-by: ido yariv <ido@wizery.com>     signed-off-by: luciano coelho <coelho@ti.com> ,0,0,1
981,981,660,    mm: memcg: remove unnecessary preemption disabling          lock_page_cgroup() disables preemption  remove explicit preemption     disabling for code paths holding this lock.          signed-off-by: johannes weiner <hannes@cmpxchg.org>     acked-by: michal hocko <mhocko@suse.cz>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torvalds <torv,0,0,1
982,982,79,    [xla:gpu] relax producer-consumer multi-output fusion constraints.          fusing producer and consumer that generate a nested loop  for example when both producer and consumer are `reduce-window` hlo instructions  is avoided.          piperorigin-revid: 260916515 ,0,0,1
983,983,221,    add interpreter support for handles/pythonop/cppop (#3866)          * add interpreter support for handles/pythonop/cppop          this treats handles as a first-class type in the interpreter     since this turned out to be conceptually simpler than treating     them as a separate concept  which requires a second channel for     register allocating and moving data from one op to,0,1,1
984,984,656,    tag editor action telemetry in walk-through (fixes #19888) ,1,0,0
985,985,154,    chore(conference-app): progress          * repro case          * removed bloat to make it easier to see issue          * progress ,0,0,1
986,986,70,    pass a code jar to sparkcontext in our examples. fixes spark-594. ,1,0,0
987,987,1620,    moved newlineprintwriter to its own file  hopef...          moved newlineprintwriter to its own file  hopefully fixing the build. ,1,0,0
988,988,1786,    ladder configuration (#4786)          * add ability to configure ladder levels to use specified hero/equipment in code.          * start to add level passwords for restricted level preview.          * starting to move configuration of mirror match ladders from code to data          * fix typo          * remove hero config for arenas - now lives in the level data          * don',1,1,0
989,989,1276,    drm/i915/gvt: replace the gvt_err with gvt_vgpu_err          gvt_err should be used only for the very few critical error message     during host i915 drvier initialization. this patch     1. removes the redundant gvt_err;     2. creates a new gvt_vgpu_err to show errors caused by vgpu;     3. replaces the most gvt_err with gvt_vgpu_err;     4. leaves very few gvt_err for dumpin,0,1,1
990,990,464,    fix c++ header guards.          piperorigin-revid: 209679086 ,1,0,0
991,991,1581,    [codecompletion] add initial support for completing infix operators          this allows us to start code-completing infix operators in postfix     expressions.  as a first step  this patch only handles completing     against the immediate lhs (so for example 1 == 1 <here> doesn't suggest     boolean operators yet).          the next step is to feed the leading sequence express,0,1,0
992,992,1835,    dma: sh: use an integer slave id to improve api compatibility          initially struct shdma_slave has been introduced with the only member - an     unsigned slave id - to describe common properties of dma slaves in an     extensible way. however  experience shows  that a slave id is indeed the     only parameter  needed to identify dma slaves. this is also  what is used     b,0,0,1
993,993,1583,    net: thunderx: add basic xdp support          adds basic xdp support i.e attaching a bpf program to an     interface. also takes care of allocating separate tx queues     for xdp path and for network stack packet transmission.          this patch doesn't support handling of any of the xdp actions      all are treated as xdp_pass i.e packets will be handed over to     the networ,0,1,0
994,994,176,    ast: remove unused 'resolver' argument from typebase::getsuperclass() ,0,0,1
995,995,1235,    refactor of issue boards to work with vue2 ,0,0,1
996,996,1603,    fix monaco-editor/issues#513. setting property to null on ie11 does not remove the property. ,1,0,0
997,997,1131,    staging/lustre: fix braces {} style          this fixes all checkpatch form of this from the lustre tree:     check: braces {} should be used on all arms of this statement          signed-off-by: oleg drokin <green@linuxhacker.ru>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
998,998,1119,    fix username in message form          normalization lost in 037d03003d86205e0708c41c3f80735fc9afea2a. ,1,0,0
999,999,602,"    style: add a space after ""//"" in comments and remove unneeded comments after ""}"" (#8576) ",0,0,1
1000,1000,702,    netfilter: xtables: optimize call flow around xt_ematch_foreach          signed-off-by: jan engelhardt <jengelh@medozas.de>     signed-off-by: patrick mchardy <kaber@trash.net> ,0,0,1
1001,1001,1567,    remove two uses of funcexprlike and simplify the definition of funcexprlike               swift svn r8137 ,0,0,1
1002,1002,197,    drm/amdkfd: remove sync_with_hw() from amdkfd          this patch completely removes the sync_with_hw() because it was broken and     actually there is no point of using it.          this function was used to:          - make sure that the submitted packet to the hiq (which is a kernel queue) was       read by the cp. however  it was discovered that the method this function use,0,0,1
1003,1003,1850,    [ib] uverbs: add a mask of device methods allowed for userspace          give each device a uverbs_cmd_mask  so that a low-level driver can     control which methods may be called on behalf of userspace.          signed-off-by: roland dreier <rolandd@cisco.com> ,0,1,0
1004,1004,652,    fix broken specs. #3945 ,1,0,0
1005,1005,1494,    gc: implement defer print/println/panic/panicln          fixes #219.          r=ken2  r     cc=golang-dev     https://golang.org/cl/194097 ,1,0,0
1006,1006,408,    arm: dma-mapping: add support for dma_get_sgtable()          this patch adds support for dma_get_sgtable() function which is required     to let drivers to share the buffers allocated by dma-mapping subsystem.          generic implementation based on virt_to_page() is not suitable for arm     dma-mapping subsystem.          signed-off-by: marek szyprowski <m.szyprowski@samsung.,0,1,0
1007,1007,1330,    acpica: audit/update for acpica return macros and debug depth counter          1) ensure that all functions that use the various trace macros        also use the appropriate acpica return macros.     2) ensure that all normal return statements surround the return        expression (value) with parens.          signed-off-by: bob moore <robert.moore@intel.com>     signed-off-by:,0,0,1
1008,1008,322,    added postgres and redis session options ,0,1,0
1009,1009,1200,    fix resource string names for style consistency ,0,0,1
1010,1010,1943,    parser: fix a crash while doing recovery when we tried to reinterpret a binary     operator at the beginning of an unary expression as unary operator               swift svn r7765 ,1,0,0
1011,1011,428,    powerpc: add initiate coprocessor store word (icswx) support          icswx is a powerpc instruction to send data to a co-processor. on book-s     processors the lpar_id and process id (pid) of the owning process are     registered in the window context of the co-processor at initialization     time. when the icswx instruction is executed the l2 generates a cop-reg     transact,0,1,0
1012,1012,387,    exp/template: character constants.     easier to implement than to justify leaving them out.          r=golang-dev  dsymonds     cc=golang-dev     https://golang.org/cl/4662089 ,0,0,1
1013,1013,1267,    propagate errors in executors to uncaught exception handler (#36137)          this is a continuation of #28667 and has as goal to convert all executors to propagate errors to the     uncaught exception handler. notable missing ones were the direct executor and the scheduler. this     commit also makes it the property of the executor  not the runnable  to ensure this property. a,0,1,0
1014,1014,1774,    clean up types in build/lib/optimize.ts ,0,0,1
1015,1015,1715,    drm/amd/powerplay: fix memory leak of tdp_table          tdp_table is being leaked on failed allocations of     hwmgr->dyn_state.cac_dtp_table. kfree tdp_table on the error     return path to fix the leak.          signed-off-by: colin ian king <colin.king@canonical.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,1,0,0
1016,1016,344,    update test to match new non-sorting of attributes. ,0,1,0
1017,1017,185,    crypto/md5: faster inner loop  3x faster overall          the speedup is a combination of unrolling/specializing     the actual code and also making the compiler generate better code.          go 1.0.1 (size: 1239 code + 320 data = 1559 total)     md5.benchmarkhash1k   1000000      7178 ns/op    142.64 mb/s     md5.benchmarkhash8k    200000     56834 ns/op    144.14 mb/s       ,0,0,1
1018,1018,1582,    change package names zero->boot          * actuator -> boot-ops     * cli -> boot-cli     * launcher -> boot-load     * autoconfig -> boot-config     * bootstrap -> boot-strap     * starters -> boot-up          [#54095231] [bs-253] refactor zero->boot ,0,0,1
1019,1019,1030,    arm: dove: clean up mach/*.h headers          this is a simple move of all header files that are no longer     included by anything else from the include/mach directory     to the platform directory itself as preparation for     multiplatform support.          the mach/uncompress.h headers are left in place for now      and are mildly modified to be independent of the other    ,0,0,1
1020,1020,1834,    migrate non-core modules out          - delete all modules that have been moved into separate projects.     - rename rxjava-core to rxjava ,0,0,1
1021,1021,859,    add api to start basic license (elastic/x-pack-elasticsearch#4083)          this is related to elastic/x-pack-elasticsearch#3877. this commit adds a route /start_basic that     will self generate a basic license. the only validation that is     performed is to check that you do not already have a basic license     installed. additionally  if you lose features from switching to ,0,1,0
1022,1022,413,    fix all of the unit test diagnostic messages ,1,0,0
1023,1023,576,    implement nested create mutation inside update ,0,1,0
1024,1024,1591,    rename 'template_feed' to 'src' for consistency with other repos ,0,0,1
1025,1025,2030,    fix some data races          after running the test suite with the race detector enabled i found     these gems that need to be fixed.     this is just round one  sadly lost my test results after i built the     binary to test this... (whoops)          signed-off-by: brian goff <cpuguy83@gmail.com> ,1,0,0
1026,1026,321,    [tf:xla] split xla concat ops that fail on large sets of inputs.          gpu would fail due to having too many parameters to fit in memory because concat's signature is variadic and can have an unlimited number of inputs.          piperorigin-revid: 211942734 ,1,0,0
1027,1027,1035,    staging: vt6655: dead code datarate.c/h          signed-off-by: malcolm priestley <tvboxspy@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
1028,1028,887,    fix streamsbuilderfactorybean injection definition          closes gh-16329 ,1,0,0
1029,1029,1053,    qlcnic: fix device soft reset          during device soft reset  don't halt every device block.     access to some blocks is required during recovery.          signed-off-by: sucheta chakraborty <sucheta@dut4145.unminc.com>     signed-off-by: amit kumar salecha <amit.salecha@qlogic.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
1030,1030,929,    net: enable udp broadcast before it is needed (instead of after)          fixes #526.          r=r     cc=golang-dev     https://golang.org/cl/186211 ,1,0,0
1031,1031,683,    reorganize source code in preparation to move into aspnet/aspnetcore          prior to reorganization  this source code was found in https://github.com/aspnet/diagnostics/tree/8893337fb090c523843564a91054996bfcc3cc42 ,0,0,1
1032,1032,260,    ce - fe fix diffs specs leaking store          - export mr_notes module as function     - update specs refs of mr_notes/stores to factory          ee mr: https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/15097 ,1,0,1
1033,1033,375,    fix memcpy of overlapping area          caught by valgrind in t5500  but it is pretty obvious from     reading the code that this is shifting elements of an array     to the left  which needs memmove.          signed-off-by: jeff king <peff@peff.net>     signed-off-by: junio c hamano <gitster@pobox.com> ,1,0,0
1034,1034,558,    [gardening] fix violations of non-controversial pep8 rules          fixes:     * multiple statements on one line (colon) (e701)     * missing whitespace around arithmetic operator (e226)     * missing whitespace around operator (e225)     * closing bracket does not match visual indentation (e124)     * blank line contains whitespace (w293)     * continuation line missing indent,1,0,0
1035,1035,243,    registry: add a reusable function registry (#17047) ,0,1,0
1036,1036,1141,    feat: configprovider support locale (#17816)          * configprovider support locale          * update docs          * update category          * clean up          * moving locale          * update check script          * update related code          * add test case          * demo link          * update doc          * hide one rule of md with eslint          * update error li,0,1,1
1037,1037,1742,    add todos on several register_op calls that should get deprecated.     remove histogramaccumulatorsummary from hidden_ops.txt and logging_ops.py; this     op no longer exists.     change: 146534447 ,0,1,1
1038,1038,1396,    remove type::elementsizeinbytes          summary: pull request resolved: https://github.com/pytorch/pytorch/pull/17785          reviewed by: ezyang          differential revision: d14379074          fbshipit-source-id: 60727f187d61eb571b144bd6eed4dd4908da0b51 ,1,0,0
1039,1039,1089,    show owner/poster tags of comments and fix #1312 ,1,0,0
1040,1040,1681,    added tests and examples for layout guides ,0,1,0
1041,1041,388,    correct a slightly inaccurate claim in the javadoc of the equals() methods on stats and pairedstats. if strictfp is not in force  we can't actually guarantee getting equal statistics even for the same values in the same order.          -------------     created by moe: https://github.com/google/moe     moe_migrated_revid=156289223 ,1,0,0
1042,1042,682,"    hwmon: (f71882fg) use pr_fmt and pr_<level>          added #define pr_fmt kbuild_modname "": "" fmt     converted printks to pr_<level>     coalesced any long formats     removed prefixes from formats          signed-off-by: joe perches <joe@perches.com>     signed-off-by: guenter roeck <guenter.roeck@ericsson.com> ",0,1,1
1043,1043,1592,    mysql support for migrations bigger than 64kbs          also removes a duplication of databases url patterns and     do some small code refactoring.          this fixes #3918. ,1,1,1
1044,1044,1170,    nfc: rename module to moduleop.          module is a legacy name that only exists as a typedef of moduleop.          piperorigin-revid: 257427248 ,0,0,1
1045,1045,1063,    mm  oom: fix race when specifying a thread as the oom origin          test_set_oom_score_adj() and compare_swap_oom_score_adj() are used to     specify that current should be killed first if an oom condition occurs in     between the two calls.          the usage is                  short oom_score_adj = test_set_oom_score_adj(oom_score_adj_max);             ...             com,1,0,0
1046,1046,9,    reorganize source code in preparation to move into aspnet/aspnetcore     prior to reorganization  this source code was found in https://github.com/aspnet/security/tree/26d27d871b7992022c082dc207e3d126e1d9d278 ,0,0,1
1047,1047,187,    nfc: pass opasmparser by reference instead of by pointer.          mlir follows the llvm style of pass-by-reference.          piperorigin-revid: 270315612 ,0,0,1
1048,1048,216,    btrfs: convert btrfs_delayed_item.refs from atomic_t to refcount_t          refcount_t type and corresponding api should be     used instead of atomic_t when the variable is used as     a reference counter. this allows to avoid accidental     refcounter overflows that might lead to use-after-free     situations.          signed-off-by: elena reshetova <elena.reshetova@intel.com,0,0,1
1049,1049,1677,    add autoscaling/v2alpha1 types to v1 in annotation          this commit adds autoscaling/v2alpha1 types to autoscaling/v1     for use in the alpha annotations which preserve v2alpha1 content     through round-trips. ,0,1,0
1050,1050,1316,    staging: android: fix sizeof style issue          converts sizeof(type) to sizeof(variable) in android/ion/ion_cma_heap.c          signed-off-by: mateusz nowotyÅski <maxmati4@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
1051,1051,1333,    block: fold cmd_type into the req_op_ space          instead of keeping two levels of indirection for requests types  fold it     all into the operations.  the little caveat here is that previously     cmd_type only applied to struct request  while the request and bio op     fields were set to plain req_op_read/write even for passthrough     operations.          instead this pa,0,0,1
1052,1052,1432,    move field data type to simply be type and settings ,0,0,1
1053,1053,897,    #46469 - added ref querystring parameter to project search to allow searching on branches other than master ,0,1,0
1054,1054,1749,    add clang-format conf to the project  format the c++ code (#1141) ,0,0,1
1055,1055,1233,"    spi: prefix modalias with ""spi:""          this makes it consistent with other buses (platform  i2c  vio  ...).  i'm     not sure why we use the prefixes  but there must be a reason.          this was easy enough to do it  and i did it.          signed-off-by: anton vorontsov <avorontsov@ru.mvista.com>     cc: david brownell <dbrownell@users.sourceforge.net>     cc: david woodho",0,0,1
1056,1056,814,    clean up scaladoc in ml lib.     also build and copy ml lib scaladoc in spark docs build.     some more minor cleanup with respect to naming  test locations etc. ,0,0,1
1057,1057,11,    runtime  cmd/compile: add intrinsic getclosureptr          intrinsic enabled on all architectures      runtime asm implementation removed on all architectures.          fixes #21258          change-id: i2cb86d460b497c2f287a5b3df5c37fdb231c23a7     reviewed-on: https://go-review.googlesource.com/53411     reviewed-by: josh bleecher snyder <josharian@gmail.com>     reviewed-by: d,1,0,0
1058,1058,525,    refactor colours in theme ,0,0,1
1059,1059,83,    reorganize source code in preparation to move into aspnet/aspnetcore          prior to reorganiziation  this source code was found in https://github.com/aspnet/websockets/tree/67f2c3149efd03511794ed64726a196ee0b1ab36 ,0,0,1
1060,1060,690,"    use the rename function          update the ""move"" function of the adapter to use the ""rename"" function of the driver  instead of using a copy/delete combination. ",0,0,1
1061,1061,78,    fix missing overflow config  ref #6830 ,1,0,0
1062,1062,336,    update mobile predictor caller's interface          summary: update all the caller for the new interface          reviewed by: highker          differential revision: d9323167          fbshipit-source-id: a39335ceb402db0719f5f2314085ba9a81380308 ,0,1,0
1063,1063,1168,    [twigbridge] make appvariable check if security.context exists          if security isn't configured in the application  the `security.context` service  nor the `security.token_storage` service exists.     therefore  if a third-party bundle relies on the app.user check in twig templates  an exception was thrown about asking for an non-existing service.     instead  this change ,0,0,1
1064,1064,137,    refactoring in routing logic to allow adding allocation explanation that later can be shown ,0,0,1
1065,1065,1684,    greybus: stop storing dest_cport_id in message          we can derive the destination cport id of any (outbound) message     from the connection it's operation is associated with.  so we don't     need to store that information in every message.          as a result  we no longer need to record it at message initialization     time.          signed-off-by: alex elder <elder@lin,0,0,1
1066,1066,1985,    riscv: add prototypes for assembly language functions from head.s          add prototypes for assembly language functions defined in head.s      and include these prototypes into c source files that call those     functions.          this patch resolves the following warnings from sparse:          arch/riscv/kernel/setup.c:39:10: warning: symbol 'hart_lottery' was not declared.,0,1,0
1067,1067,1924,    usb: iuu_phoenix: fix bulk-message timeout          the bulk-message timeout is specified in milliseconds and should not     depend on hz.          cc: stable@vger.kernel.org     signed-off-by: johan hovold <jhovold@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
1068,1068,925,    make persistentaction independent from transportactions (elastic/x-pack-elasticsearch#742)          removes the transport layer dependency from persistentactions  makes persistentactionregistry immutable and rename actions into tasks in class and variable names.          original commit: elastic/x-pack-elasticsearch@e3e5b79c2845a73f4a9e384713b8c54e83a71782 ,0,0,1
1069,1069,919,    ath5k: update rf buffer handling           * use the new way to modify rf buffer and put some rf buffer        documentation on rfbufer.h           * merge all rf regs functions to one           * sync with legacy hal and sam's hal           * set gain_f settings so that gain_f optimization engine works        on rf5111/rf5112 (note that both hals only use step 0 for rf5111    ,1,0,1
1070,1070,1767,    added and using gmock matcher for hloinstruction     change: 153159175 ,0,1,0
1071,1071,92,    libperf: add cpus to struct perf_evlist          move cpus from tools/perf's evlist to libperf's perf_evlist struct.          committer notes:          fixed up this one:            tools/perf/arch/arm/util/cs-etm.c          signed-off-by: jiri olsa <jolsa@kernel.org>     cc: alexander shishkin <alexander.shishkin@linux.intel.com>     cc: alexey budankov <alexey.budankov@linux.,1,0,0
1072,1072,1335,    remove deprecated code paths that trigger a runtime notice ,1,0,1
1073,1073,1964,    rpmsg: add rpmsg support for mt8183 scp.          add a simple rpmsg support for mt8183 scp  that use ipi / ipc directly.          signed-off-by: pi-hsun shih <pihsun@chromium.org>     link: https://lore.kernel.org/r/20191112110330.179649-4-pihsun@chromium.org     signed-off-by: bjorn andersson <bjorn.andersson@linaro.org> ,0,1,0
1074,1074,373,    enabled more warnings ,0,0,1
1075,1075,1604,"    i2c: dynamically assign adapter id if it wasn't explictly specified          commit 488bf314b (""i2c: allow i2c_add_numbered_adapter() to assign a     bus id"") reworked i2c_add_numbered_adapter() to call i2c_add_adapter()     if requested bus was -1.          this allows to simplify driver's initialization procedure by using     just one function for static and dynamic adapter i",0,1,0
1076,1076,109,    add align_corners option to grid_sample and affine_grid  change default to false (#24929)          summary:     resolves: https://github.com/pytorch/pytorch/issues/20785     addresses https://github.com/pytorch/pytorch/issues/24470 for `affine_grid`     subsumes and closes: https://github.com/pytorch/pytorch/pull/24878 and likewise closes: https://github.com/pytorch/pytorch/iss,1,1,0
1077,1077,545,    vendor: update pfilter (fixes #4537)          github-pull-request: https://github.com/syncthing/syncthing/pull/4539 ,1,0,0
1078,1078,950,    [test] avoid xcrun in this particular test. (#3351)          it seems to be messing with environment variables.          rdar://problem/26981561 ,0,0,1
1079,1079,838,    removes the boost/algorithm/string/join dependency          this commit removes the `boost/algorithm/string/join` dependency     from the project by replacing `boost::algorithm::join` with     a simple helper function. ,0,0,1
1080,1080,786,    bridge: fix error path for kobject_init_and_add()          currently error return from kobject_init_and_add() is not followed by a     call to kobject_put().  this means there is a memory leak.  we currently     set p to null so that kfree() may be called on it as a noop  the code is     arguably clearer if we move the kfree() up closer to where it is     called (instead of aft,1,0,0
1081,1081,868,    select the document element  not the document.          fixes #1219. ,1,0,0
1082,1082,534,"    can: replace timestamp as unique skb attribute          commit 514ac99c64b ""can: fix multiple delivery of a single can frame for     overlapping can filters"" requires the skb->tstamp to be set to check for     identical can skbs.          without timestamping to be required by user space applications this timestamp     was not generated which lead to commit 36c01245eb8 ""can: fi",1,0,0
1083,1083,1331,"    [netfilter]: introduce nf_inet_ hook values          the ipv4 and ipv6 hook values are identical  yet some code tries to figure     out the ""correct"" value by looking at the address family. introduce nf_inet_*     values for both ipv4 and ipv6. the old values are kept in a #ifndef __kernel__     section for userspace compatibility.          signed-off-by: patrick mchardy <kaber",0,1,1
1084,1084,304,    #37212 remove unused locals ,0,0,1
1085,1085,864,    remove unneeded function wrappers ,0,0,1
1086,1086,59,"    [close #24435] send user_supplied_options to server          currently when puma gets a `:port` it doesn't know if it is rails' default port or if it is one that is specified by a user. because of this it assumes that the port passed in is always a user defined port and therefor 3000 always ""wins"" even if you specify `port` inside of the `config/puma.rb` file when booting your ",1,0,0
1087,1087,1145,    feature: allow posting a link with topics ,0,1,0
1088,1088,1788,    fix(ivy): ensure @animation host bindings/listeners work properly (#27896)          pr close #27896 ,1,0,0
1089,1089,258,    nfs refactor nfs4_check_serverowner_major_id          for session trunking  to compare nfs41_exchange_id_res with     existing nfs_client          signed-off-by: andy adamson <andros@netapp.com>     signed-off-by: anna schumaker <anna.schumaker@netapp.com> ,0,0,1
1090,1090,49,    ext4: make the extent_status code more robust against enomem failures          some callers of ext4_es_remove_extent() and ext4_es_insert_extent()     may not be completely robust against enomem failures (or the     consequences of reflecting enomem back up to userspace may lead to     xfstest or user application failure).          to mitigate against this  when trying to inser,0,1,0
1091,1091,1564,    asoc: remove use of __devinitconst          config_hotplug is going away as an option so __devinitconst is no     longer needed.          signed-off-by: bill pemberton <wfp5p@virginia.edu>     signed-off-by: mark brown <broonie@opensource.wolfsonmicro.com> ,0,0,1
1092,1092,1842,    [xla] get rid of deprecated methods on hloverifiedtestbase.          removed:           - module()      - parseandverifymodule()      - createnewmodule()          also made hlotestbase::createnewmodule() return a unique_ptr to make it     consistent with createnewverifiedmodule().          piperorigin-revid: 221008153 ,0,0,1
1093,1093,1127,    watcher: add proxy support to hipchat action (elastic/elasticsearch#3475)          this adds proxy support to the hipchat action. right now     neither hipchat nor slack nor pagerduty allow for this      but if you dont need a proxy for internal http connections      but you do for external  then this configuration cannot be done     without setting a proxy for those actions.  ,0,1,0
1094,1094,394,    asoc: cs42l56: use true/false returns for bool functions          return true or false instead of 1 and 0          signed-off-by: brian austin <brian.austin@cirrus.com>     signed-off-by: mark brown <broonie@linaro.org> ,1,0,0
1095,1095,487,    staging: dgap: fix various previously missed checkpatch errors          this patch fixes various small checkpatch errors     i missed in patches 01-10.          remove check for kfree of brd->channels as kfree is safe.     also there is no need to set it to null after freeing it.          remove a useless cast for a kzalloc return value.          remove double negative test in ,1,0,1
1096,1096,1469,    add support for api keys to access elasticsearch (#38291)          x-pack security supports built-in authentication service     `token-service` that allows access tokens to be used to     access elasticsearch without using basic authentication.     the tokens are generated by `token-service` based on     oauth2 spec. the access token is a short-lived token     (defaults to 20m),0,1,1
1097,1097,1529,    fix implementation of casting for arguments and return values of optional types.          old code was not properly handling optional.none. this commit fixes it.          unfortunately  it introduces some complexity into the devirtualizer apis  because now they have to return a pair of two values: the new devirtualized apply site and the value of the call  which are not the sam,1,0,0
1098,1098,1437,    [minor][build] fix java linter errors          ## what changes were proposed in this pull request?          this pr cleans up a few java linter errors for apache spark 2.3 release.          ## how was this patch tested?          ```bash     $ dev/lint-java     using `mvn` from path: /usr/local/bin/mvn     checkstyle checks passed.     ```          we can see the result from [tr,1,0,0
1099,1099,1831,    add debugger text writer iface ,0,1,0
1100,1100,964,    fix terminal instance layout dimensions          fixes #12573     fixes #12038 ,1,0,0
1101,1101,863,    staging/rdma/hfi1: fix regression in send performance          the clear_ahg call is new in hfi1 vs qib.  for small messages the progress     routine always builds one and clears out the ahg state when the queue has gone     to empty which is the predominant case for small messages.          inline the routine and avoid the call to sdma_ahg_free to mitigate the     performance ,1,0,0
1102,1102,1965,    arm: shmobile: r8a7779: add pcie clocks          signed-off-by: phil edworthy <phil.edworthy@renesas.com>     signed-off-by: simon horman <horms+renesas@verge.net.au> ,0,1,0
1103,1103,1069,    faster batchboxcox operator using mkl          summary: use mkl vml vspow() and row-major iteration for faster batchboxcox operator.          reviewed by: kennyhorror          differential revision: d6042052          fbshipit-source-id: 54fc6b9184cb341672183a77730d79a271d09207 ,0,0,1
1104,1104,1499,    fixes #11104: only have certain contributions created in the repleditor ,1,0,0
1105,1105,743,    the bang is also unnecessary               swift svn r17995 ,0,0,1
1106,1106,618,    changed get index settings api to use new internal get index settings api instead of relying on the cluster state api.          the new internal get index settings api is more efficient when it comes to sending the index settings from the master to the client via the     also the get index settings support now all the indices options.          closes #4620 ,0,0,1
1107,1107,87,    use default shell from the process side          fixes microsoft/vscode-remote-release#38 ,1,0,0
1108,1108,115,    v4l/dvb: dvb_ca_en50221: return -efault on copy_to_user errors          copy_to_user() returns the number of bytes remaining to be copied which     isn't the right thing to return here.  the comments say that these     functions in dvb_ca_en50221.c should return the number of bytes copied or     an error return.  i've changed it to return -efault.          signed-off-by: dan ca,1,0,0
1109,1109,600,    exp/draw: fix clipping bug where sp/mp were not shifted when r.min was.          image: add rectangle.containsrectangle method.          r=r  rsc     cc=golang-dev     https://golang.org/cl/4517130 ,1,0,0
1110,1110,457,    remove the _all metadata field (#26356)          * remove the _all metadata field          this change removes the `_all` metadata field. this field is deprecated in 6     and cannot be activated for indices created in 6 so it can be safely removed in     the next major version (e.g. 7). ,0,0,1
1111,1111,125,    fixing api_compatibility_test for python 3.8 by adding special-case handling          piperorigin-revid: 298685203     change-id: i454df7704215938833618a1d6deb2d72ca61767b ,1,1,0
1112,1112,1099,    arm: dove: fix compiler warnings with c=1 builds          add missing static keywords.     remove the unused function dove_crypto_init().          signed-off-by: andrew lunn <andrew@lunn.ch>     signed-off-by: jason cooper <jason@lakedaemon.net> ,0,0,1
1113,1113,1092,    create a shim for codecs that handles client duties          clients have to renegotiate frequently  and the shape of the interface     that a client wants is slightly different than the interface on the     server. create a new clientnegotiator interface that represents what     the client->server code would want to use (mostly  still evolving     encoder) and move versioning ,0,1,0
1114,1114,1073,    powerpc: make ppc_md.{halt  restart} __noreturn          powernv marks it's halt and restart calls as __noreturn. however      ppc_md does not have this annotation. add the annotation to ppc_md      and then to every halt/restart function that is missing it.          additionally  i have verified that all of these functions do not     return. occasionally i have added a spin lo,0,1,1
1115,1115,963,    bluetooth: mgmt_stop_discovery_failed()          this patches creates mgmt_stop_discovery_failed() which removes     pending mgmt_op_stop_discovery commands and sends proper command     status events.          this patch also fixes the mgmt_op_stop_discovery command leak in     case cancel inquiry fails.          signed-off-by: andre guedes <andre.guedes@openbossa.org>     acke,1,0,0
1116,1116,150,    iommu/amd: add pasid_state->invalid flag          this is used to signal the ppr_notifer function that no more     faults should be processes on this pasid_state. this way we     can keep the pasid_state safely in the state-table so that     it can be freed in the amd_iommu_unbind_pasid() function.          this allows us to not hold a reference to the mm_struct     during the ,0,1,1
1117,1117,1687,    fix profile linking ,1,0,0
1118,1118,214,    perf_counter: allow for data addresses to be recorded          paul suggested we allow for data addresses to be recorded along with     the traditional ips as power can provide these.          for now  only the software pagefault events provide data addresses      but in the future power might as well for some events.          x86 doesn't seem capable of providing this atm.    ,0,0,1
1119,1119,454,    [yahoo] fix typo ,1,0,0
1120,1120,1134,    add a deprecatedproptype module to show deprecation warnings          summary:     to allow smoother api changes for users we often deprecate props and keep them around for a while before removing them. right now it is all done manually  this adds a consistent way to show a warning when using a deprecated prop.          this also adds a deprecation warning of the website genera,0,1,0
1121,1121,113,    staging: olpc_dcon: olpc_dcon: fix spaces between operator and variables.          this issue is caught by checkpatch.pl and is related to the following     warning:             - check: spaces preferred around that '/' (ctx:vxv)          signed-off-by: emmanuil chatzipetru <chatzi.emanuel@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
1122,1122,1654,    hpt34x: fix config_hpt34x_autodma=n handling          programming dma mode may destroy current pio mode setting so if     config_hpt34x_autodma=n (the default case) make ide_tune_dma() fail     early by disabling all host dma masks and re-tune pio mode.          this fix doesn't help with the driver being broken but is needed     for some other changes.          signed-off-by: ,1,0,0
1123,1123,500,    update the default for include_type_name to false. (#37285)          * default include_type_name to false for get and put mappings.          * default include_type_name to false for get field mappings.          * add a constant for the default include_type_name value.          * default include_type_name to false for get and put index templates.          * default include_type_,0,0,1
1124,1124,1916,    experimental: new dashboard ui          this is the first iteration of an effort towards making a very good dashboard.          until we feel confident this is good  this dashboard will only be accessible through /admin/dashboard_next ,0,1,1
1125,1125,1606,"    [cell] allow linux to map cell regs on legacy slof tree.          the platforms missing the ""cpus"" property in the ""be"" node are mono-cell     platforms such as cab or getaway.          therefore it is possible to assume that if there is no ""cpus"" properties     under the ""be"" node then we can safely return the ""device node"" without     more checking. this is a bit hacky but ..",0,1,0
1126,1126,872,    fix missing alias for decorated classes in es5 ,1,0,0
1127,1127,669,    sema: allow an implicit conversion from t? to u? if t can be converted to u.          similar to the t -> u? conversion  allow t? to be converted to u? through a bind-convert-inject chain. naively adding this conversion creates ambiguities in the type checker  opening up multiple paths to the same solution in certain cases  so add a a special case to the solver that avoids intr,0,0,1
1128,1128,1746,    [patch] remove tty_dont_flip          remove tty_dont_flip tty flag.  this flag was introduced in 2.1.x kernels     to prevent the n_tty line discipline functions read_chan() and     n_tty_receive_buf() from running at the same time.  2.2.15 introduced     tty->read_lock to protect access to the n_tty read buffer  which is the     only state requiring protection between these t,0,1,1
1129,1129,1729,    iommu/arm-smmu: remove io-pgtable spinlock          with the io-pgtable code now robust against (valid) races  we no longer     need to serialise all operations with a lock. this might make broken     callers who issue concurrent operations on overlapping addresses go even     more wrong than before  but hey  they already had little hope of useful     or deterministic results. ,0,0,1
1130,1130,1647,    drm/vc4: add exec flags to allow forcing a specific x/y tile walk order.          this is useful to allow gl to provide defined results for overlapping     glblitframebuffer  which x11 in turn uses to accelerate uncomposited     window movement without first blitting to a temporary.  x11perf     -copywinwin100 goes from 1850/sec to 4850/sec.          v2: default to the same beh,0,1,1
1131,1131,1755,    net/rpc: clarify requirements for connections and codecs          1. connections and codecs need to be partially safe for concurrent use.        namely  read side is serialized by one mutex         and writing side is serialized by another.        current comment says that they need to be fully thread-safe         which makes the default implementations (gobclientcodec/gobserve,0,0,1
1132,1132,1798,    introduce `render :html` for render html string          this is an option for to html content with a content type of     `text/html`. this rendering option calls `erb::util.html_escape`     internally to escape unsafe html string  so you will have to mark your     string as html safe if you have any html tag in it.          please see #12374 for more detail. ,0,1,1
1133,1133,834,    ampersands in context menu not displayed (fixes #31787) ,1,0,0
1134,1134,133,    fixed #24654 -- based ordering circular references detection on columns.          thanks to elmar bucher for the report and tim for the review. ,1,0,0
1135,1135,379,    cherrypicking #66535          validate deletion admission object          backward compatibility: add validation for direct storage delete calls          apply nil validation to existing tests          revert behavior changes in deletecollection call          fixes validation on wiring graceful deletion          remove nil validation check          continue admission check on n,1,1,1
1136,1136,209,    libperf: adopt perf_mmap__read_done() from tools/perf          move perf_mmap__read_init() from tools/perf to libperf and export it in     the perf/mmap.h header.          signed-off-by: jiri olsa <jolsa@kernel.org>     cc: alexander shishkin <alexander.shishkin@linux.intel.com>     cc: michael petlan <mpetlan@redhat.com>     cc: namhyung kim <namhyung@kernel.org>     cc: peter,0,0,1
1137,1137,65,    team: send only changed options/ports via netlink          this patch changes event message behaviour to send only updated records     instead of whole list. this fixes bug on which userspace receives non-actual     data in case multiple events occur in row.          signed-off-by: jiri pirko <jpirko@redhat.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
1138,1138,1428,    refactor: tried to simplify and also minimize scope a bit for #10323 ,0,0,1
1139,1139,923,    remove some save-and-restores          an awful pattern we use throughout the compiler is to save and restore global flags just for little things.  in this case  it was just to turn on some extra options in ast printing for type variables. the kicker is that the astdumper doesn't even respect this flag. add this as a printoption and remove the offending save-and-restores.      ,0,0,1
1140,1140,1271,"    refactored the way play access config          * introduced playconfig helper which is more suited to idiomatic use of     typesafe config     * migrated a number of config options from old paths to new paths     * removed ""modules"" from configuration keys     * moved more settings to reference.conf     * introduced idiom of using ""null"" rather than blank or no setting for     ",0,1,1
1141,1141,1274,    did some refactoring. ,0,0,1
1142,1142,406,    i18n: split moveconfirmation and confirmmove (fixes #5509) ,1,0,0
1143,1143,1559,    drm/amd/powerplay: enable power down asic task. (v2)          v2: agd: rebase on upstream          signed-off-by: rex zhu <rex.zhu@amd.com>     reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,1,1
1144,1144,228,    ide-atapi: add a len-parameter to ide_queue_pc_tail          this is in preparation for removing ide_atapi_pc.          there should be no functional change resulting from this patch.          signed-off-by: borislav petkov <petkovbb@gmail.com> ,0,1,0
1145,1145,1801,    block: remove unused req_unplug          the request inherits the unplug flag from the bio  but it isn't actually     used. the bio flag stops at __make_request()  which tells it to unplug     after submission. passing it on to the request doesn't make any sense.          signed-off-by: jens axboe <jens.axboe@oracle.com> ,0,0,1
1146,1146,753,    added approximate poisson image blending ,0,1,0
1147,1147,1310,    more work on unicode support in pcre. when ug(unicode) is on  all     strings passed to pcre have to be is_unicode or is_string in utf-8     encoding. failure to do so will result in unpredictable results. ,1,0,0
1148,1148,546,    remove redundant throws declarations ,0,0,1
1149,1149,826,"    os/user: fix build with ""osusergo"" build tag          fixes #24841     updates #24845          change-id: i4a5c05f4cbf9692bd6cab48baf3cc51fa43fe5a9     reviewed-on: https://go-review.googlesource.com/106837     reviewed-by: brad fitzpatrick <bradfitz@golang.org> ",1,0,0
1150,1150,895,    mm  oom: remove redundant task_in_mem_cgroup() check          oom_unkillable_task() can be called from three different contexts i.e.     global oom  memcg oom and oom_score procfs interface.  at the moment     oom_unkillable_task() does a task_in_mem_cgroup() check on the given     process.  since there is no reason to perform task_in_mem_cgroup()     check for global oom and o,0,0,1
1151,1151,1444,    improve accuracy of remove unnecessary await fix (#32384) ,1,0,1
1152,1152,1280,    fix #2042 ,1,0,0
1153,1153,249,    iwlwifi: remove g2 from csr hw rev          remove refernce of g2 and use offical number for hw rev.          signed-off-by: wey-yi guy <wey-yi.w.guy@intel.com> ,0,0,1
1154,1154,1301,    added a visitor for set objects ,0,1,0
1155,1155,1270,    ipv6: implement dataplane support for rthdr type 4 (segment routing header)          implement minimal support for processing of sr-enabled packets     as described in     https://tools.ietf.org/html/draft-ietf-6man-segment-routing-header-02.          this patch implements the following operations:     - intermediate segment endpoint: incrementation of active segment and rerout,0,1,0
1156,1156,1741,    x86/vt-d: fix incorrect bit operations in setting values          the function context_set_address_root() and set_root_value are setting new     address in a wrong way  and this patch is trying to fix this problem.          according to intel vt-d specs(feb 2011  revision 1.3)  chapter 9.1 and 9.2      field ctp in root entry is using bits 12:63  field asr in context entry is  ,1,0,0
1157,1157,2020,    fix(errors): [2/2] rename exception to error; remove from public api          breaking change:          exceptions are no longer part of the public api. we don't expect that anyone should be referring to the exception types.          exceptionhandler.call(exception: any  stacktrace?: any  reason?: string): void;     change to:     errorhandler.handleerror(error: any): void; ,1,0,0
1158,1158,1047,    fix 'path is required in .pageview()' in ga addon          see https://github.com/storybookjs/storybook/issues/6012 ,1,0,0
1159,1159,1372,    x86: move suspend wakeup code to c          move wakeup code to .c  so that video mode setting code can be shared     between boot and wakeup. remove nasty assembly code in 64-bit case by     re-using trampoline code. stack setup was fixed to clear high 16bits     of %esp  maybe that fixes some machines.          .c code sharing and morse code was done h. peter anvin  sam ravnb,0,0,1
1160,1160,1822,    checkout: check return value of resolve_refdup before using hash          if resolve_refdup() fails it returns null and possibly leaves its hash     output parameter untouched.  make sure to use it only if the function     succeeded  in order to avoid accessing uninitialized memory.          found with t/t2011-checkout-invalid-head.sh --valgrind.          signed-off-by: rene sc,0,0,1
1161,1161,1215,    separate ui/site dependencies ,0,0,1
1162,1162,1982,    [media] mt9v022: add support for mt9v024          driver for mt9v022 camera sensor is fully compatible for mt9v024 camera sensor     with the exception of several registers which have been changed addresses.     mt9v024 also has improved and additional features  but they are currently not in use.          signed-off-by: alex gershgorin <alexg@meprolight.com>     signed-off-by: ,0,1,1
1163,1163,527,    adding $img_path in curly; fixing words order ,1,0,0
1164,1164,370,    net: convert atomic_t net::count to refcount_t          since net could be obtained from rcu lists      and there is a race with net destruction      the patch converts net::count to refcount_t.          this provides sanity checks for the cases of     incrementing counter of already dead net      when maybe_get_net() has to used instead     of get_net().          drivers: ally,0,0,1
1165,1165,241,    fixes in bulk edit ,1,0,0
1166,1166,713,    fix(all): updated tslint rules to latest ,1,0,0
1167,1167,778,    powerpc/perf/{hv-gpci  hv-common}: generate requests with counters annotated          this adds (in req-gen/) a framework for defining gpci counter requests.     it uses macro magic similar to ftrace.          also convert the existing hv-gpci request structures and enum values to     use the new framework (and adjust old users of the structs and enum     values to cope with ch,0,1,1
1168,1168,1794,    adding dropout to dnn estimators  zero initialization for linear estimators. verbosity pass through for default monitor.     change: 118995322 ,0,1,1
1169,1169,491,    nlm nfsv4: wait on local locks before we put rpc calls on the wire          use fl_access flag to test and/or wait for local locks before we try     requesting a lock from the server          signed-off-by: trond myklebust <trond.myklebust@netapp.com> ,0,0,1
1170,1170,992,    passthrough bel in conpty (#2990)          ð     [insert chorus of the bells here -dhowett]          fixes #2952. ,1,0,0
1171,1171,529,    v4l/dvb (3870): convert dib3000* to refactored tuner code          convert to tuner_ops calls.     remove pll function pointers from structure.     remove unneeded tuner calls.          signed-off-by: andrew de quincey <adq_dvb@lidskialf.net>     signed-off-by: mauro carvalho chehab <mchehab@infradead.org> ,0,0,1
1172,1172,142,    add %% escape to util.format()          fixes #1273. ,1,0,0
1173,1173,119,    fix: category permissions weren't properly loaded when /categories is the homepage     fix: don't scope to a specific category when creating a new topic from /categories ,1,0,0
1174,1174,1629,    update setapp/getapp prototypes in dcbnl_rtnl_ops to return int instead of u8          v2: fixed issue with checking return of dcbnl_rtnl_ops->getapp()          signed-off-by: anish bhatt <anish@chelsio.com>     signed-off-by: david s. miller <davem@davemloft.net> ,1,0,0
1175,1175,339,    [sil] let alloc_box return a single value.          and use project_box to get to the address value.     silgen now generates a project_box for each alloc_box.     and irgen re-uses the address value from the alloc_box if the operand of project_box is an alloc_box.     this lets the generated code be the same as before.          other than that most changes of this (quite large,0,0,1
1176,1176,1772,    media: staging: atomisp: remove fsf snail address          snail address is subject to change  remove it completely from the code.          this has been done using the following script:                  sed -i '/you should/ /02110-1301/d' \                     $(git grep -n -w franklin -- drivers/staging/media/atomisp/ | cut -f1 -d:)          no functional change intended.    ,0,0,1
1177,1177,937,    argumentstash for scalar arguments (#21931)          summary:     scalars are being traced as constants.     this pr is to fix this issue.          the onnx graph for test_full_op() before and after this change:          def test_full_op():       class test_full(nn.module):         def forward(self  x):           return torch.full((3  4)  x  dtype=torch.long)       model = test,1,0,0
1178,1178,1900,    [patch] u32 vs. pm_message_t fixes for drivers/net          this fixes remaining u32s in drivers/ net.          signed-off-by: pavel machek <pavel@suse.cz>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ,1,0,0
1179,1179,1648,    remove duplicated `table_exists?`          `table_exists?` is already exist in `modelschema`.          https://github.com/rails/rails/blob/5cab344494c340ea82a35b46efa06b94f0b7730b/activerecord/lib/active_record/model_schema.rb#l339-l341 ,0,0,1
1180,1180,338,    * shorten namespaces     * fix calling static methods as non static     * joins - implode change ,1,0,0
1181,1181,201,    add tfdbg support to grpcsession          * along the way  unify the way the debugger works in directsession (non-distributed sessions) and mastersession (for distributed sessions).       * the summarizdebugtensorwatches method is invoked in directsession::getorcreateexecutors() and mastersession::hashbuildgraphoptions() method to generate keys for partition graphs and executor,0,1,1
1182,1182,1121,    modified project structure to work with buildr ,0,1,0
1183,1183,1853,    refactor(core): misc refactoring to support upcoming changes to improve synthetic host bindings (#35884)          this commit performs a few updates to internal functions that would be required in upcoming changes to support synthetic host bindings in directives.          * the `elementpropertyinternal` function was refactored to accept renderer as an argument (prior to that  t,0,0,1
1184,1184,2007,    i40e/i40evf: add nvmupdate support          this implements a state machine intended to support the userland tool for     updating the device eeprom. the state machine implements one-shot reads      writes  multi-step write sessions  and checksum requests. if we're in the middle     of a multi-step write session  no one should fire off other writes  however  one     shot reads ,0,1,0
1185,1185,924,    [spark-15236][sql][spark shell] add spark-defaults property to switch to use inmemorycatalog          ## what changes were proposed in this pull request?     this pr change repl/main to check this property `spark.sql.catalogimplementation` to decide if `enablehivesupport `should be called.          if `spark.sql.catalogimplementation` is set to `hive`  and hive classes are buil,0,1,0
1186,1186,991,    harmonize metrics test          this commit harmonizes metrics test to rely on `metricrun.simple()`     rather than configuring a simple `meterregistry` manually. rather than     applying related auto-configurations automatically  `metricsrun` only     enable the absolute minimum.          see gh-14255 ,0,0,1
1187,1187,105,    fix tostring of bytes value ,1,0,0
1188,1188,2013,    3.x: fix observable.window (size & time) cancellation and abandonment (#6761) ,1,0,0
1189,1189,931,    netfilter: nf_ct_helper: implement variable length helper private data          this patch uses the new variable length conntrack extensions.          instead of using union nf_conntrack_help that contain all the     helper private data information  we allocate variable length     area to store the private helper data.          this patch includes the modification of all existi,0,0,1
1190,1190,1013,    src: add v8.getheapstatistics() function          add a one-to-one binding to v8::getheapstatistics().  returns info on     the current state of the js heap  like total size and amount used. ,0,1,0
1191,1191,1753,    framework created for distribution. fixed a major bug causing bad animation. added new feature to show textfield placeholder text on toolbar. project converted to mvc pattern (created separate classes). ,1,1,0
1192,1192,636,    [security] fixed issue where authentication listeners clear unrelated tokens          this commit fixes an issue where authentication listeners clear all security tokens in case of authentication failure.     this behavior makes it impossible to combine certain authentication mechanisms  notably x509 with form-based login. ,1,0,0
1193,1193,966,    tmpfs: demolish old swap vector support          the maximum size of a shmem/tmpfs file has been limited by the maximum     size of its triple-indirect swap vector.  with 4kb page size  maximum     filesize was just over 2tb on a 32-bit kernel  but sadly one eighth of     that on a 64-bit kernel.  (with 8kb page size  maximum filesize was just     over 4tb on a 64-bit kernel  b,0,0,1
1194,1194,128,    move some static functions out of wallet.h/cpp          this commit just moves a few function declarations and updates callers.     function bodies are moved in two followup moveonly commits.          this change is desirable because wallet.h/cpp are monolithic and hard to     navigate  so pulling things out and grouping together pieces of related     functionality should impro,0,0,1
1195,1195,1309,    (refs #279)fix redirect url generation. ,1,0,0
1196,1196,1512,    added support for startup.configurecontainer     - startup.configurecontainer allows users to configure a 3rd party di     container in a first class way in the startup class. 3rd party containers     plug in via iserviceproviderfactory<tcontainerbuilder> configured in     iwebhostbuilder.configureservices.     - added tests ,0,1,0
1197,1197,795,    media: marvell-ccic: rename the clocks          use the names more suitable for devicetree bindings.          there are no board files utilizing this  thus we seem to be at liberty     at renaming this without consequences.          signed-off-by: lubomir rintel <lkundrak@v3.sk>     signed-off-by: sakari ailus <sakari.ailus@linux.intel.com>     signed-off-by: mauro carvalho che,0,0,1
1198,1198,1088,    cmd/compile: use proved bounds to remove signed division fix-ups          prove is able to find 94 occurrences in std cmd where a divisor     can't have the value -1. the change removes     the extraneous fix-up code for these cases.          fixes #25239          change-id: ic184de971f47cc57c702eb72805b8e291c14035d     reviewed-on: https://go-review.googlesource.com/c/130215  ,1,0,0
1199,1199,1057,    deprecated scala.reflect.generic  except for by...          deprecated scala.reflect.generic  except for bytecodecs. after we move     some non-internal things out of scala.reflect.internal we should go back     and improve some deprecation messages (i.e. point somewhere useful.) no     review. ,0,0,1
1200,1200,1060,    fix all violators of e231 ,1,0,0
1201,1201,1283,    alsa: print function symbol in the error messages          use the new %pf for error messages in snd_device_*() functions     to give more understandable results.          signed-off-by: takashi iwai <tiwai@suse.de> ,0,0,1
1202,1202,1847,    sh: consolidated sh7751/sh7780 pci support.          this cleans up quite a lot of the pci mess that we     currently have  and attempts to consolidate the     duplication in the sh7780 and sh7751 pci controllers.          signed-off-by: paul mundt <lethal@linux-sh.org> ,0,0,1
1203,1203,293,    psf/black code formatting (#1277) ,0,0,1
1204,1204,1433,"    nfp: make nfp_net alloc/init/cleanup/free not depend on netdevs          struct nfp_net represents a vnic  we will be moving away from the     requirement for every vnic to have a netdev associated with it.     remove ""netdev"" from some function names and prefer passing     struct nfp_net pointer as argument instead of struct net_device *.          signed-off-by: jakub kicinski",0,0,1
1205,1205,1366,    refactor handling of :action default in routing          the longstanding convention in rails is that if the :action parameter     is missing or nil then it defaults to 'index'. up until rails 5.0.0.beta1     this was handled slightly differently than other routing defaults by     deleting it from the route options and adding it to the recall parameters.          with the recen,0,0,1
1206,1206,235,    remove disabled code - threaded fetching. this can be implemented     on a upper level and by offloading it we reduce the complexity of     the core. ,0,0,1
1207,1207,1983,    [qt] simplify return code and return values in txtablemodel          - also move an added space in a string where it belongs ,0,0,1
1208,1208,1519,    staging:iio:hmc5843: remove unused lsb register #defines          signed-off-by: peter meerwald <pmeerw@pmeerw.net>     signed-off-by: jonathan cameron <jic23@kernel.org> ,0,0,1
1209,1209,531,    [patch] rpc: ensure xdr iovec length is initialized correctly in call_header           fix up call_header() so that it calls xdr_adjust_iovec().      fix calculation of the scratch buffer length in xdr_init_encode().           signed-off-by: trond myklebust <trond.myklebust@netapp.com> ,1,0,0
1210,1210,796,"    mac80211: change workqueue back to non-freezeable          ""mac80211: make workqueue freezable"" made the mac80211     workqueue freezeable to prevent us from doing any work after the     driver went away.  this was fine before mac80211 had any suspend     support.          however  now we want to flush this workqueue in suspend().  because     the thread for a freezeable workqu",1,0,0
1211,1211,1959,    @added support for socket and popen file types to ftp_fput (jason) ,0,1,0
1212,1212,54,"    memcg: rename mem_cgroup_charge_type_mapped as mem_cgroup_charge_type_anon          now  in memcg  2 ""mapped"" enum/macro are found      mem_cgroup_charge_type_mapped      mem_cgroup_stat_file_mapped          thier names looks similar to each other but the former is used for     accounting anonymous memory. rename it as type_anon.          signed-off-by: kamezawa hiroyuki <kamez",1,0,0
1213,1213,453,    pinctrl: devicetree: use strlen() instead of hardcoded number          improve readability by replacing a hardcoded number requiring a comment     by strlen().          gcc is smart enough to evaluate the length of a constant string at     compile-time.          signed-off-by: geert uytterhoeven <geert+renesas@glider.be>     link: https://lore.kernel.org/r/20190731132917.17607-,0,0,1
1214,1214,1452,    added today extension to ios example app.          this demonstrates that apis not available to an extension can compile successfully if they are marked with ns_extension_unavailable_ios. ,0,1,0
1215,1215,337,    spelling corrections in c-sharp compiler ,1,0,0
1216,1216,720,    x32: fix coding style violations in the x32 vdso code          move the prototype for x32_setup_additional_pages() to a header file      and adjust the coding style to match standard.          signed-off-by: h. peter anvin <hpa@linux.intel.com>     cc: h. j. lu <hjl.tools@gmail.com> ,1,0,1
1217,1217,1024,    dbg: renamed filereader to filehelper ,0,0,1
1218,1218,1896,    arm: integrator: switch to fetch clocks from device tree          this atomic commit changes the integrator clock implementation     and the machines to register clocks from the device tree and     use these instead of the previous hard-coded clocks.          in the clock implementation all hard-coded clocks and the     special initialization function call goes away  and is    ,0,0,1
1219,1219,196,    atomisp: remove c_run define and code          we are not going to be building for anything but linux so the code bracketed     by c_run is not used and not needed.          signed-off-by: alan cox <alan@linux.intel.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,0,1
1220,1220,1025,    lowercase the first character in compiler diagnostics for consistency          swift svn r24634 ,0,0,1
1221,1221,606,    fixed file globbing in documentation parsers ,1,0,0
1222,1222,1935,    introduce new capability for relations and use it ,0,1,0
1223,1223,740,    refactor ai api and start implementing ai monitoring ,0,0,1
1224,1224,626,    acpi / pm: fix possible null pointer deref in acpi_pm_device_sleep_state()          after commit fa1675b (acpi / pm: rework and clean up     acpi_dev_pm_get_state()) a null pointer dereference will take place     if null is passed to acpi_pm_device_sleep_state() as the second     argument.          fix that by avoiding to use the pointer that may be null until     it's necessar,1,0,0
1225,1225,447,    fix plugin name check (#2736)          fixes #2735 ,1,0,0
1226,1226,647,    change strategy for zipdownloader          try to use unzip command-line before ziparchive as this one does not correctly handle file permissions whereas unzip does. ,1,0,0
1227,1227,1188,    fix torch.sparse.sum parsing of dim. (#16517)          summary:     fixes https://github.com/pytorch/pytorch/issues/16501.     pull request resolved: https://github.com/pytorch/pytorch/pull/16517          differential revision: d13865322          pulled by: gchanan          fbshipit-source-id: fa0ac37a9e7b8f19a5bdf75e5771128e48c41612 ,1,0,0
1228,1228,1562,    dmaengine: ppc4xx: fix off-by-one build failure          there are two poly_store  but one should have been poly_show.          |adma.c:4382:16: error: conflicting types for 'poly_store'     | static ssize_t poly_store(struct device_driver *dev  const char *buf      |                ^~~~~~~~~~     |adma.c:4363:16: note: previous definition of 'poly_store' was here     | static ,1,0,0
1229,1229,1176,    make highgui.hpp independent from c api ,0,0,1
1230,1230,1183,    - fixed bug #55073 (php-cli-webserver does not listen on ipv6 interfaces)  letting getaddrinfo(3) validate ipv6 addresses. ,1,1,0
1231,1231,1770,    fixed #368:           - added assertions to cause failure earlier      - added test case      - use batchsourcefile length (characters) rather than file length (bytes) ,1,1,0
1232,1232,2005,    [powerpc] fix of node refcnt underflow in 836x and 832x platform code          incorrect use of of_find_node_by_name() causes of_node_put()     on a node which has already been put.  it causes the refcount of     the node to underflow  which triggers the warn_on in kref_get     for 836x and 832x.  this fixes it.          signed-off-by: li yang <leoli@freescale.com>     signed-o,1,0,0
1233,1233,1250,    drm/i915: rename global i915 to i915_modparams          our global struct with params is named exactly the same way     as new preferred name for the drm_i915_private function parameter.     to avoid such name reuse lets use different name for the global.          v5: pure rename     v6: fix          credits-to: coccinelle          @@     identifier n;     @@     (     -       ,1,0,1
1234,1234,1093,    [media] move i2c files into drivers/media/i2c          move ancillary i2c drivers into drivers/media/i2c  in order to     better organize them.          signed-off-by: mauro carvalho chehab <mchehab@redhat.com> ,0,0,1
1235,1235,1910,    few fixes - import from ui working ,1,0,0
1236,1236,436,    clk: exynos5433: add clk_ignore_unused flag to sclk_ioclk_i2s1_bclk          the sclk_ioclk_i2s1_bclk clock is not currently handled by any driver     and disabling this clock by the clk core prevents proper operation     of the i2s1 block. clk_ignore_unused flag is added as a temporary fix.          signed-off-by: sylwester nawrocki <s.nawrocki@samsung.com>     reviewed-by: ch,1,1,0
1237,1237,1373,    sped up the computation of the gradients of the convolution layer wrt the     inputs by 30% on gpu.     change: 118221540 ,0,0,1
1238,1238,624,    (1) some changes to interactive compiler interf...          (1) some changes to interactive compiler interface. 2) added     (symbol.hastypeat 3) added flatten/transpose/unzip to traversableclass ,0,1,1
1239,1239,856,    mac80211: send notification on new peer candidate for our secure mesh          also  advertise support for mesh authentication.          signed-off-by: javier cardona <javier@cozybit.com>     signed-off-by: john w. linville <linville@tuxdriver.com> ,0,1,0
1240,1240,1917,    support multiple installers in a composer-installer package. ,0,1,0
1241,1241,2026,    add a unit test for udpinterface communication. ,0,1,0
1242,1242,1096,    add buffer_read16be()          add a function to read 16 bits in big-endian to a uint16_t. ,0,1,0
1243,1243,1482,    add @functionalinterface to remaining public and protected interfaces          see gh-6857 ,0,1,0
1244,1244,273,    qede: fix internal loopback failure with jumbo mtu configuration          driver uses port-mtu as packet-size for the loopback traffic. this patch     limits the max packet size to 1.5k to avoid data being split over multiple     buffer descriptors (bds) in cases where mtu > page_size.          signed-off-by: sudarsana reddy kalluru <skalluru@marvell.com>     signed-off-by: ari,1,0,0
1245,1245,1566,    add object type to schema          summary: this diff adds objecttypeannotation to the codegen schema  throwing for the missing implementation sites added in the next diffs for easier review-ability. also adds a schema fixture that is flow checked for review  but does not export it because the tests would fail          reviewed by: thesavior          differential revision: d167,0,1,0
1246,1246,1087,    kvm: vmx: fix the spelling of cpu_based_use_tsc_offsetting          the mis-spelling is found by checkpatch.pl  so fix them.          signed-off-by: xiaoyao li <xiaoyao.li@intel.com>     signed-off-by: paolo bonzini <pbonzini@redhat.com> ,1,0,0
1247,1247,1361,    fix fd leak in http-fetch          added a call to finish_request to clean up resources if the server     returned a 404 and there are no alternates left to try.          signed-off-by: nick hengeveld <nickh@reactrix.com>     signed-off-by: junio c hamano <junkio@cox.net> ,1,1,1
1248,1248,1483,    fix implicit any error for table ,1,0,0
1249,1249,854,    [string] add substring.base          adds substring.base  analogous to slice.base  to access the entire     string.          tests added. ,0,1,0
1250,1250,2014,    cleanup comments and class names s/elasticsearch/elasticsearch           * clean up s/elasticsearch/elasticsearch on docs/*      * clean up s/elasticsearch/elasticsearch on src/* bin/* & pom.xml      * clean up s/elasticsearch/elasticsearch on notice.txt and readme.textile          closes #4634 ,0,0,1
1251,1251,188,    move readfile  writefile  and readdir into a separate io/ioutil package.     this breaks the dependency of package io on package bytes.          r=rsc     cc=golang-dev     https://golang.org/cl/163085 ,0,0,1
1252,1252,1548,    do not increment nattempts by more than one for every good connection.          this slows the increase of the nattempts in addrman while partitioned       even if the node hasn't yet noticed the partitioning. ,0,0,1
1253,1253,1383,    fixed bug #3314 where the top level path would be deleted along with files in delete_files() ,1,0,0
1254,1254,1094,    netdevice: safe convert to netdev_priv() #part-2          we have some reasons to kill netdev->priv:     1. netdev->priv is equal to netdev_priv().     2. netdev_priv() wraps the calculation of netdev->priv's offset  obviously        netdev_priv() is more flexible than netdev->priv.     but we cann't kill netdev->priv  because so many drivers reference to it     directly.      ,0,0,1
1255,1255,807,    [plays] improve extraction and add support for embed urls ,0,1,0
1256,1256,329,    added tests ,0,1,0
1257,1257,801,    alsa: firewire-lib: replace pointer callback to flush isoc contexts in amdtp domain          an isoc context for amdtp stream is flushed to queue packet     by a call of pcm.pointer. this commit extends this for amdtp     domain.          signed-off-by: takashi sakamoto <o-takashi@sakamocchi.jp>     link: https://lore.kernel.org/r/20191018061911.24909-3-o-takashi@sakamocchi.jp ,0,0,1
1258,1258,1951,    add _all option to nodes based operations ,0,1,0
1259,1259,1818,    fixed the shebang lines on the python scripts.          also  removed the one from modules/python/src2/cv.py and cleared its     executable bit  since it's not a script. ,1,0,1
1260,1260,1539,    ath9k: add debugfs support for mac/baseband samples          this patch keep track of number of samples that includes     dma debugs registers  pcu observe  cr  channel noise      cycle conters  noisefloor history buffer and last n number     of tx and rx descriptor status. these samples are grouped     in table manner which dumping in debgufs.          debugfs file location:  ,0,1,1
1261,1261,1031,    fixing schema and tests ,1,0,0
1262,1262,298,    mtd: spi-nor: remove unused enum spi_nor_ops          the ops aren't used in any spi nor controller. therefore  remove them     altogether.          signed-off-by: michael walle <michael@walle.cc>     signed-off-by: tudor ambarus <tudor.ambarus@microchip.com> ,0,0,1
1263,1263,1021,    cmd/go: merge module support from x/vgo repo          this cl corresponds to cl 123361  the final manual cl in that repo      making this the final manual sync.          all future commits will happen in this repo (the main go repo)      and we'll update x/vgo automatically with a fixed patch+script.          change-id: i572243309c1809727604fd704705a23c30e85d1a     reviewed-on:,0,0,1
1264,1264,36,    usb: usb3503: add pm functions          the usb3503 needs to switch to standby mode while suspending and should     switch to hub mode when resumed. also we can control clock on pm     function.          signed-off-by: joonyoung shim <jy0922.shim@samsung.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,0,1,0
1265,1265,1369,    refactor hub and socket actors ,0,0,1
1266,1266,1544,    staging: rtl8187se: remove unnecessary comments in ieee80211_crypt_ccmp.c          this patch removes unnecessary comments written in ieee80211/ieee80211_crypt_ccmp.c.     and hence also  removes the following checkpatch.pl issue-     error: do not use c99 // comments          signed-off-by: rashika kheria <rashika.kheria@gmail.com>     reviewed-by: josh triplett <josh@joshtrip,0,0,1
1267,1267,1445,"    x86: build fix for ""x86: fix c1e && nx6325 stability problem""          fix:           arch/x86/kernel/built-in.o: in function `dmi_ignore_irq0_timer_override':      boot.c:(.init.text+0x3ea4): undefined reference to `force_mask_ioapic_irq_2'          signed-off-by: ingo molnar <mingo@elte.hu> ",1,0,0
1268,1268,737,    dccp ccid-2: implementation of circular ack vector buffer with overflow handling          this completes the implementation of a circular buffer for ack vectors  by     extending the current (linear array-based) implementation.  the changes are:           (a) an `overflow' flag to deal with the case of overflow. as before  dynamic          growth of the buffer will not be suppo,0,1,1
1269,1269,648,    nfs: start printks w/ nfs: even if __func__ shown          this patch addresses printks that have some context to show that they are     from fs/nfs/  but for the sake of consistency now start with nfs:          signed-off-by: weston andros adamson <dros@netapp.com>     signed-off-by: trond myklebust <trond.myklebust@netapp.com> ,0,0,1
1270,1270,1560,    atomic.h: add atomic64 cmpxchg  xchg and add_unless to powerpc          [akpm@linux-foundation.org: build fixes]     signed-off-by: mathieu desnoyers <mathieu.desnoyers@polymtl.ca>     cc: paul mackerras <paulus@samba.org>     cc: benjamin herrenschmidt <benh@kernel.crashing.org>     signed-off-by: andrew morton <akpm@linux-foundation.org>     signed-off-by: linus torvalds <tor,0,1,0
1271,1271,1796,    various fixes for ember 2.10 ,1,0,0
1272,1272,1942,    enhanced session put          added the ability to put an array  and have it add individual session     items. ,0,1,1
1273,1273,1981,    mxc: mx21ads base support          [patch v6] mxc: mx21ads base support          base machine support for the  freescale i.mx21ads     (m9328mx21adse) application development system.          signed-off-by: ivo clarysse <ivo.clarysse@gmail.com>     signed-off-by: sascha hauer <s.hauer@pengutronix.de> ,0,1,0
1274,1274,710,    [spark-14844][ml] add setfeaturescol and setpredictioncol to kmeansmâ¦          ## what changes were proposed in this pull request?          introduction of setfeaturescol and setpredictioncol methods to kmeansmodel in ml library.          ## how was this patch tested?          by running kmeanssuite.          author: dominik jastrzÄbski <dominik.jastrzebski@codilime.com>       ,0,1,0
1275,1275,1993,"    fix queue size when using beantstalk driver (#19465)          the ""total_jobs"" property is not the actual number of jobs left to process      but the cumulative count of jobs created in this tube in the current beanstalkd process      so it's not decreasing when a job is done.     i think it's better to return the ""current_jobs_ready"" because it is representing the actual numbe",1,0,0
1276,1276,1817,    [json] update language service & server & markedstring escaping fix. fixes #11413 ,1,0,0
1277,1277,1370,    add component stack to uncontrolled-to-controlled warning (#9416)          https://twitter.com/julianvmodesto/status/836089555304448000     https://twitter.com/abevoelker/status/836040051993763842 ,0,1,0
1278,1278,416,    nl80211/mac80211: mesh: add mesh path change count to mpath info          expose path change count to destination in mpath info          signed-off-by: julan hsu <julanhsu@google.com>     signed-off-by: johannes berg <johannes.berg@intel.com> ,0,1,0
1279,1279,1963,    fix double pnacl boot (thanks @isaacl) ,1,0,0
1280,1280,1863,    cleanup freeze methods and move them down to queryshardcontext ,0,0,1
1281,1281,628,    feature: allow columns on group members page to be sortable. ,0,1,0
1282,1282,1780,    new inode method: ->free_inode()          a lot of ->destroy_inode() instances end with call_rcu() of a callback     that does rcu-delayed part of freeing.  introduce a new method for     doing just that  with saner signature.          rules:     ->destroy_inode         ->free_inode             f                       g               immediate call of f()                       ,0,1,0
1283,1283,360,    regulator: hi655x: enable regulator for hi655x pmic          add the regulator driver for hi655x pmic.          signed-off-by: chen feng <puck.chen@hisilicon.com>     signed-off-by: fei wang <w.f@huawei.com>     signed-off-by: xinwei kong <kong.kongxinwei@hisilicon.com>     reviewed-by: haojian zhuang <haojian.zhuang@linaro.org>     signed-off-by: mark brown <broonie@kernel.org,0,1,0
1284,1284,1743,    refactor: replace all uses of boost::optional with our own optional type          after this:          - `boost::optional` is no longer used directly (only through `optional`         which is an alias for it)     - `boost/optional.hpp` is only included in one place ,0,0,1
1285,1285,797,    staging: brcm80211: remove usage of ether_max_len definition          the linux include file if_ether.h already provides a definition     eth_frame_len although this is excluding checksum. so code uses     eth_frame_len+eth_fcs_len now.          reviewed-by: brett rudley <brudley@broadcom.com>     reviewed-by: henry ptasinski <henryp@broadcom.com>     reviewed-by: roland vossen,0,0,1
1286,1286,1899,    add xmaptype to the extensions api ,0,1,0
1287,1287,1240,    3.x: have `internal.operator.observable` unit tests extends `rxjavatest` - 6 (#6607)          this commit updates the unit tests for `internal.operator.observable`          related: #6583 ,0,0,1
1288,1288,1191,    atomic: use <linux/atomic.h>          this allows us to move duplicated code in <asm/atomic.h>     (atomic_inc_not_zero() for now) to <linux/atomic.h>          signed-off-by: arun sharma <asharma@fb.com>     reviewed-by: eric dumazet <eric.dumazet@gmail.com>     cc: ingo molnar <mingo@elte.hu>     cc: david miller <davem@davemloft.net>     cc: eric dumazet <eric.dumazet@gmail.c,0,0,1
1289,1289,85,    ubifs: introduce helper functions for debugging checks and tests          this patch introduces helper functions for all debugging checks  so instead of     doing          if (!(ubifs_chk_flags & ubifs_chk_gen))          we now do          if (!dbg_is_chk_gen(c))          this is a preparation to further changes where the flags will go away  and     we'll need to only change th,0,1,1
1290,1290,170,    add config_debug_sg sg validation          add a kconfig entry which will toggle some sanity checks on the sg     entry and tables.          signed-off-by: jens axboe <jens.axboe@oracle.com> ,0,1,0
1291,1291,504,    fix bad commit. (bad developer  bad\!)          git-svn-id: http://svn-commit.rubyonrails.org/rails/trunk@2633 5ecf4fe2-1ee6-0310-87b1-e25e094e27de ,1,0,0
1292,1292,1055,"    unnecessary ""include waitforajax"" and ""include apihelpers""          removed all the unnecessary include of `waitforajax` and `apihelpers` in the specs.     removed unnecessary usage of `api:true` ",0,0,1
1293,1293,1866,    convert all coffeescript to javascript. see:          http://meta.discourse.org/t/is-it-better-for-discourse-to-use-javascript-or-coffeescript/3153 ,0,1,0
1294,1294,1097,    fix possible crash - we should never keep the zval** as they might point     somewhere into the engine. (there's still a new bug in strtok - hunting;-) ,1,0,0
1295,1295,1405,    new collection indexing model: removed old index protocols          ... and started to fix compiler errors. ,1,0,1
1296,1296,390,    fix spec. revert #truncate in stream (but still prevent redandant calls) ,1,0,0
1297,1297,1273,    :lipstick: introduce type for single folder case ,0,1,0
1298,1298,917,    unguice transport and friends (#20526)          this change removes all guice interaction from transport  httpservertransport      httpserver and transportservice. all these classes as well as their subclasses     or extended version configured via plugins are now created by using plain old     bloody java constructors. yay! ,0,0,1
1299,1299,1600,    search completion; refactor searchcompleter activation. ,0,0,1
1300,1300,1059,    improve completions testing (#23591) ,0,0,1
1301,1301,540,    cxgb4i/cxgb4 : refactor macros to conform to uniform standards          refactored all macros used in cxgb4i as part of previously started cxgb4 macro     names cleanup. makes them more uniform and avoids namespace collision.     minor changes in other drivers where required as some of these macros are used      by multiple drivers  affected drivers are iw_cxgb4  cxgb4(vf) & cs,0,0,1
1302,1302,1085,    implement a bit of context sensitive overload set resolution  resolving some fixme's     in name-binding and making progress towards 11088443               swift svn r1256 ,1,1,0
1303,1303,1656,    refactor keymetadata writing to a separate method ,0,0,1
1304,1304,1411,"    escapeanalysis: make escapestate and usepoints a property of the content node only.          for alias analysis query to be generally correct  we need to     effectively merge the escape state and use points for everything in a     defer web.          it was unclear from the current design whether the ""escaping"" property     applied to the pointer value or its content. the impl",1,0,0
1305,1305,1261,    rename private methods to follow async naming convention ,0,0,1
1306,1306,988,    sh: add sh7785 highlander board support (r7785rp).          this adds preliminary support for the sh7785-based highlander board.     some of the highlander support code is reordered so that most of it     can be reused directly.          this also plugs in missing sh7785 checks in the places that need it      as this is the first board to support the cpu.          signed-off-by,1,1,0
1307,1307,1071,    pki: allow username extraction to work for certs with cn only          our current ca configuration creates certificates with only a cn and this caused     the regular expression in the pki realm to fail. the default regular expression in     the pki realm has been changed to allow for only a cn  while still maintaining the     ability to extract only the cn when other fields a,1,0,1
1308,1308,198,    add trim page option ,0,1,0
1309,1309,533,    vendor buildkit to fix a couple of bugs          signed-off-by: tibor vass <tibor@docker.com> ,1,0,0
1310,1310,430,    deps: icu 61.1 bump          - update to released icu 61.1  including:       - cldr 33 (many new languages and data improvements)       - many small api additions  improvements  and bug fixes       - note: 'icu::' namespace is no longer used by default        (necessated https://github.com/nodejs/node/pull/18667 )          pr-url: https://github.com/nodejs/node/pull/19621     r,1,1,1
1311,1311,1927,    part 1 of #1712 - remove reflection in mutableobjectmodelbinder          this change introduces a new property to modelmetadata called     isbindingrequired  which specifies whether or not a model value must be     present on the wire during model binding.          [datamember(isrequired = true)] is currently the only thing that will set     this property.          updated test,0,1,0
1312,1312,734,    added unit tests for each of the patterns. ,0,1,0
1313,1313,1967,    add ability to specify a question mark annotation on a 'class' constraint. (#29407) ,0,1,0
1314,1314,1882,    fix broken side-by-side diff view on merge request page          closes #1294 ,1,0,0
1315,1315,941,    qed*: utilize firmware 8.15.3.0          this patch advances the qed* drivers into using the newer firmware -     this solves several firmware bugs  mostly related [but not limited to]     various init/deinit issues in various offloaded protocols.          it also introduces a major 4-cached sge change in firmware  which can be     seen in the storage drivers' changes.         ,1,0,1
1316,1316,1474,    rtlwifi: add check for get_btc_status callback          drivers that do not use the get_btc_status() callback may not define a     dummy routine. the caller needs to check before making the call.          signed-off-by: larry finger <larry.finger@lwfinger.net>     cc: murilo opsfelder araujo <mopsfelder@gmail.com>     cc: mike galbraith <umgwanakikbuti@gmail.com>     cc: thadeu,0,1,0
1317,1317,312,"    detach sched.h from mm.h          first thing mm.h does is including sched.h solely for can_do_mlock() inline     function which has ""current"" dereference inside. by dealing with can_do_mlock()     mm.h can be detached from sched.h which is good. see below  why.          this patch     a) removes unconditional inclusion of sched.h from mm.h     b) makes can_do_mlock() normal fu",0,0,1
1318,1318,1455,    drm/amd/amdgpu: tidy up gfx_v9_0_enable_gfx_dynamic_mg_power_gating()          signed-off-by: tom st denis <tom.stdenis@amd.com>     reviewed-by: alex deucher <alexander.deucher@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,0,1
1319,1319,1214,    x86/fpu: use validate_xstate_header() to validate the xstate_header in xstateregs_set()          tighten the checks in xstateregs_set().          signed-off-by: eric biggers <ebiggers@google.com>     cc: andrew morton <akpm@linux-foundation.org>     cc: andy lutomirski <luto@amacapital.net>     cc: andy lutomirski <luto@kernel.org>     cc: borislav petkov <bp@alien8.de>     cc:,0,0,1
1320,1320,1812,    src: replace fromjust() with check() when possible          fromjust() is often used not for its return value  but for its     side-effects. in these cases  check() exists  and is more clear as to     the intent. from its comment:            to be used  where the actual value of the maybe is not needed  like       object::set.          see: https://github.com/nodejs/node/pull/2,0,0,1
1321,1321,262,"    i386: improve and correct inline asm memory constraints          use ""+m"" rather than a combination of ""=m"" and ""m"" for improved clarity     and consistency.          this also fixes some inlines that incorrectly didn't tell the compiler     that they read the old value at all  potentially causing the compiler to     generate bogus code.  it appear that all of those potential b",1,0,1
1322,1322,460,    reiserfs: run scripts/lindent on reiserfs code          this was a pure indentation change  using:                  scripts/lindent fs/reiserfs/*.c include/linux/reiserfs_*.h          to make reiserfs match the regular linux indentation style.  as jeff     mahoney <jeffm@suse.com> writes:           the reiserfs code is a mix of a number of different coding styles  sometimes    ,0,1,0
1323,1323,46,    staging: gasket: add spdx identifiers to all files.          it's good to have spdx identifiers in all files to make it easier to     audit the kernel tree for correct licenses.          fix up the all of the staging gasket files to have a proper spdx     identifier  based on the license text in the file itself.  the spdx     identifier is a legally binding shorthand  which can,1,1,0
1324,1324,1948,    [foundation] measurement: fix hashing ,1,0,0
1325,1325,219,    fixed bug 697 ,1,0,0
1326,1326,223,    [scsi] qla4xxx: fix un-necessary delay on invalid ddb          fix the un-necessary wait for completion of a sendtarget on an     invalid ddb entry. the state of an invalid ddb entry is 0 (unassigned)          this will also avoid the delays during system boot.          signed-off-by: lalit chandivade <lalit.chandivade@qlogic.com>     signed-off-by: vikas chaudhary <vikas.chaud,1,0,1
1327,1327,189,    [transforms] merge master 08/09 (#10263)          * improve error message          * remove `supportedexpressionwithtypearguments` type; just check that the expression of each `expressionwithtypearguments` is an `entitynameexpression`.          * fix bug          * fix #10083 - allowsyntheticdefaultimports alters getexternalmodulemember (#10096)          * use recursion  and fi,1,0,1
1328,1328,1352,"    arm/pci: convert to pci_scan_root_bus() for correct root bus resources          convert from pci_scan_bus() to pci_scan_root_bus() and remove root bus     resource fixups.  this fixes the problem of ""early"" and ""header"" quirks     seeing incorrect root bus resources.          cc: russell king <linux@arm.linux.org.uk>     signed-off-by: bjorn helgaas <bhelgaas@google.com>     si",1,0,0
1329,1329,1079,    src: remove container_of  use container_of          container_of was introduced a while ago but was not used consistently     everywhere yet.  this commit fixes that.          why container_of instead of container_of?  the former makes it crystal     clear that it's a macro  not a function. ,1,0,0
1330,1330,246,    rcu/update: convert to spdx license identifier          replace the license boiler plate with a spdx license identifier.     while in the area  update an email address.          signed-off-by: paul e. mckenney <paulmck@linux.ibm.com>     reviewed-by: thomas gleixner <tglx@linutronix.de> ,0,0,1
1331,1331,1354,"    treewide: rename rcu_dereference_raw_notrace() to _check()          the rcu_dereference_raw_notrace() api name is confusing.  it is equivalent     to rcu_dereference_raw() except that it also does sparse pointer checking.          there are only a few users of rcu_dereference_raw_notrace(). this patches     renames all of them to be rcu_dereference_raw_check() with the ""_check(",0,0,1
1332,1332,723,    fsmonitor: update git_test_fsmonitor support          rename git_fsmonitor_test to git_test_fsmonitor for consistency with the     other git_test_ special setups and properly document its use.          add logic in t/test-lib.sh to give a warning when the old variable is set to     let people know they need to update their environment to use the new     variable.          remov,0,1,1
1333,1333,944,    jbd2: fix bh_jwrite setting in checkpointing code          bh_jwrite bit should be set when buffer is written to the journal. so     checkpointing shouldn't set this bit when writing out buffer. this didn't     cause any observable bug since bh_jwrite bit is used only for debugging     purposes but it's good to have this consistent.          signed-off-by: jan kara <jack@suse.c,1,0,1
1334,1334,1417,    bluetooth: remove redundant read_host_features commands          previously the write_le_enable would trigger a read_host_features     command but since we have access to the value le support was set to we     can simply just clear or set the bit in hdev->host_features. this also     removes a second unnecessary read_host_features command from the device     initialization proc,0,0,1
1335,1335,1502,    pkg/ioutils: remove unused functions          signed-off-by: stephen j day <stephen.day@docker.com> ,0,0,1
1336,1336,1199,    [master] fix 15179 missing comment in switch case clause (#16033)          * fix emit comments after switch case clause          * update baselines          * add new tests and baselines ,0,1,1
1337,1337,401,    gma500: opregion and acpi          add the opregion support and bring us in line with the opregion functionality in the     reference driver code. we can't share this with i915 currently because there are     hardcoded assumptions about dev_priv etc in both versions.          [airlied: include opregion.h fix]          signed-off-by: alan cox <alan@linux.intel.com>     signed-of,1,0,1
1338,1338,620,    b43: only select allowed tx and rx antennas          this fixes antenna selection in b43. it adds a sanity check     for the antenna numbers we get from mac80211.          this patch depends on     ssb: fix extraction of values from sprom          signed-off-by: michael buesch <mb@bu3sch.de>     signed-off-by: john w. linville <linville@tuxdriver.com> ,1,0,0
1339,1339,40,    drm/i915: parametrize and fix swf registers          parametrize the swf registers. this also fixes the register offsets      which were mostly garbage in the old defines.          also save/restore only as many swf registers that each platform has.          signed-off-by: ville syrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>     reviewed-by: jesse barnes <jbarnes@virtuousgeek.org>    ,1,0,0
1340,1340,1302,    [scsi] libfc: cleanup libfc_function_template comments          made the comments more like the comments for struct scsi_host_template.          signed-off-by: robert love <robert.w.love@intel.com>     signed-off-by: james bottomley <james.bottomley@hansenpartnership.com> ,0,0,1
1341,1341,1979,    staging: lustre: fix whitespace errors reported by checkpatch.pl          added/removed spaces and replaced '+1' with '1' in several places to     eliminate spacing and pointer_location errors reported by checkpatch.pl          signed-off-by: mike rapoport <mike.rapoport@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
1342,1342,1756,    support overrides for client-side validation messages     - #2969     - `remoteattribute` did not support `istringlocalizer` overrides      - use same `mvcdataannotationslocalizationoptions` property as for other `validationattribute`s     - error message `numericclientmodelvalidator` added could not be overridden      - not related to `istringlocalizer` because users have no w,0,1,0
1343,1343,1533,    feat(cli) new logging utility and verbose/debug args ,0,1,0
1344,1344,835,    arm: 7892/1: fix warning for v7m builds          fixes a harmless warning when building for v7m (!mmu):      arch/arm/kernel/traps.c:859:123: warning: 'kuser_init' defined but not used [-wunused-function]          by making the stub static inline instead of just static.          fixes: f6f91b0d9fd9 ('arm: allow kuser helpers to be removed from the vector page')          signed-,1,0,0
1345,1345,1701,    improve script builtin checking using schema (#7311)          improve script builtin checking using schema          * this add aten_schema.h which provides a barebones amount of type and       argument information about each builtin operator     * emitbuiltincall is updated to use this information rather than       aten_dispatch to ensure the operator is correct.     * handling,0,1,1
1346,1346,1599,    node to page: final todo-fixes          updates #2297 ,1,0,0
1347,1347,1739,    moved telemetry api to new data model api recommended by vs telemetry team.          also  now merged separate vs telemetry logger to one since telemetry activity is now obsolete. also remote host also now share logger since both is now on new api ,0,1,0
1348,1348,233,    make tf.cond remove the strict arg and emit a warning to say it has been set to true.          adds additional changes which ensure this warning is emitted if the original argument was positional.          piperorigin-revid: 228495150 ,0,1,0
1349,1349,1488,    usb: ftdi_sio: fix use-after-free in tiocmiwait          use the port wait queue and make sure to check the serial disconnected     flag before accessing private port data after waking up.          this is is needed as the private port data (including the wait queue     itself) can be gone when waking up after a disconnect.          when switching to tty ports  some lifetime as,1,0,0
1350,1350,1845,    add hook to add taghelperdirectivedescriptors.          - also added a test to validate that you can hook into the taghelperdescriptorresolutioncontext.          #214 ,0,1,0
1351,1351,194,"    add ""unread"" filter to messages tab. rename the other two views. ",0,1,0
1352,1352,2015,    [wext]: clean up how wext is called.          this patch cleans up the call paths from the core code into wext.          signed-off-by: johannes berg <johannes@sipsolutions.net>     signed-off-by: john w. linville <linville@tuxdriver.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
1353,1353,873,    fix: detection of error changed  so you can clear errors ,1,0,0
1354,1354,411,    alsa: use kbuild_modname for request_irq argument in sound/pci/*          the name argument of request_irq() appears in /proc/interrupts  and     it's quite ugly when the name entry contains a space or special letters.     in general  it's simpler and more readable when the module name appears     there  so let's replace all entries with kbuild_modname.          signed-off-by: ,0,0,1
1355,1355,1575,    [patch] fs/ntfs: conversion to generic boolean          conversion of booleans to: generic-boolean.patch (2006-08-23)          signed-off-by: richard knutsson <ricknu-0@student.ltu.se>     signed-off-by: anton altaparmakov <aia21@cantab.net>     signed-off-by: andrew morton <akpm@osdl.org>     signed-off-by: linus torvalds <torvalds@osdl.org> ,0,0,1
1356,1356,819,    net src: refactor writequeuesize tracking          currently  writequeuesize is never used in c++ and barely used     within js. instead of constantly updating the value on the js     object  create a getter that will retrieve the most up-to-date     value from c++.          for the vast majority of cases though  create a new prop on     socket.prototype[klastwritequeuesize] us,0,0,1
1357,1357,1319,    updates from sat 14 mar          - unforked rkwebview | nick lockwood     - [reactnative] add integration test stuff | spencer ahrens     - [reactnative] alertios.alert and examples | eric vicenti     - [react-packager] implement image loading i.e. ix('img') -> require('image!img'); | amjad masad     - fixed scrolloffset bug | nick lockwood     - [react native] update 2048 | al,1,0,0
1358,1358,1844,    staging: brcm80211: remove si sb utils from brcmfmac          si/sb utility is removed from broadcom fullmac driver.     all unused files are removed.          signed-off-by: franky lin <frankyl@broadcom.com>     signed-off-by: greg kroah-hartman <gregkh@suse.de> ,0,0,1
1359,1359,1454,    make navigationlegacynavigator more testable.          summary:- move the logics that manage the routes stack into `navigationlegacynavigatorroutestack`     - add more unit tests for navigationlegacynavigatorroutestack.     - keep navigationlegacynavigator as a pure view as possible as we could.          reviewed by: fkgozali          differential revision: d3060459          fb,0,1,0
1360,1360,776,    removed tracking of total method execution times          because method call timings are inclusive (that is  they include the     time of any sub method calls) this would lead to the total method     execution time often being far greater than the total transaction time.     because this is incredibly confusing it's best to simply _not_ track the     total method execution tim,0,0,1
1361,1361,1883,"    address tsan errors:          1. suppress safe racy init in abstractmultiset and hashbimap. all the classes that are stored in the newly annotated fields have only final fields (except hashbimap.inverse  which inherits abstractbimap's keyset and values fields  which are themselves @lazyinit)  so they are safe to read racily.          2. mark some graph ""cache"" fields as volatil",1,0,0
1362,1362,1266,    add restore function to v1 savedmodels loaded using load_v2  which restores other name-based checkpoints to the loaded savedmodel object.          piperorigin-revid: 286688840     change-id: i88049e98de254795193366f094a67ffba41c6ba8 ,0,1,0
1363,1363,1120,    mm: oom analysis: add per-zone statistics to show_free_areas()          show_free_areas() displays only a limited amount of zone counters.  this     patch includes additional counters in the display to allow easier     debugging.  this may be especially useful if an oom is due to running out     of dma memory.          signed-off-by: kosaki motohiro <kosaki.motohiro@jp.fujitsu.,0,1,0
1364,1364,777,    ath9k: read and write the tsf via debugfs          this patch adds an ath9k specific entry to read  write and reset the tsf into the debugfs  like in ath5k. this makes debugging the ibss handling of wifi drivers _much_ easier.          signed-off-by: alina friedrichsen <x-alina@gmx.net>     signed-off-by: john w. linville <linville@tuxdriver.com> ,0,1,0
1365,1365,1118,    remove painless grammar ambiguities.          closes #18531 ,0,0,1
1366,1366,482,    fix(ivy): include directive base class metadata when generating tcbs (#29698)          previously the template type-checking code only considered the metadata of     directive classes actually referenced in the template. if those directives     had base classes  any inputs/outputs/etc of the base classes were not     tracked when generating the tcb. this resulted in bindings to,1,0,0
1367,1367,1090,    fix typo (#1533) ,1,0,0
1368,1368,1760,    mlxsw: reg: add router algorithmic lpm tree binding register definition          this register is used to bind virtual router and protocol to an     allocated lpm tree.          signed-off-by: jiri pirko <jiri@mellanox.com>     reviewed-by: ido schimmel <idosch@mellanox.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,1,0
1369,1369,64,    vti: simplify error handling in module init and exit          the error handling in the module init and exit functions can be     shortened to safe us some code.          1/ remove the code duplications in the init function  jump straight to     the existing cleanup code by adding some labels. also give the error     message some more value by telling the reason why loading the,0,0,1
1370,1370,694,    add radio button in radio ,0,1,0
1371,1371,229,    refactor(menu): update menu animation and design for ios11 ,0,0,1
1372,1372,1212,    update ace editor to latest  fix regression where syntax highlighting was missing ,0,1,0
1373,1373,102,    drm/amdgpu/display: add dml support for dcn          display mode lib handles clock  watermark  and bandwidth     calculations for dcn.          signed-off-by: harry wentland <harry.wentland@amd.com>     signed-off-by: alex deucher <alexander.deucher@amd.com> ,0,1,0
1374,1374,236,    remove unnecessary min fee argument in ctxmempool constructor ,0,0,1
1375,1375,162,    implement several optimizations to reduce graph construction time.          in approximately decreasing order of significance:          1) cache various to_string  from_string  and string to string functionality in device.py.          2) optimize devicespec.to_string to reduce unnecessary string copies.          3) _skip no-op device assignments when creating ops. (when possibl,0,0,1
1376,1376,143,"    drivers: net: generalize napi_complete_done()          napi_complete_done() allows to opt-in for gro_flush_timeout      added back in linux-3.19  commit 3b47d30396ba     (""net: gro: add a per device gro flush timer"")          this allows for more efficient gro aggregation without     sacrifying latencies.          signed-off-by: eric dumazet <edumazet@google.com>     signed-off",0,0,1
1377,1377,654,    refactor(nav): implement nav integration with external router (angular to start) ,0,0,1
1378,1378,1166,    add missing hash  eql?  == to various node classes     some of the nodes classes are missing either one or many of the common comparison methods #hash  #eql? and #==.          this makes comparision and working with the ast sometimes painful  as equality or operations likes array differences (which uses a hash behind the scene) produces unexpected results.          a test has b,0,1,0
1379,1379,1888,    sh: support for multiple nodes.          this adds basic support for multiple nodes on sh machines.     this is primarily useful for boards with many different     memory blocks that are otherwise unused (sh7722/sh7785 uram     and so forth).          signed-off-by: paul mundt <lethal@linux-sh.org> ,0,1,0
1380,1380,149,    [transforms] merge master 06/06/2016 (#8991)          * remove check narrowing only certain types  add test showing issues with this          * string literal case test          * reconcile fix with cfa work          * defaultable -> notnarrowable to align with use          * missed a defaultable in comments          * add test for narrowing to unions of string literals        ,1,1,1
1381,1381,1576,    c++ api: torch::nn::convtranspose{1 2 3}d (#29721)          summary:     add torch::nn::convtranspose{1 2 3}d module and functional support for the c++ api.          related issue: https://github.com/pytorch/pytorch/issues/25883          reviewer: yf225     pull request resolved: https://github.com/pytorch/pytorch/pull/29721          differential revision: d18588943          pu,0,1,0
1382,1382,518,    [tf.data] deprecate `tf.contrib.data` and introduce `tf.data.experimental` to replace it.          this change prepares `tf.data` for tensorflow 2.0  where `tf.contrib` will no longer exist. it retains the pre-existing endpoints in `tf.contrib.data` with deprecation warnings.          note there are some exceptions to the move:          * deprecated symbols in `tf.contrib.data`,0,1,0
1383,1383,191,"    use more precise return types for objects          this ensures that q""object o"" is of type moduledef rather than     tree and similarly q""package object o"" is of type packagedef. ",0,0,1
1384,1384,1932,    netdev: ethernet dev_alloc_skb to netdev_alloc_skb          replaced deprecating dev_alloc_skb with netdev_alloc_skb in drivers/net/ethernet       - removed extra skb->dev = dev after netdev_alloc_skb          signed-off-by: pradeep a dalvi <netdev@pradeepdalvi.com>     signed-off-by: david s. miller <davem@davemloft.net> ,0,0,1
1385,1385,238,    nfp: flower: support ipv6 tunnel keep-alive messages from fw          fw sends an update of ipv6 tunnels that are active in a given period. use     this information to update the kernel table so that neighbour entries do     not time out when active on the nic.          signed-off-by: john hurley <john.hurley@netronome.com>     reviewed-by: simon horman <simon.horman@netronome.,0,1,0
1386,1386,299,    [spark-27354][sql] move incompatible code from the hive-thriftserver module to sql/hive-thriftserver/v1.2.1          ## what changes were proposed in this pull request?          when we upgraded the built-in hive to 2.3.4  the current `hive-thriftserver` module is not compatible  such as these hive changes:     1. [hive-12442](https://issues.apache.org/jira/browse/hive-12442) h,0,0,1
1387,1387,37,    dmaengine: ioatdma: remove ioat1 specific code          cleaning up of ioat1 specific code as it is no longer supported          signed-off-by: dave jiang <dave.jiang@intel.com>     acked-by: dan williams <dan.j.williams@intel.com>     signed-off-by: vinod koul <vinod.koul@intel.com> ,0,0,1
1388,1388,290,    net: sched: introduce ingress/egress block index attributes for qdisc          introduce two new attributes to be used for qdisc creation and dumping.     one for ingress block  one for egress block. introduce a set of ops that     qdisc which supports block sharing would implement.          passing block indexes in qdisc change is not supported yet and it is     checked and fo,0,1,0
1389,1389,1685,    refactorings report applicabletospan when registering (obvious cases). ,0,0,1
1390,1390,1815,    adding retaincontextwhenhidden test ,0,1,0
1391,1391,1321,    revised emit for computed property names  including with decorators (#19430)          * revised emit for computed property names          * fix downlevel name generation scopes          * accept slightly more conservative baseline          * first feedback pass          * reduce number of nonrequired variable declarations and assignments          * remove side-effect-free ident,1,0,1
1392,1392,1100,    staging: speakup: kobjects: delete space          added a space after multiple casts to fix the checkpath.pl issue:     check: no space is necessary after a cast.          signed-off-by: tamara diaconita <diaconita.tamara@gmail.com>     signed-off-by: greg kroah-hartman <gregkh@linuxfoundation.org> ,1,0,0
1393,1393,1703,    fix(common): extract plural function from i18n locale data files for ts 2.6 (#21626)          fixes #21608          pr close #21626 ,1,0,0
1394,1394,725,    i2c-au1550: fix timeout problem          i2c-au1550: fix timeout problem          fix from jordan crouse:     if the transmit and recieve fifos are not empty  forceably flush them     rather then waiting for them to drain on their own.          this solves at least a problem reported by clem taylor:     http://www.linux-mips.org/archives/linux-mips/2006-05/msg00240.html     (1%,1,0,1
1395,1395,1382,    rename addr to address in non-public api  #21874 ,0,0,1
1396,1396,1392,    rcu: more clearly identify grace-period kthread stack dump          it is not always obvious that the stack dump from a starved grace-period     kthread isn't instead that of a cpu stalling the current grace period.     this commit therefore adds a pr_err() flagging these dumps.          reported-by: peter zijlstra <peterz@infradead.org>     signed-off-by: paul e. mckenney <pau,0,1,1
1397,1397,1930,    add google collections to elasticsearch as source and remove binary dep ,0,1,0
1398,1398,1680,    really cleanup the serialized graphdef/engine when it's content is consumed. a simple test show that this saves 477mb memory for a trt-converted retinanet model.          piperorigin-revid: 235661968 ,0,0,1
1399,1399,827,    another fix for bug #42773 ,1,0,0
1400,1400,1186,    debug: introduce breakpoint.verified to model. ,0,1,0
1401,1401,160,    fixed bug: #11265 ,1,0,0
1402,1402,2029,    fix #23180 - generating source maps with relative path in sourceroot option produces maps with absolute file paths ,1,0,0
1403,1403,1465,    add comment to better describe algorithm ,0,0,1
1404,1404,1052,"    staging: move media drivers to staging/media          in practice  it is being hard to distinguish when a patch     should go to staging tree or to the media tree. better     to distinguish it  by putting the media drivers at a     separate staging directory. newer staging drivers that include     anything with ""dvb*.h""  ""v4l2*.h"" or ""videodev2.h"" should     go to the drivers/s",0,0,1
1405,1405,564,    jordan suggested i could use a named constant here instead of hardcoding the string  so that lldb could share the constant and we'd never get out of sync again. it's a clearly a good idea  and even though this entire islldbexpressionmodule() is a temporary hack  this improvement is worth it          swift svn r20046 ,0,0,1
1406,1406,1974,    improve strange-interpolation test          there were a number of mistakes in this test:          â¢ the whole thing was indented one space.     â¢Â some fix-it tests were malformed and therefore not being tested.     â¢ the output checking could in theory allow content before or after the intended content. ,1,0,1
1407,1407,1427,    asoc: arm: make pxa2xx-ac97-lib ac97 codec agnostic          all pxa library functions don't use the input parameters for nothing but     slot number. this simplifies their prototypes  and makes them usable by     both the legacy ac97 bus and the new ac97 bus.          signed-off-by: robert jarzmik <robert.jarzmik@free.fr>     signed-off-by: mark brown <broonie@kernel.org> ,0,1,1
1408,1408,617,    tensorflow: upstream changes to git.          change 109321497             move all images to images directory to make docs versioning easier             - adjust all paths in the docs to point to the new locations             - remove some now redundant section-order tags added for the old website     change 109317807             added a kernel op to compute the eigendecomposi,0,1,1
1409,1409,1645,    clockevents/drivers/timer-imx-gpt: migrate to new 'set-state' interface          migrate timer-imx-gpt driver to the new 'set-state' interface provided     by clockevents core  the earlier 'set-mode' interface is marked obsolete     now.          this also enables us to implement callbacks for new states of clockevent     devices  for example: oneshot_stopped.          also dro,0,1,0
1410,1410,397,    guaranteed removal of temporary files during tests.          dropped the django_test_temp_dir environment variable.          before this change  proper removal depended on the developer passing     dir=os.environ['django_test_tmp_dir'] to tempfile functions. ,0,0,1
1411,1411,1143,    perf tool: save cmdline from user in file header vs what is passed to record          a number of builtin commands process some user args and then pass the rest to     cmd_record. cmd_record then saves argc/argv that it receives into the header of     the perf data file. but this loses the arguments handled by the first command     -- ie.  the real command line from the user. t,0,0,1
1412,1412,251,    [media] fimc-lite: add isp fifo output support          add second source media pad for the fifo data output to fimc-is     and implement subdev s_stream op for configurations where fimc-lite     is used as a glue logic between fimc-is and mipi-csis or an image     sensor. the second source media pad will be linked to the fimc-lite     video node.     for proper configuration t,0,1,0
1413,1413,717,    gui: option to do case-insensitive regex search in searchlistview ,0,1,0
1414,1414,1869,    added rrdcalc management; preparation for expression evaluation ,0,1,0
1415,1415,1367,    dev: import emberobject rather than global variable (#8256)          * dev: import ember/object rather than ember.object globally          * fixed broken object proxy import          * prettier on js          * added @ember/object/proxy to loader          * added unstaged file          * fixed objet proxy reference is loader          * linting! ,1,1,0
1416,1416,908,    correct variable constructor docstring (#3871)          it's a constructor  so it doesn't return anything. i removed the comment stating that it returns a variable. ,1,0,0
1417,1417,1962,    [scsi] lpfc 8.3.32: fix error reporting of misconfigured ports          signed-off-by: alex iannicelli <alex.iannicelli@emulex.com>     signed-off-by: james smart <james.smart@emulex.com>     signed-off-by: james bottomley <jbottomley@parallels.com> ,1,0,0
1418,1418,550,    disable tests that are failing in tfv2 windows cpu/gpu builds.          piperorigin-revid: 251441123 ,1,0,0
1419,1419,1490,    s390/pkey: add cca aes cipher key support          introduce new ioctls and structs to be used with these new ioctls     which are able to handle cca aes secure keys and cca aes cipher keys:          pkey_genseck2: generate secure key  version 2.       generate either a cca aes secure key or a cca aes cipher key.          pkey_clr2seck2: generate secure key from clear key value,0,1,0
1420,1420,644,    [media] redrat3: ensure dma is setup properly          this fixes the driver on arm.          reported-by: steven guitton <keltiek@gmail.com>     tested-by: steven guitton <keltiek@gmail.com>     signed-off-by: sean young <sean@mess.org>     signed-off-by: mauro carvalho chehab <mchehab@osg.samsung.com> ,1,0,0
1421,1421,663,    arm: imx: remove imx_src_prepare_restart() call          there is ~10% possibility that the following emergency restart command     fails to reboot imx6q.          $ echo b > /proc/sysrq-trigger          the imx restart routine mxc_restart() assumes that it will always run on     primary core  and will call imx_src_prepare_restart() to disable     secondary cores in order to ge,1,0,0
1422,1422,1159,    omap1: fix booting for 15xx and 730 with omap1_defconfig          for omap15xx and 730 we need to use the mpu timer     as the 32k timer is not available. for omap16xx     we want to use the 32k timer because of pm. fix this     by allowing to build in both timers.          signed-off-by: tony lindgren <tony@atomide.com> ,1,0,0
1423,1423,670,    net: neighbour: add mcast_resolicit to configure the number of multicast resolicitations in probe state.          we send unicast neighbor (arp or ndp) solicitations ucast_probes     times in probe state.  zhu yanjun reported that some implementation     does not reply against them and the entry will become failed  which     is undesirable.          we had been dealt with such ,0,1,0
1424,1424,1410,    remove unused / obsolete import and throws statements          this commit removes unused thorws statements when runtimeexceptions are     mentioned in the throws statement. it also removes obsolete import statements     for java.lang.illegalargumentexception and java.lang.illegalstateexception ,0,0,1
